<?xml version="1.0"?>

<valgrindoutput>

<protocolversion>4</protocolversion>
<protocoltool>memcheck</protocoltool>

<preamble>
  <line>Memcheck, a memory error detector</line>
  <line>Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.</line>
  <line>Using Valgrind-3.15.0 and LibVEX; rerun with -h for copyright info</line>
  <line>Command: ./get_Percentiles_DeepState_TestHarness --input_test_file /home/akhila/fuzzer_packages/fuzzedpackages/ptsuite/inst/testfiles/get_Percentiles/get_Percentiles_output/c6443dbc808a79eb192b35d1cb3f366fca407fcf.crash</line>
</preamble>

<pid>550507</pid>
<ppid>550506</ppid>
<tool>memcheck</tool>

<args>
  <vargv>
    <exe>/usr/bin/valgrind.bin</exe>
    <arg>--xml=yes</arg>
    <arg>--xml-file=/home/akhila/fuzzer_packages/fuzzedpackages/ptsuite/inst/testfiles/get_Percentiles/get_Percentiles_output/log_c6443dbc808a79eb192b35d1cb3f366fca407fcf/valgrind_log</arg>
    <arg>--tool=memcheck</arg>
    <arg>--leak-check=yes</arg>
  </vargv>
  <argv>
    <exe>./get_Percentiles_DeepState_TestHarness</exe>
    <arg>--input_test_file</arg>
    <arg>/home/akhila/fuzzer_packages/fuzzedpackages/ptsuite/inst/testfiles/get_Percentiles/get_Percentiles_output/c6443dbc808a79eb192b35d1cb3f366fca407fcf.crash</arg>
  </argv>
</args>

<status>
  <state>RUNNING</state>
  <time>00:00:00:00.028 </time>
</status>

<error>
  <unique>0x0</unique>
  <tid>1</tid>
  <kind>InvalidRead</kind>
  <what>Invalid read of size 8</what>
  <stack>
    <frame>
      <ip>0x4D2CE77</ip>
      <obj>/home/akhila/fuzzer_packages/fuzzedpackages/ptsuite/src/ptsuite.so</obj>
      <fn>get_Percentiles(Rcpp::Vector&lt;14, Rcpp::PreserveStorage&gt;, Rcpp::Vector&lt;14, Rcpp::PreserveStorage&gt;)</fn>
      <dir>/home/akhila/fuzzer_packages/fuzzedpackages/ptsuite/src</dir>
      <file>c++_source.cpp</file>
      <line>340</line>
    </frame>
    <frame>
      <ip>0x409F3C</ip>
      <obj>/home/akhila/fuzzer_packages/fuzzedpackages/ptsuite/inst/testfiles/get_Percentiles/get_Percentiles_DeepState_TestHarness</obj>
      <fn>DeepState_Test_ptsuite_deepstate_test_get_Percentiles_test()</fn>
      <dir>/home/akhila/fuzzer_packages/fuzzedpackages/ptsuite/inst/testfiles/get_Percentiles</dir>
      <file>get_Percentiles_DeepState_TestHarness.cpp</file>
      <line>26</line>
    </frame>
    <frame>
      <ip>0x409B58</ip>
      <obj>/home/akhila/fuzzer_packages/fuzzedpackages/ptsuite/inst/testfiles/get_Percentiles/get_Percentiles_DeepState_TestHarness</obj>
      <fn>DeepState_Run_ptsuite_deepstate_test_get_Percentiles_test()</fn>
      <dir>/home/akhila/fuzzer_packages/fuzzedpackages/ptsuite/inst/testfiles/get_Percentiles</dir>
      <file>get_Percentiles_DeepState_TestHarness.cpp</file>
      <line>13</line>
    </frame>
    <frame>
      <ip>0x41CCF8</ip>
      <obj>/home/akhila/fuzzer_packages/fuzzedpackages/ptsuite/inst/testfiles/get_Percentiles/get_Percentiles_DeepState_TestHarness</obj>
      <fn>DeepState_RunTest.isra.0</fn>
    </frame>
    <frame>
      <ip>0x41CF99</ip>
      <obj>/home/akhila/fuzzer_packages/fuzzedpackages/ptsuite/inst/testfiles/get_Percentiles/get_Percentiles_DeepState_TestHarness</obj>
      <fn>DeepState_ForkAndRunTest</fn>
    </frame>
    <frame>
      <ip>0x41D074</ip>
      <obj>/home/akhila/fuzzer_packages/fuzzedpackages/ptsuite/inst/testfiles/get_Percentiles/get_Percentiles_DeepState_TestHarness</obj>
      <fn>DeepState_RunSavedTestCase</fn>
    </frame>
    <frame>
      <ip>0x407665</ip>
      <obj>/home/akhila/fuzzer_packages/fuzzedpackages/ptsuite/inst/testfiles/get_Percentiles/get_Percentiles_DeepState_TestHarness</obj>
      <fn>main</fn>
    </frame>
  </stack>
  <auxwhat>Address 0xffffdbf0547c0b98 is not stack'd, malloc'd or (recently) free'd</auxwhat>
</error>

<fatal_signal>
  <tid>1</tid>
  <signo>11</signo>
  <signame>SIGSEGV</signame>
  <sicode>1</sicode>
  <event>Access not within mapped region</event>
  <siaddr>0xFFFFDBF0547C0B98</siaddr>
  <stack>
    <frame>
      <ip>0x4D2CE77</ip>
      <obj>/home/akhila/fuzzer_packages/fuzzedpackages/ptsuite/src/ptsuite.so</obj>
      <fn>get_Percentiles(Rcpp::Vector&lt;14, Rcpp::PreserveStorage&gt;, Rcpp::Vector&lt;14, Rcpp::PreserveStorage&gt;)</fn>
      <dir>/home/akhila/fuzzer_packages/fuzzedpackages/ptsuite/src</dir>
      <file>c++_source.cpp</file>
      <line>340</line>
    </frame>
    <frame>
      <ip>0x409F3C</ip>
      <obj>/home/akhila/fuzzer_packages/fuzzedpackages/ptsuite/inst/testfiles/get_Percentiles/get_Percentiles_DeepState_TestHarness</obj>
      <fn>DeepState_Test_ptsuite_deepstate_test_get_Percentiles_test()</fn>
      <dir>/home/akhila/fuzzer_packages/fuzzedpackages/ptsuite/inst/testfiles/get_Percentiles</dir>
      <file>get_Percentiles_DeepState_TestHarness.cpp</file>
      <line>26</line>
    </frame>
    <frame>
      <ip>0x409B58</ip>
      <obj>/home/akhila/fuzzer_packages/fuzzedpackages/ptsuite/inst/testfiles/get_Percentiles/get_Percentiles_DeepState_TestHarness</obj>
      <fn>DeepState_Run_ptsuite_deepstate_test_get_Percentiles_test()</fn>
      <dir>/home/akhila/fuzzer_packages/fuzzedpackages/ptsuite/inst/testfiles/get_Percentiles</dir>
      <file>get_Percentiles_DeepState_TestHarness.cpp</file>
      <line>13</line>
    </frame>
    <frame>
      <ip>0x41CCF8</ip>
      <obj>/home/akhila/fuzzer_packages/fuzzedpackages/ptsuite/inst/testfiles/get_Percentiles/get_Percentiles_DeepState_TestHarness</obj>
      <fn>DeepState_RunTest.isra.0</fn>
    </frame>
    <frame>
      <ip>0x41CF99</ip>
      <obj>/home/akhila/fuzzer_packages/fuzzedpackages/ptsuite/inst/testfiles/get_Percentiles/get_Percentiles_DeepState_TestHarness</obj>
      <fn>DeepState_ForkAndRunTest</fn>
    </frame>
    <frame>
      <ip>0x41D074</ip>
      <obj>/home/akhila/fuzzer_packages/fuzzedpackages/ptsuite/inst/testfiles/get_Percentiles/get_Percentiles_DeepState_TestHarness</obj>
      <fn>DeepState_RunSavedTestCase</fn>
    </frame>
    <frame>
      <ip>0x407665</ip>
      <obj>/home/akhila/fuzzer_packages/fuzzedpackages/ptsuite/inst/testfiles/get_Percentiles/get_Percentiles_DeepState_TestHarness</obj>
      <fn>main</fn>
    </frame>
  </stack>
</fatal_signal>


<status>
  <state>FINISHED</state>
  <time>00:00:00:08.928 </time>
</status>

<errorcounts>
  <pair>
    <count>1</count>
    <unique>0x0</unique>
  </pair>
</errorcounts>

<suppcounts>
</suppcounts>

</valgrindoutput>


<status>
  <state>FINISHED</state>
  <time>00:00:00:09.655 </time>
</status>

<errorcounts>
</errorcounts>

<suppcounts>
</suppcounts>

</valgrindoutput>

