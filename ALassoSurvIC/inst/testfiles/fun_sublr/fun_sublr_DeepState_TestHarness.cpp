// AUTOMATICALLY GENERATED BY RCPPDEEPSTATE PLEASE DO NOT EDIT BY HAND, INSTEAD EDIT
// fun_sublr_DeepState_TestHarness_generation.cpp and fun_sublr_DeepState_TestHarness_checks.cpp

#include <fstream>
#include <RInside.h>
#include <iostream>
#include <RcppDeepState.h>
#include <qs.h>
#include <DeepState.hpp>

LogicalMatrix fun_sublr(NumericVector u, NumericVector l, NumericVector r);

TEST(ALassoSurvIC_deepstate_test,fun_sublr_test){
  RInside R;
  std::cout << "input starts" << std::endl;
  NumericVector u  = RcppDeepState_NumericVector();
  qs::c_qsave(u,"/home/akhila/fuzzer_packages/fuzzedpackages/ALassoSurvIC/inst/testfiles/fun_sublr/inputs/u.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "u values: "<< u << std::endl;
  NumericVector l  = RcppDeepState_NumericVector();
  qs::c_qsave(l,"/home/akhila/fuzzer_packages/fuzzedpackages/ALassoSurvIC/inst/testfiles/fun_sublr/inputs/l.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "l values: "<< l << std::endl;
  NumericVector r  = RcppDeepState_NumericVector();
  qs::c_qsave(r,"/home/akhila/fuzzer_packages/fuzzedpackages/ALassoSurvIC/inst/testfiles/fun_sublr/inputs/r.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "r values: "<< r << std::endl;
  std::cout << "input ends" << std::endl;
  try{
    fun_sublr(u,l,r);
  }
  catch(Rcpp::exception& e){
    std::cout<<"Exception Handled"<<std::endl;
  }
}
