// AUTOMATICALLY GENERATED BY RCPPDEEPSTATE PLEASE DO NOT EDIT BY HAND, INSTEAD EDIT
// murakami_stat_perms_DeepState_TestHarness_generation.cpp and murakami_stat_perms_DeepState_TestHarness_checks.cpp

#include <fstream>
#include <RInside.h>
#include <iostream>
#include <RcppDeepState.h>
#include <qs.h>
#include <DeepState.hpp>

NumericVector murakami_stat_perms(int nx, int ny, int flavor);

TEST(BWStest_deepstate_test,murakami_stat_perms_test){
  RInside R;
  std::cout << "input starts" << std::endl;
  IntegerVector nx(1);
  nx[0]  = RcppDeepState_int();
  qs::c_qsave(nx,"/home/akhila/fuzzer_packages/fuzzedpackages/BWStest/inst/testfiles/murakami_stat_perms/inputs/nx.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "nx values: "<< nx << std::endl;
  IntegerVector ny(1);
  ny[0]  = RcppDeepState_int();
  qs::c_qsave(ny,"/home/akhila/fuzzer_packages/fuzzedpackages/BWStest/inst/testfiles/murakami_stat_perms/inputs/ny.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "ny values: "<< ny << std::endl;
  IntegerVector flavor(1);
  flavor[0]  = RcppDeepState_int();
  qs::c_qsave(flavor,"/home/akhila/fuzzer_packages/fuzzedpackages/BWStest/inst/testfiles/murakami_stat_perms/inputs/flavor.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "flavor values: "<< flavor << std::endl;
  std::cout << "input ends" << std::endl;
  try{
    murakami_stat_perms(nx[0],ny[0],flavor[0]);
  }
  catch(Rcpp::exception& e){
    std::cout<<"Exception Handled"<<std::endl;
  }
}
