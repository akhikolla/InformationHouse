// AUTOMATICALLY GENERATED BY RCPPDEEPSTATE PLEASE DO NOT EDIT BY HAND, INSTEAD EDIT
// fdrseg_cpp_DeepState_TestHarness_generation.cpp and fdrseg_cpp_DeepState_TestHarness_checks.cpp

#include <fstream>
#include <RInside.h>
#include <iostream>
#include <RcppDeepState.h>
#include <qs.h>
#include <DeepState.hpp>

List fdrseg_cpp(NumericVector Y, NumericVector q, NumericVector qm, double sd);

TEST(FDRSeg_deepstate_test,fdrseg_cpp_test){
  RInside R;
  std::cout << "input starts" << std::endl;
  NumericVector Y  = RcppDeepState_NumericVector();
  qs::c_qsave(Y,"/home/akhila/fuzzer_packages/fuzzedpackages/FDRSeg/inst/testfiles/fdrseg_cpp/inputs/Y.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "Y values: "<< Y << std::endl;
  NumericVector q  = RcppDeepState_NumericVector();
  qs::c_qsave(q,"/home/akhila/fuzzer_packages/fuzzedpackages/FDRSeg/inst/testfiles/fdrseg_cpp/inputs/q.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "q values: "<< q << std::endl;
  NumericVector qm  = RcppDeepState_NumericVector();
  qs::c_qsave(qm,"/home/akhila/fuzzer_packages/fuzzedpackages/FDRSeg/inst/testfiles/fdrseg_cpp/inputs/qm.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "qm values: "<< qm << std::endl;
  NumericVector sd(1);
  sd[0]  = RcppDeepState_double();
  qs::c_qsave(sd,"/home/akhila/fuzzer_packages/fuzzedpackages/FDRSeg/inst/testfiles/fdrseg_cpp/inputs/sd.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "sd values: "<< sd << std::endl;
  std::cout << "input ends" << std::endl;
  try{
    fdrseg_cpp(Y,q,qm,sd[0]);
  }
  catch(Rcpp::exception& e){
    std::cout<<"Exception Handled"<<std::endl;
  }
}
