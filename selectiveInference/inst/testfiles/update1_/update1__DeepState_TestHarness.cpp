// AUTOMATICALLY GENERATED BY RCPPDEEPSTATE PLEASE DO NOT EDIT BY HAND, INSTEAD EDIT
// update1__DeepState_TestHarness_generation.cpp and update1__DeepState_TestHarness_checks.cpp

#include <fstream>
#include <RInside.h>
#include <iostream>
#include <RcppDeepState.h>
#include <qs.h>
#include <DeepState.hpp>

Rcpp::List update1_(Rcpp::NumericMatrix Q2, Rcpp::NumericVector w, int m, int k);

TEST(selectiveInference_deepstate_test,update1__test){
  RInside R;
  std::cout << "input starts" << std::endl;
  NumericMatrix Q2  = RcppDeepState_NumericMatrix();
  qs::c_qsave(Q2,"/home/akhila/fuzzer_packages/fuzzedpackages/selectiveInference/inst/testfiles/update1_/inputs/Q2.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "Q2 values: "<< Q2 << std::endl;
  NumericVector w  = RcppDeepState_NumericVector();
  qs::c_qsave(w,"/home/akhila/fuzzer_packages/fuzzedpackages/selectiveInference/inst/testfiles/update1_/inputs/w.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "w values: "<< w << std::endl;
  IntegerVector m(1);
  m[0]  = RcppDeepState_int();
  qs::c_qsave(m,"/home/akhila/fuzzer_packages/fuzzedpackages/selectiveInference/inst/testfiles/update1_/inputs/m.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "m values: "<< m << std::endl;
  IntegerVector k(1);
  k[0]  = RcppDeepState_int();
  qs::c_qsave(k,"/home/akhila/fuzzer_packages/fuzzedpackages/selectiveInference/inst/testfiles/update1_/inputs/k.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "k values: "<< k << std::endl;
  std::cout << "input ends" << std::endl;
  try{
    update1_(Q2,w,m[0],k[0]);
  }
  catch(Rcpp::exception& e){
    std::cout<<"Exception Handled"<<std::endl;
  }
}
