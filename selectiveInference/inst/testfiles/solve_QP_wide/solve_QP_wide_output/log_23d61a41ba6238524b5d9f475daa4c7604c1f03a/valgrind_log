<?xml version="1.0"?>

<valgrindoutput>

<protocolversion>4</protocolversion>
<protocoltool>memcheck</protocoltool>

<preamble>
  <line>Memcheck, a memory error detector</line>
  <line>Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.</line>
  <line>Using Valgrind-3.15.0 and LibVEX; rerun with -h for copyright info</line>
  <line>Command: ./solve_QP_wide_DeepState_TestHarness --input_test_file /home/akhila/fuzzer_packages/fuzzedpackages/selectiveInference/inst/testfiles/solve_QP_wide/solve_QP_wide_output/23d61a41ba6238524b5d9f475daa4c7604c1f03a.crash</line>
</preamble>

<pid>440053</pid>
<ppid>440052</ppid>
<tool>memcheck</tool>

<args>
  <vargv>
    <exe>/usr/bin/valgrind.bin</exe>
    <arg>--xml=yes</arg>
    <arg>--xml-file=/home/akhila/fuzzer_packages/fuzzedpackages/selectiveInference/inst/testfiles/solve_QP_wide/solve_QP_wide_output/log_23d61a41ba6238524b5d9f475daa4c7604c1f03a/valgrind_log</arg>
    <arg>--tool=memcheck</arg>
    <arg>--leak-check=yes</arg>
  </vargv>
  <argv>
    <exe>./solve_QP_wide_DeepState_TestHarness</exe>
    <arg>--input_test_file</arg>
    <arg>/home/akhila/fuzzer_packages/fuzzedpackages/selectiveInference/inst/testfiles/solve_QP_wide/solve_QP_wide_output/23d61a41ba6238524b5d9f475daa4c7604c1f03a.crash</arg>
  </argv>
</args>

<status>
  <state>RUNNING</state>
  <time>00:00:00:00.026 </time>
</status>

<error>
  <unique>0x0</unique>
  <tid>1</tid>
  <kind>InvalidRead</kind>
  <what>Invalid read of size 8</what>
  <stack>
    <frame>
      <ip>0x4D3247B</ip>
      <obj>/home/akhila/fuzzer_packages/fuzzedpackages/selectiveInference/src/selectiveInference.so</obj>
      <fn>objective_wide</fn>
      <dir>/home/akhila/fuzzer_packages/fuzzedpackages/selectiveInference/src</dir>
      <file>quadratic_program_wide.c</file>
      <line>56</line>
    </frame>
    <frame>
      <ip>0x4D32C4E</ip>
      <obj>/home/akhila/fuzzer_packages/fuzzedpackages/selectiveInference/src/selectiveInference.so</obj>
      <fn>solve_wide</fn>
      <dir>/home/akhila/fuzzer_packages/fuzzedpackages/selectiveInference/src</dir>
      <file>quadratic_program_wide.c</file>
      <line>427</line>
    </frame>
    <frame>
      <ip>0x4D2497D</ip>
      <obj>/home/akhila/fuzzer_packages/fuzzedpackages/selectiveInference/src/selectiveInference.so</obj>
      <fn>solve_QP_wide(Rcpp::Matrix&lt;14, Rcpp::PreserveStorage&gt;, Rcpp::Vector&lt;14, Rcpp::PreserveStorage&gt;, double, int, Rcpp::Vector&lt;14, Rcpp::PreserveStorage&gt;, Rcpp::Vector&lt;14, Rcpp::PreserveStorage&gt;, Rcpp::Vector&lt;14, Rcpp::PreserveStorage&gt;, Rcpp::Vector&lt;14, Rcpp::PreserveStorage&gt;, Rcpp::Vector&lt;13, Rcpp::PreserveStorage&gt;, Rcpp::Vector&lt;13, Rcpp::PreserveStorage&gt;, double, double, double, int, int, int, int)</fn>
      <dir>/home/akhila/fuzzer_packages/fuzzedpackages/selectiveInference/src</dir>
      <file>Rcpp-debias.cpp</file>
      <line>132</line>
    </frame>
    <frame>
      <ip>0x40BD20</ip>
      <obj>/home/akhila/fuzzer_packages/fuzzedpackages/selectiveInference/inst/testfiles/solve_QP_wide/solve_QP_wide_DeepState_TestHarness</obj>
      <fn>DeepState_Test_selectiveInference_deepstate_test_solve_QP_wide_test()</fn>
      <dir>/home/akhila/fuzzer_packages/fuzzedpackages/selectiveInference/inst/testfiles/solve_QP_wide</dir>
      <file>solve_QP_wide_DeepState_TestHarness.cpp</file>
      <line>95</line>
    </frame>
    <frame>
      <ip>0x409BA8</ip>
      <obj>/home/akhila/fuzzer_packages/fuzzedpackages/selectiveInference/inst/testfiles/solve_QP_wide/solve_QP_wide_DeepState_TestHarness</obj>
      <fn>DeepState_Run_selectiveInference_deepstate_test_solve_QP_wide_test()</fn>
      <dir>/home/akhila/fuzzer_packages/fuzzedpackages/selectiveInference/inst/testfiles/solve_QP_wide</dir>
      <file>solve_QP_wide_DeepState_TestHarness.cpp</file>
      <line>13</line>
    </frame>
    <frame>
      <ip>0x4203C8</ip>
      <obj>/home/akhila/fuzzer_packages/fuzzedpackages/selectiveInference/inst/testfiles/solve_QP_wide/solve_QP_wide_DeepState_TestHarness</obj>
      <fn>DeepState_RunTest.isra.0</fn>
    </frame>
    <frame>
      <ip>0x420669</ip>
      <obj>/home/akhila/fuzzer_packages/fuzzedpackages/selectiveInference/inst/testfiles/solve_QP_wide/solve_QP_wide_DeepState_TestHarness</obj>
      <fn>DeepState_ForkAndRunTest</fn>
    </frame>
    <frame>
      <ip>0x420744</ip>
      <obj>/home/akhila/fuzzer_packages/fuzzedpackages/selectiveInference/inst/testfiles/solve_QP_wide/solve_QP_wide_DeepState_TestHarness</obj>
      <fn>DeepState_RunSavedTestCase</fn>
    </frame>
    <frame>
      <ip>0x4076B5</ip>
      <obj>/home/akhila/fuzzer_packages/fuzzedpackages/selectiveInference/inst/testfiles/solve_QP_wide/solve_QP_wide_DeepState_TestHarness</obj>
      <fn>main</fn>
    </frame>
  </stack>
  <auxwhat>Address 0xffffffffb973b4a8 is not stack'd, malloc'd or (recently) free'd</auxwhat>
</error>

<fatal_signal>
  <tid>1</tid>
  <signo>11</signo>
  <signame>SIGSEGV</signame>
  <sicode>1</sicode>
  <event>Access not within mapped region</event>
  <siaddr>0xFFFFFFFFB973B4A8</siaddr>
  <stack>
    <frame>
      <ip>0x4D3247B</ip>
      <obj>/home/akhila/fuzzer_packages/fuzzedpackages/selectiveInference/src/selectiveInference.so</obj>
      <fn>objective_wide</fn>
      <dir>/home/akhila/fuzzer_packages/fuzzedpackages/selectiveInference/src</dir>
      <file>quadratic_program_wide.c</file>
      <line>56</line>
    </frame>
    <frame>
      <ip>0x4D32C4E</ip>
      <obj>/home/akhila/fuzzer_packages/fuzzedpackages/selectiveInference/src/selectiveInference.so</obj>
      <fn>solve_wide</fn>
      <dir>/home/akhila/fuzzer_packages/fuzzedpackages/selectiveInference/src</dir>
      <file>quadratic_program_wide.c</file>
      <line>427</line>
    </frame>
    <frame>
      <ip>0x4D2497D</ip>
      <obj>/home/akhila/fuzzer_packages/fuzzedpackages/selectiveInference/src/selectiveInference.so</obj>
      <fn>solve_QP_wide(Rcpp::Matrix&lt;14, Rcpp::PreserveStorage&gt;, Rcpp::Vector&lt;14, Rcpp::PreserveStorage&gt;, double, int, Rcpp::Vector&lt;14, Rcpp::PreserveStorage&gt;, Rcpp::Vector&lt;14, Rcpp::PreserveStorage&gt;, Rcpp::Vector&lt;14, Rcpp::PreserveStorage&gt;, Rcpp::Vector&lt;14, Rcpp::PreserveStorage&gt;, Rcpp::Vector&lt;13, Rcpp::PreserveStorage&gt;, Rcpp::Vector&lt;13, Rcpp::PreserveStorage&gt;, double, double, double, int, int, int, int)</fn>
      <dir>/home/akhila/fuzzer_packages/fuzzedpackages/selectiveInference/src</dir>
      <file>Rcpp-debias.cpp</file>
      <line>132</line>
    </frame>
    <frame>
      <ip>0x40BD20</ip>
      <obj>/home/akhila/fuzzer_packages/fuzzedpackages/selectiveInference/inst/testfiles/solve_QP_wide/solve_QP_wide_DeepState_TestHarness</obj>
      <fn>DeepState_Test_selectiveInference_deepstate_test_solve_QP_wide_test()</fn>
      <dir>/home/akhila/fuzzer_packages/fuzzedpackages/selectiveInference/inst/testfiles/solve_QP_wide</dir>
      <file>solve_QP_wide_DeepState_TestHarness.cpp</file>
      <line>95</line>
    </frame>
    <frame>
      <ip>0x409BA8</ip>
      <obj>/home/akhila/fuzzer_packages/fuzzedpackages/selectiveInference/inst/testfiles/solve_QP_wide/solve_QP_wide_DeepState_TestHarness</obj>
      <fn>DeepState_Run_selectiveInference_deepstate_test_solve_QP_wide_test()</fn>
      <dir>/home/akhila/fuzzer_packages/fuzzedpackages/selectiveInference/inst/testfiles/solve_QP_wide</dir>
      <file>solve_QP_wide_DeepState_TestHarness.cpp</file>
      <line>13</line>
    </frame>
    <frame>
      <ip>0x4203C8</ip>
      <obj>/home/akhila/fuzzer_packages/fuzzedpackages/selectiveInference/inst/testfiles/solve_QP_wide/solve_QP_wide_DeepState_TestHarness</obj>
      <fn>DeepState_RunTest.isra.0</fn>
    </frame>
    <frame>
      <ip>0x420669</ip>
      <obj>/home/akhila/fuzzer_packages/fuzzedpackages/selectiveInference/inst/testfiles/solve_QP_wide/solve_QP_wide_DeepState_TestHarness</obj>
      <fn>DeepState_ForkAndRunTest</fn>
    </frame>
    <frame>
      <ip>0x420744</ip>
      <obj>/home/akhila/fuzzer_packages/fuzzedpackages/selectiveInference/inst/testfiles/solve_QP_wide/solve_QP_wide_DeepState_TestHarness</obj>
      <fn>DeepState_RunSavedTestCase</fn>
    </frame>
    <frame>
      <ip>0x4076B5</ip>
      <obj>/home/akhila/fuzzer_packages/fuzzedpackages/selectiveInference/inst/testfiles/solve_QP_wide/solve_QP_wide_DeepState_TestHarness</obj>
      <fn>main</fn>
    </frame>
  </stack>
</fatal_signal>


<status>
  <state>FINISHED</state>
  <time>00:00:00:08.369 </time>
</status>

<errorcounts>
  <pair>
    <count>1</count>
    <unique>0x0</unique>
  </pair>
</errorcounts>

<suppcounts>
</suppcounts>

</valgrindoutput>


<status>
  <state>FINISHED</state>
  <time>00:00:00:09.015 </time>
</status>

<errorcounts>
</errorcounts>

<suppcounts>
</suppcounts>

</valgrindoutput>

