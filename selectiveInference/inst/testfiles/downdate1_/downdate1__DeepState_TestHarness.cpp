// AUTOMATICALLY GENERATED BY RCPPDEEPSTATE PLEASE DO NOT EDIT BY HAND, INSTEAD EDIT
// downdate1__DeepState_TestHarness_generation.cpp and downdate1__DeepState_TestHarness_checks.cpp

#include <fstream>
#include <RInside.h>
#include <iostream>
#include <RcppDeepState.h>
#include <qs.h>
#include <DeepState.hpp>

Rcpp::List downdate1_(Rcpp::NumericMatrix Q1, Rcpp::NumericMatrix R, int j0, int m, int n);

TEST(selectiveInference_deepstate_test,downdate1__test){
  RInside R;
  std::cout << "input starts" << std::endl;
  NumericMatrix Q1  = RcppDeepState_NumericMatrix();
  qs::c_qsave(Q1,"/home/akhila/fuzzer_packages/fuzzedpackages/selectiveInference/inst/testfiles/downdate1_/inputs/Q1.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "Q1 values: "<< Q1 << std::endl;
  NumericMatrix R  = RcppDeepState_NumericMatrix();
  qs::c_qsave(R,"/home/akhila/fuzzer_packages/fuzzedpackages/selectiveInference/inst/testfiles/downdate1_/inputs/R.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "R values: "<< R << std::endl;
  IntegerVector j0(1);
  j0[0]  = RcppDeepState_int();
  qs::c_qsave(j0,"/home/akhila/fuzzer_packages/fuzzedpackages/selectiveInference/inst/testfiles/downdate1_/inputs/j0.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "j0 values: "<< j0 << std::endl;
  IntegerVector m(1);
  m[0]  = RcppDeepState_int();
  qs::c_qsave(m,"/home/akhila/fuzzer_packages/fuzzedpackages/selectiveInference/inst/testfiles/downdate1_/inputs/m.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "m values: "<< m << std::endl;
  IntegerVector n(1);
  n[0]  = RcppDeepState_int();
  qs::c_qsave(n,"/home/akhila/fuzzer_packages/fuzzedpackages/selectiveInference/inst/testfiles/downdate1_/inputs/n.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "n values: "<< n << std::endl;
  std::cout << "input ends" << std::endl;
  try{
    downdate1_(Q1,R,j0[0],m[0],n[0]);
  }
  catch(Rcpp::exception& e){
    std::cout<<"Exception Handled"<<std::endl;
  }
}
