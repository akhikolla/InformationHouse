// AUTOMATICALLY GENERATED BY RCPPDEEPSTATE PLEASE DO NOT EDIT BY HAND, INSTEAD EDIT
// segregationcalc_DeepState_TestHarness_generation.cpp and segregationcalc_DeepState_TestHarness_checks.cpp

#include <fstream>
#include <RInside.h>
#include <iostream>
#include <RcppDeepState.h>
#include <qs.h>
#include <DeepState.hpp>

NumericVector segregationcalc(NumericMatrix distmat, NumericVector grouppop, NumericVector fullpop);

TEST(redist_deepstate_test,segregationcalc_test){
  RInside R;
  std::cout << "input starts" << std::endl;
  NumericMatrix distmat  = RcppDeepState_NumericMatrix();
  qs::c_qsave(distmat,"/home/akhila/fuzzer_packages/fuzzedpackages/redist/inst/testfiles/segregationcalc/inputs/distmat.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "distmat values: "<< distmat << std::endl;
  NumericVector grouppop  = RcppDeepState_NumericVector();
  qs::c_qsave(grouppop,"/home/akhila/fuzzer_packages/fuzzedpackages/redist/inst/testfiles/segregationcalc/inputs/grouppop.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "grouppop values: "<< grouppop << std::endl;
  NumericVector fullpop  = RcppDeepState_NumericVector();
  qs::c_qsave(fullpop,"/home/akhila/fuzzer_packages/fuzzedpackages/redist/inst/testfiles/segregationcalc/inputs/fullpop.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "fullpop values: "<< fullpop << std::endl;
  std::cout << "input ends" << std::endl;
  try{
    segregationcalc(distmat,grouppop,fullpop);
  }
  catch(Rcpp::exception& e){
    std::cout<<"Exception Handled"<<std::endl;
  }
}
