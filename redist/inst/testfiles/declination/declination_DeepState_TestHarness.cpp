// AUTOMATICALLY GENERATED BY RCPPDEEPSTATE PLEASE DO NOT EDIT BY HAND, INSTEAD EDIT
// declination_DeepState_TestHarness_generation.cpp and declination_DeepState_TestHarness_checks.cpp

#include <fstream>
#include <RInside.h>
#include <iostream>
#include <RcppDeepState.h>
#include <qs.h>
#include <DeepState.hpp>

NumericVector declination(NumericMatrix dvs, IntegerVector dseat_vec, int nd);

TEST(redist_deepstate_test,declination_test){
  RInside R;
  std::cout << "input starts" << std::endl;
  NumericMatrix dvs  = RcppDeepState_NumericMatrix();
  qs::c_qsave(dvs,"/home/akhila/fuzzer_packages/fuzzedpackages/redist/inst/testfiles/declination/inputs/dvs.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "dvs values: "<< dvs << std::endl;
  IntegerVector dseat_vec  = RcppDeepState_IntegerVector();
  qs::c_qsave(dseat_vec,"/home/akhila/fuzzer_packages/fuzzedpackages/redist/inst/testfiles/declination/inputs/dseat_vec.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "dseat_vec values: "<< dseat_vec << std::endl;
  IntegerVector nd(1);
  nd[0]  = RcppDeepState_int();
  qs::c_qsave(nd,"/home/akhila/fuzzer_packages/fuzzedpackages/redist/inst/testfiles/declination/inputs/nd.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "nd values: "<< nd << std::endl;
  std::cout << "input ends" << std::endl;
  try{
    declination(dvs,dseat_vec,nd[0]);
  }
  catch(Rcpp::exception& e){
    std::cout<<"Exception Handled"<<std::endl;
  }
}
