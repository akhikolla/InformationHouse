// AUTOMATICALLY GENERATED BY RCPPDEEPSTATE PLEASE DO NOT EDIT BY HAND, INSTEAD EDIT
// centroidPoints__DeepState_TestHarness_generation.cpp and centroidPoints__DeepState_TestHarness_checks.cpp

#include <fstream>
#include <RInside.h>
#include <iostream>
#include <RcppDeepState.h>
#include <qs.h>
#include <DeepState.hpp>

NumericMatrix centroidPoints_(NumericMatrix coords, NumericMatrix combin, NumericVector center, int breaks);

TEST(icosa_deepstate_test,centroidPoints__test){
  RInside R;
  std::cout << "input starts" << std::endl;
  NumericMatrix coords  = RcppDeepState_NumericMatrix();
  qs::c_qsave(coords,"/home/akhila/fuzzer_packages/fuzzedpackages/icosa/inst/testfiles/centroidPoints_/inputs/coords.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "coords values: "<< coords << std::endl;
  NumericMatrix combin  = RcppDeepState_NumericMatrix();
  qs::c_qsave(combin,"/home/akhila/fuzzer_packages/fuzzedpackages/icosa/inst/testfiles/centroidPoints_/inputs/combin.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "combin values: "<< combin << std::endl;
  NumericVector center  = RcppDeepState_NumericVector();
  qs::c_qsave(center,"/home/akhila/fuzzer_packages/fuzzedpackages/icosa/inst/testfiles/centroidPoints_/inputs/center.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "center values: "<< center << std::endl;
  IntegerVector breaks(1);
  breaks[0]  = RcppDeepState_int();
  qs::c_qsave(breaks,"/home/akhila/fuzzer_packages/fuzzedpackages/icosa/inst/testfiles/centroidPoints_/inputs/breaks.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "breaks values: "<< breaks << std::endl;
  std::cout << "input ends" << std::endl;
  try{
    centroidPoints_(coords,combin,center,breaks[0]);
  }
  catch(Rcpp::exception& e){
    std::cout<<"Exception Handled"<<std::endl;
  }
}
