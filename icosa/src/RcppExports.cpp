// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <Rcpp.h>

using namespace Rcpp;

// Collapse_
NumericVector Collapse_(NumericVector vect);
RcppExport SEXP _icosa_Collapse_(SEXP vectSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type vect(vectSEXP);
    rcpp_result_gen = Rcpp::wrap(Collapse_(vect));
    return rcpp_result_gen;
END_RCPP
}
// ArcDist_
double ArcDist_(NumericVector coord1, NumericVector coord2, NumericVector origin, bool method);
RcppExport SEXP _icosa_ArcDist_(SEXP coord1SEXP, SEXP coord2SEXP, SEXP originSEXP, SEXP methodSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type coord1(coord1SEXP);
    Rcpp::traits::input_parameter< NumericVector >::type coord2(coord2SEXP);
    Rcpp::traits::input_parameter< NumericVector >::type origin(originSEXP);
    Rcpp::traits::input_parameter< bool >::type method(methodSEXP);
    rcpp_result_gen = Rcpp::wrap(ArcDist_(coord1, coord2, origin, method));
    return rcpp_result_gen;
END_RCPP
}
// SymmetricArcDistMat_
NumericMatrix SymmetricArcDistMat_(NumericMatrix xyzMat, NumericVector origin, bool method);
RcppExport SEXP _icosa_SymmetricArcDistMat_(SEXP xyzMatSEXP, SEXP originSEXP, SEXP methodSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericMatrix >::type xyzMat(xyzMatSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type origin(originSEXP);
    Rcpp::traits::input_parameter< bool >::type method(methodSEXP);
    rcpp_result_gen = Rcpp::wrap(SymmetricArcDistMat_(xyzMat, origin, method));
    return rcpp_result_gen;
END_RCPP
}
// ArcDistMat_
NumericMatrix ArcDistMat_(NumericMatrix gridPoints, NumericMatrix queries, NumericVector origin, bool method);
RcppExport SEXP _icosa_ArcDistMat_(SEXP gridPointsSEXP, SEXP queriesSEXP, SEXP originSEXP, SEXP methodSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericMatrix >::type gridPoints(gridPointsSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type queries(queriesSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type origin(originSEXP);
    Rcpp::traits::input_parameter< bool >::type method(methodSEXP);
    rcpp_result_gen = Rcpp::wrap(ArcDistMat_(gridPoints, queries, origin, method));
    return rcpp_result_gen;
END_RCPP
}
// ArcDistMany_
NumericVector ArcDistMany_(NumericMatrix p0, NumericMatrix p1, NumericVector origin, bool method);
RcppExport SEXP _icosa_ArcDistMany_(SEXP p0SEXP, SEXP p1SEXP, SEXP originSEXP, SEXP methodSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericMatrix >::type p0(p0SEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type p1(p1SEXP);
    Rcpp::traits::input_parameter< NumericVector >::type origin(originSEXP);
    Rcpp::traits::input_parameter< bool >::type method(methodSEXP);
    rcpp_result_gen = Rcpp::wrap(ArcDistMany_(p0, p1, origin, method));
    return rcpp_result_gen;
END_RCPP
}
// whichMinVector_
int whichMinVector_(NumericVector one);
RcppExport SEXP _icosa_whichMinVector_(SEXP oneSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type one(oneSEXP);
    rcpp_result_gen = Rcpp::wrap(whichMinVector_(one));
    return rcpp_result_gen;
END_RCPP
}
// Aggregate_
NumericVector Aggregate_(NumericMatrix gridPoints, NumericMatrix queries, NumericVector origin);
RcppExport SEXP _icosa_Aggregate_(SEXP gridPointsSEXP, SEXP queriesSEXP, SEXP originSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericMatrix >::type gridPoints(gridPointsSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type queries(queriesSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type origin(originSEXP);
    rcpp_result_gen = Rcpp::wrap(Aggregate_(gridPoints, queries, origin));
    return rcpp_result_gen;
END_RCPP
}
// edges_
NumericVector edges_(NumericMatrix v, NumericMatrix e, NumericVector origin, bool method);
RcppExport SEXP _icosa_edges_(SEXP vSEXP, SEXP eSEXP, SEXP originSEXP, SEXP methodSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericMatrix >::type v(vSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type e(eSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type origin(originSEXP);
    Rcpp::traits::input_parameter< bool >::type method(methodSEXP);
    rcpp_result_gen = Rcpp::wrap(edges_(v, e, origin, method));
    return rcpp_result_gen;
END_RCPP
}
// SphericalTriangleSurface_
double SphericalTriangleSurface_(NumericVector coord1, NumericVector coord2, NumericVector coord3, NumericVector origin, double pi);
RcppExport SEXP _icosa_SphericalTriangleSurface_(SEXP coord1SEXP, SEXP coord2SEXP, SEXP coord3SEXP, SEXP originSEXP, SEXP piSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type coord1(coord1SEXP);
    Rcpp::traits::input_parameter< NumericVector >::type coord2(coord2SEXP);
    Rcpp::traits::input_parameter< NumericVector >::type coord3(coord3SEXP);
    Rcpp::traits::input_parameter< NumericVector >::type origin(originSEXP);
    Rcpp::traits::input_parameter< double >::type pi(piSEXP);
    rcpp_result_gen = Rcpp::wrap(SphericalTriangleSurface_(coord1, coord2, coord3, origin, pi));
    return rcpp_result_gen;
END_RCPP
}
// spherTriSurfs
NumericVector spherTriSurfs(NumericMatrix v, NumericMatrix f, NumericVector origin, double pi);
RcppExport SEXP _icosa_spherTriSurfs(SEXP vSEXP, SEXP fSEXP, SEXP originSEXP, SEXP piSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericMatrix >::type v(vSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type f(fSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type origin(originSEXP);
    Rcpp::traits::input_parameter< double >::type pi(piSEXP);
    rcpp_result_gen = Rcpp::wrap(spherTriSurfs(v, f, origin, pi));
    return rcpp_result_gen;
END_RCPP
}
// surfConvHullTri
double surfConvHullTri(NumericMatrix v, NumericVector cent, NumericVector origin, double pi);
RcppExport SEXP _icosa_surfConvHullTri(SEXP vSEXP, SEXP centSEXP, SEXP originSEXP, SEXP piSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericMatrix >::type v(vSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type cent(centSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type origin(originSEXP);
    Rcpp::traits::input_parameter< double >::type pi(piSEXP);
    rcpp_result_gen = Rcpp::wrap(surfConvHullTri(v, cent, origin, pi));
    return rcpp_result_gen;
END_RCPP
}
// SplitArc_
NumericMatrix SplitArc_(NumericVector coord1, NumericVector coord2, NumericVector center, int breaks, bool onlyNew);
RcppExport SEXP _icosa_SplitArc_(SEXP coord1SEXP, SEXP coord2SEXP, SEXP centerSEXP, SEXP breaksSEXP, SEXP onlyNewSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type coord1(coord1SEXP);
    Rcpp::traits::input_parameter< NumericVector >::type coord2(coord2SEXP);
    Rcpp::traits::input_parameter< NumericVector >::type center(centerSEXP);
    Rcpp::traits::input_parameter< int >::type breaks(breaksSEXP);
    Rcpp::traits::input_parameter< bool >::type onlyNew(onlyNewSEXP);
    rcpp_result_gen = Rcpp::wrap(SplitArc_(coord1, coord2, center, breaks, onlyNew));
    return rcpp_result_gen;
END_RCPP
}
// GreatCircle_
NumericMatrix GreatCircle_(NumericVector coord1, NumericVector coord2, NumericVector origin, int breaks, double pi);
RcppExport SEXP _icosa_GreatCircle_(SEXP coord1SEXP, SEXP coord2SEXP, SEXP originSEXP, SEXP breaksSEXP, SEXP piSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type coord1(coord1SEXP);
    Rcpp::traits::input_parameter< NumericVector >::type coord2(coord2SEXP);
    Rcpp::traits::input_parameter< NumericVector >::type origin(originSEXP);
    Rcpp::traits::input_parameter< int >::type breaks(breaksSEXP);
    Rcpp::traits::input_parameter< double >::type pi(piSEXP);
    rcpp_result_gen = Rcpp::wrap(GreatCircle_(coord1, coord2, origin, breaks, pi));
    return rcpp_result_gen;
END_RCPP
}
// NeighbourOfOneFace_
NumericVector NeighbourOfOneFace_(NumericMatrix faces, int faceNo);
RcppExport SEXP _icosa_NeighbourOfOneFace_(SEXP facesSEXP, SEXP faceNoSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericMatrix >::type faces(facesSEXP);
    Rcpp::traits::input_parameter< int >::type faceNo(faceNoSEXP);
    rcpp_result_gen = Rcpp::wrap(NeighbourOfOneFace_(faces, faceNo));
    return rcpp_result_gen;
END_RCPP
}
// DirectNeighboursTri_
NumericMatrix DirectNeighboursTri_(NumericMatrix faces);
RcppExport SEXP _icosa_DirectNeighboursTri_(SEXP facesSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericMatrix >::type faces(facesSEXP);
    rcpp_result_gen = Rcpp::wrap(DirectNeighboursTri_(faces));
    return rcpp_result_gen;
END_RCPP
}
// AllNeighboursTri_
NumericMatrix AllNeighboursTri_(NumericMatrix allFaces, NumericVector div);
RcppExport SEXP _icosa_AllNeighboursTri_(SEXP allFacesSEXP, SEXP divSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericMatrix >::type allFaces(allFacesSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type div(divSEXP);
    rcpp_result_gen = Rcpp::wrap(AllNeighboursTri_(allFaces, div));
    return rcpp_result_gen;
END_RCPP
}
// GetPatch_
NumericVector GetPatch_(NumericMatrix faceNeighbours, LogicalVector activeFaces, int startFace, int maxRound);
RcppExport SEXP _icosa_GetPatch_(SEXP faceNeighboursSEXP, SEXP activeFacesSEXP, SEXP startFaceSEXP, SEXP maxRoundSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericMatrix >::type faceNeighbours(faceNeighboursSEXP);
    Rcpp::traits::input_parameter< LogicalVector >::type activeFaces(activeFacesSEXP);
    Rcpp::traits::input_parameter< int >::type startFace(startFaceSEXP);
    Rcpp::traits::input_parameter< int >::type maxRound(maxRoundSEXP);
    rcpp_result_gen = Rcpp::wrap(GetPatch_(faceNeighbours, activeFaces, startFace, maxRound));
    return rcpp_result_gen;
END_RCPP
}
// Partition_
NumericMatrix Partition_(NumericMatrix faceNeighbours, LogicalVector activeFaces, int maxRound);
RcppExport SEXP _icosa_Partition_(SEXP faceNeighboursSEXP, SEXP activeFacesSEXP, SEXP maxRoundSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericMatrix >::type faceNeighbours(faceNeighboursSEXP);
    Rcpp::traits::input_parameter< LogicalVector >::type activeFaces(activeFacesSEXP);
    Rcpp::traits::input_parameter< int >::type maxRound(maxRoundSEXP);
    rcpp_result_gen = Rcpp::wrap(Partition_(faceNeighbours, activeFaces, maxRound));
    return rcpp_result_gen;
END_RCPP
}
// Refine2d_
NumericMatrix Refine2d_(NumericMatrix From, int breaks);
RcppExport SEXP _icosa_Refine2d_(SEXP FromSEXP, SEXP breaksSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericMatrix >::type From(FromSEXP);
    Rcpp::traits::input_parameter< int >::type breaks(breaksSEXP);
    rcpp_result_gen = Rcpp::wrap(Refine2d_(From, breaks));
    return rcpp_result_gen;
END_RCPP
}
// SphericalTriangleCenter_
NumericVector SphericalTriangleCenter_(NumericVector v0, NumericVector v1, NumericVector v2, NumericVector origin);
RcppExport SEXP _icosa_SphericalTriangleCenter_(SEXP v0SEXP, SEXP v1SEXP, SEXP v2SEXP, SEXP originSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type v0(v0SEXP);
    Rcpp::traits::input_parameter< NumericVector >::type v1(v1SEXP);
    Rcpp::traits::input_parameter< NumericVector >::type v2(v2SEXP);
    Rcpp::traits::input_parameter< NumericVector >::type origin(originSEXP);
    rcpp_result_gen = Rcpp::wrap(SphericalTriangleCenter_(v0, v1, v2, origin));
    return rcpp_result_gen;
END_RCPP
}
// EdgesFromPoints_
NumericMatrix EdgesFromPoints_(NumericMatrix verts, NumericVector howMany, NumericVector origin);
RcppExport SEXP _icosa_EdgesFromPoints_(SEXP vertsSEXP, SEXP howManySEXP, SEXP originSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericMatrix >::type verts(vertsSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type howMany(howManySEXP);
    Rcpp::traits::input_parameter< NumericVector >::type origin(originSEXP);
    rcpp_result_gen = Rcpp::wrap(EdgesFromPoints_(verts, howMany, origin));
    return rcpp_result_gen;
END_RCPP
}
// stl_sort
NumericVector stl_sort(NumericVector x);
RcppExport SEXP _icosa_stl_sort(SEXP xSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type x(xSEXP);
    rcpp_result_gen = Rcpp::wrap(stl_sort(x));
    return rcpp_result_gen;
END_RCPP
}
// EdgesToFaces_
NumericMatrix EdgesToFaces_(NumericMatrix edges);
RcppExport SEXP _icosa_EdgesToFaces_(SEXP edgesSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericMatrix >::type edges(edgesSEXP);
    rcpp_result_gen = Rcpp::wrap(EdgesToFaces_(edges));
    return rcpp_result_gen;
END_RCPP
}
// TriangleTesselation_
List TriangleTesselation_(NumericVector v0, NumericVector v1, NumericVector v2, NumericVector origin, int lineBreak);
RcppExport SEXP _icosa_TriangleTesselation_(SEXP v0SEXP, SEXP v1SEXP, SEXP v2SEXP, SEXP originSEXP, SEXP lineBreakSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type v0(v0SEXP);
    Rcpp::traits::input_parameter< NumericVector >::type v1(v1SEXP);
    Rcpp::traits::input_parameter< NumericVector >::type v2(v2SEXP);
    Rcpp::traits::input_parameter< NumericVector >::type origin(originSEXP);
    Rcpp::traits::input_parameter< int >::type lineBreak(lineBreakSEXP);
    rcpp_result_gen = Rcpp::wrap(TriangleTesselation_(v0, v1, v2, origin, lineBreak));
    return rcpp_result_gen;
END_RCPP
}
// SizeEstimate_
NumericVector SizeEstimate_(NumericVector tesselation);
RcppExport SEXP _icosa_SizeEstimate_(SEXP tesselationSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type tesselation(tesselationSEXP);
    rcpp_result_gen = Rcpp::wrap(SizeEstimate_(tesselation));
    return rcpp_result_gen;
END_RCPP
}
// IcosahedronTesselation_
List IcosahedronTesselation_(NumericMatrix oldV, NumericMatrix oldF, NumericVector tesselation, NumericVector origin);
RcppExport SEXP _icosa_IcosahedronTesselation_(SEXP oldVSEXP, SEXP oldFSEXP, SEXP tesselationSEXP, SEXP originSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericMatrix >::type oldV(oldVSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type oldF(oldFSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type tesselation(tesselationSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type origin(originSEXP);
    rcpp_result_gen = Rcpp::wrap(IcosahedronTesselation_(oldV, oldF, tesselation, origin));
    return rcpp_result_gen;
END_RCPP
}
// expandFacesToEdges_
NumericMatrix expandFacesToEdges_(NumericMatrix faces);
RcppExport SEXP _icosa_expandFacesToEdges_(SEXP facesSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericMatrix >::type faces(facesSEXP);
    rcpp_result_gen = Rcpp::wrap(expandFacesToEdges_(faces));
    return rcpp_result_gen;
END_RCPP
}
// orderTriGrid_
List orderTriGrid_(NumericMatrix faces, NumericMatrix neigh, NumericVector startFaces, NumericVector startVert, int nBelts, int nV);
RcppExport SEXP _icosa_orderTriGrid_(SEXP facesSEXP, SEXP neighSEXP, SEXP startFacesSEXP, SEXP startVertSEXP, SEXP nBeltsSEXP, SEXP nVSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericMatrix >::type faces(facesSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type neigh(neighSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type startFaces(startFacesSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type startVert(startVertSEXP);
    Rcpp::traits::input_parameter< int >::type nBelts(nBeltsSEXP);
    Rcpp::traits::input_parameter< int >::type nV(nVSEXP);
    rcpp_result_gen = Rcpp::wrap(orderTriGrid_(faces, neigh, startFaces, startVert, nBelts, nV));
    return rcpp_result_gen;
END_RCPP
}
// allTriangleCenters_
NumericMatrix allTriangleCenters_(NumericMatrix v, NumericMatrix f, NumericVector origin);
RcppExport SEXP _icosa_allTriangleCenters_(SEXP vSEXP, SEXP fSEXP, SEXP originSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericMatrix >::type v(vSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type f(fSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type origin(originSEXP);
    rcpp_result_gen = Rcpp::wrap(allTriangleCenters_(v, f, origin));
    return rcpp_result_gen;
END_RCPP
}
// CreateHexaSubfaces_
NumericMatrix CreateHexaSubfaces_(NumericMatrix n, NumericMatrix f, int nV);
RcppExport SEXP _icosa_CreateHexaSubfaces_(SEXP nSEXP, SEXP fSEXP, SEXP nVSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericMatrix >::type n(nSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type f(fSEXP);
    Rcpp::traits::input_parameter< int >::type nV(nVSEXP);
    rcpp_result_gen = Rcpp::wrap(CreateHexaSubfaces_(n, f, nV));
    return rcpp_result_gen;
END_RCPP
}
// HexaFaces_
NumericMatrix HexaFaces_(NumericMatrix fOrd);
RcppExport SEXP _icosa_HexaFaces_(SEXP fOrdSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericMatrix >::type fOrd(fOrdSEXP);
    rcpp_result_gen = Rcpp::wrap(HexaFaces_(fOrd));
    return rcpp_result_gen;
END_RCPP
}
// RetrieveIndexMat_
NumericMatrix RetrieveIndexMat_(NumericVector indices);
RcppExport SEXP _icosa_RetrieveIndexMat_(SEXP indicesSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type indices(indicesSEXP);
    rcpp_result_gen = Rcpp::wrap(RetrieveIndexMat_(indices));
    return rcpp_result_gen;
END_RCPP
}
// InverseWeightByFaceCenter_
NumericVector InverseWeightByFaceCenter_(NumericMatrix fcNew, NumericVector loc, NumericMatrix n, NumericMatrix fcOld, NumericVector values, NumericVector origin, int deg);
RcppExport SEXP _icosa_InverseWeightByFaceCenter_(SEXP fcNewSEXP, SEXP locSEXP, SEXP nSEXP, SEXP fcOldSEXP, SEXP valuesSEXP, SEXP originSEXP, SEXP degSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericMatrix >::type fcNew(fcNewSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type loc(locSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type n(nSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type fcOld(fcOldSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type values(valuesSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type origin(originSEXP);
    Rcpp::traits::input_parameter< int >::type deg(degSEXP);
    rcpp_result_gen = Rcpp::wrap(InverseWeightByFaceCenter_(fcNew, loc, n, fcOld, values, origin, deg));
    return rcpp_result_gen;
END_RCPP
}
// OccupiedCellUpSampling_
NumericVector OccupiedCellUpSampling_(NumericVector values, NumericVector loc);
RcppExport SEXP _icosa_OccupiedCellUpSampling_(SEXP valuesSEXP, SEXP locSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type values(valuesSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type loc(locSEXP);
    rcpp_result_gen = Rcpp::wrap(OccupiedCellUpSampling_(values, loc));
    return rcpp_result_gen;
END_RCPP
}
// ExpandBoundariesToCols_
NumericMatrix ExpandBoundariesToCols_(NumericMatrix f, NumericMatrix v, NumericVector res, NumericVector origin, int pent);
RcppExport SEXP _icosa_ExpandBoundariesToCols_(SEXP fSEXP, SEXP vSEXP, SEXP resSEXP, SEXP originSEXP, SEXP pentSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericMatrix >::type f(fSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type v(vSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type res(resSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type origin(originSEXP);
    Rcpp::traits::input_parameter< int >::type pent(pentSEXP);
    rcpp_result_gen = Rcpp::wrap(ExpandBoundariesToCols_(f, v, res, origin, pent));
    return rcpp_result_gen;
END_RCPP
}
// ShapeTri_
double ShapeTri_(NumericVector p0, NumericVector p1, NumericVector p2);
RcppExport SEXP _icosa_ShapeTri_(SEXP p0SEXP, SEXP p1SEXP, SEXP p2SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type p0(p0SEXP);
    Rcpp::traits::input_parameter< NumericVector >::type p1(p1SEXP);
    Rcpp::traits::input_parameter< NumericVector >::type p2(p2SEXP);
    rcpp_result_gen = Rcpp::wrap(ShapeTri_(p0, p1, p2));
    return rcpp_result_gen;
END_RCPP
}
// AllShapeTri_
NumericVector AllShapeTri_(NumericMatrix v, NumericMatrix f);
RcppExport SEXP _icosa_AllShapeTri_(SEXP vSEXP, SEXP fSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericMatrix >::type v(vSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type f(fSEXP);
    rcpp_result_gen = Rcpp::wrap(AllShapeTri_(v, f));
    return rcpp_result_gen;
END_RCPP
}
// expandEdges_
NumericMatrix expandEdges_(NumericMatrix eExp, NumericVector center, double res);
RcppExport SEXP _icosa_expandEdges_(SEXP eExpSEXP, SEXP centerSEXP, SEXP resSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericMatrix >::type eExp(eExpSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type center(centerSEXP);
    Rcpp::traits::input_parameter< double >::type res(resSEXP);
    rcpp_result_gen = Rcpp::wrap(expandEdges_(eExp, center, res));
    return rcpp_result_gen;
END_RCPP
}
// ExpandEdgesByFacesTri_
NumericMatrix ExpandEdgesByFacesTri_(NumericMatrix origV, NumericMatrix origSubF, NumericVector center, int breaks);
RcppExport SEXP _icosa_ExpandEdgesByFacesTri_(SEXP origVSEXP, SEXP origSubFSEXP, SEXP centerSEXP, SEXP breaksSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericMatrix >::type origV(origVSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type origSubF(origSubFSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type center(centerSEXP);
    Rcpp::traits::input_parameter< int >::type breaks(breaksSEXP);
    rcpp_result_gen = Rcpp::wrap(ExpandEdgesByFacesTri_(origV, origSubF, center, breaks));
    return rcpp_result_gen;
END_RCPP
}
// edgeListFromNeighbours_
NumericMatrix edgeListFromNeighbours_(NumericMatrix outN);
RcppExport SEXP _icosa_edgeListFromNeighbours_(SEXP outNSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericMatrix >::type outN(outNSEXP);
    rcpp_result_gen = Rcpp::wrap(edgeListFromNeighbours_(outN));
    return rcpp_result_gen;
END_RCPP
}
// EvenInterpolation_
NumericVector EvenInterpolation_(NumericMatrix xyz, NumericVector origin, double critValue);
RcppExport SEXP _icosa_EvenInterpolation_(SEXP xyzSEXP, SEXP originSEXP, SEXP critValueSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericMatrix >::type xyz(xyzSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type origin(originSEXP);
    Rcpp::traits::input_parameter< double >::type critValue(critValueSEXP);
    rcpp_result_gen = Rcpp::wrap(EvenInterpolation_(xyz, origin, critValue));
    return rcpp_result_gen;
END_RCPP
}
// centroidPoints_
NumericMatrix centroidPoints_(NumericMatrix coords, NumericMatrix combin, NumericVector center, int breaks);
RcppExport SEXP _icosa_centroidPoints_(SEXP coordsSEXP, SEXP combinSEXP, SEXP centerSEXP, SEXP breaksSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericMatrix >::type coords(coordsSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type combin(combinSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type center(centerSEXP);
    Rcpp::traits::input_parameter< int >::type breaks(breaksSEXP);
    rcpp_result_gen = Rcpp::wrap(centroidPoints_(coords, combin, center, breaks));
    return rcpp_result_gen;
END_RCPP
}
// projectCloseToPoint_
NumericMatrix projectCloseToPoint_(NumericMatrix coords, NumericVector toPoint, NumericVector center, int breaks);
RcppExport SEXP _icosa_projectCloseToPoint_(SEXP coordsSEXP, SEXP toPointSEXP, SEXP centerSEXP, SEXP breaksSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericMatrix >::type coords(coordsSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type toPoint(toPointSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type center(centerSEXP);
    Rcpp::traits::input_parameter< int >::type breaks(breaksSEXP);
    rcpp_result_gen = Rcpp::wrap(projectCloseToPoint_(coords, toPoint, center, breaks));
    return rcpp_result_gen;
END_RCPP
}
// xxxxyyyyzzzz_
NumericVector xxxxyyyyzzzz_(NumericMatrix v, NumericMatrix f);
RcppExport SEXP _icosa_xxxxyyyyzzzz_(SEXP vSEXP, SEXP fSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericMatrix >::type v(vSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type f(fSEXP);
    rcpp_result_gen = Rcpp::wrap(xxxxyyyyzzzz_(v, f));
    return rcpp_result_gen;
END_RCPP
}
// xyz1xyz1xyz1xyz1_
NumericVector xyz1xyz1xyz1xyz1_(NumericMatrix v, NumericMatrix f);
RcppExport SEXP _icosa_xyz1xyz1xyz1xyz1_(SEXP vSEXP, SEXP fSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericMatrix >::type v(vSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type f(fSEXP);
    rcpp_result_gen = Rcpp::wrap(xyz1xyz1xyz1xyz1_(v, f));
    return rcpp_result_gen;
END_RCPP
}
// xyz1
NumericVector xyz1(NumericMatrix q);
RcppExport SEXP _icosa_xyz1(SEXP qSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericMatrix >::type q(qSEXP);
    rcpp_result_gen = Rcpp::wrap(xyz1(q));
    return rcpp_result_gen;
END_RCPP
}
// edgeMatTri_
NumericMatrix edgeMatTri_(NumericMatrix v, NumericMatrix e);
RcppExport SEXP _icosa_edgeMatTri_(SEXP vSEXP, SEXP eSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericMatrix >::type v(vSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type e(eSEXP);
    rcpp_result_gen = Rcpp::wrap(edgeMatTri_(v, e));
    return rcpp_result_gen;
END_RCPP
}
// triMatTri_
NumericMatrix triMatTri_(NumericMatrix v, NumericMatrix f);
RcppExport SEXP _icosa_triMatTri_(SEXP vSEXP, SEXP fSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericMatrix >::type v(vSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type f(fSEXP);
    rcpp_result_gen = Rcpp::wrap(triMatTri_(v, f));
    return rcpp_result_gen;
END_RCPP
}
// pointLayerColorOrder_
NumericVector pointLayerColorOrder_(NumericMatrix f);
RcppExport SEXP _icosa_pointLayerColorOrder_(SEXP fSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericMatrix >::type f(fSEXP);
    rcpp_result_gen = Rcpp::wrap(pointLayerColorOrder_(f));
    return rcpp_result_gen;
END_RCPP
}
