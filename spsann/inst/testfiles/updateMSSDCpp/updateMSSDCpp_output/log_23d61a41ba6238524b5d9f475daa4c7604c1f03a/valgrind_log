<?xml version="1.0"?>

<valgrindoutput>

<protocolversion>4</protocolversion>
<protocoltool>memcheck</protocoltool>

<preamble>
  <line>Memcheck, a memory error detector</line>
  <line>Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.</line>
  <line>Using Valgrind-3.15.0 and LibVEX; rerun with -h for copyright info</line>
  <line>Command: ./updateMSSDCpp_DeepState_TestHarness --input_test_file /home/akhila/fuzzer_packages/fuzzedpackages/spsann/inst/testfiles/updateMSSDCpp/updateMSSDCpp_output/23d61a41ba6238524b5d9f475daa4c7604c1f03a.crash</line>
</preamble>

<pid>909742</pid>
<ppid>909741</ppid>
<tool>memcheck</tool>

<args>
  <vargv>
    <exe>/usr/bin/valgrind.bin</exe>
    <arg>--xml=yes</arg>
    <arg>--xml-file=/home/akhila/fuzzer_packages/fuzzedpackages/spsann/inst/testfiles/updateMSSDCpp/updateMSSDCpp_output/log_23d61a41ba6238524b5d9f475daa4c7604c1f03a/valgrind_log</arg>
    <arg>--tool=memcheck</arg>
    <arg>--leak-check=yes</arg>
  </vargv>
  <argv>
    <exe>./updateMSSDCpp_DeepState_TestHarness</exe>
    <arg>--input_test_file</arg>
    <arg>/home/akhila/fuzzer_packages/fuzzedpackages/spsann/inst/testfiles/updateMSSDCpp/updateMSSDCpp_output/23d61a41ba6238524b5d9f475daa4c7604c1f03a.crash</arg>
  </argv>
</args>

<status>
  <state>RUNNING</state>
  <time>00:00:00:00.037 </time>
</status>

<error>
  <unique>0x0</unique>
  <tid>1</tid>
  <kind>InvalidWrite</kind>
  <what>Invalid write of size 8</what>
  <stack>
    <frame>
      <ip>0x4D29486</ip>
      <obj>/home/akhila/fuzzer_packages/fuzzedpackages/spsann/src/spsann.so</obj>
      <fn>updateMSSDCpp(Rcpp::Matrix&lt;14, Rcpp::PreserveStorage&gt;, Rcpp::Matrix&lt;14, Rcpp::PreserveStorage&gt;, Rcpp::Matrix&lt;14, Rcpp::PreserveStorage&gt;, int)</fn>
      <dir>/home/akhila/fuzzer_packages/fuzzedpackages/spsann/src</dir>
      <file>updateMSSDCpp.cpp</file>
      <line>33</line>
    </frame>
    <frame>
      <ip>0x40A355</ip>
      <obj>/home/akhila/fuzzer_packages/fuzzedpackages/spsann/inst/testfiles/updateMSSDCpp/updateMSSDCpp_DeepState_TestHarness</obj>
      <fn>DeepState_Test_spsann_deepstate_test_updateMSSDCpp_test()</fn>
      <dir>/home/akhila/fuzzer_packages/fuzzedpackages/spsann/inst/testfiles/updateMSSDCpp</dir>
      <file>updateMSSDCpp_DeepState_TestHarness.cpp</file>
      <line>35</line>
    </frame>
    <frame>
      <ip>0x409BA8</ip>
      <obj>/home/akhila/fuzzer_packages/fuzzedpackages/spsann/inst/testfiles/updateMSSDCpp/updateMSSDCpp_DeepState_TestHarness</obj>
      <fn>DeepState_Run_spsann_deepstate_test_updateMSSDCpp_test()</fn>
      <dir>/home/akhila/fuzzer_packages/fuzzedpackages/spsann/inst/testfiles/updateMSSDCpp</dir>
      <file>updateMSSDCpp_DeepState_TestHarness.cpp</file>
      <line>13</line>
    </frame>
    <frame>
      <ip>0x41DE08</ip>
      <obj>/home/akhila/fuzzer_packages/fuzzedpackages/spsann/inst/testfiles/updateMSSDCpp/updateMSSDCpp_DeepState_TestHarness</obj>
      <fn>DeepState_RunTest.isra.0</fn>
    </frame>
    <frame>
      <ip>0x41E0A9</ip>
      <obj>/home/akhila/fuzzer_packages/fuzzedpackages/spsann/inst/testfiles/updateMSSDCpp/updateMSSDCpp_DeepState_TestHarness</obj>
      <fn>DeepState_ForkAndRunTest</fn>
    </frame>
    <frame>
      <ip>0x41E184</ip>
      <obj>/home/akhila/fuzzer_packages/fuzzedpackages/spsann/inst/testfiles/updateMSSDCpp/updateMSSDCpp_DeepState_TestHarness</obj>
      <fn>DeepState_RunSavedTestCase</fn>
    </frame>
    <frame>
      <ip>0x4076B5</ip>
      <obj>/home/akhila/fuzzer_packages/fuzzedpackages/spsann/inst/testfiles/updateMSSDCpp/updateMSSDCpp_DeepState_TestHarness</obj>
      <fn>main</fn>
    </frame>
  </stack>
  <auxwhat>Address 0x6151c4e60 is not stack'd, malloc'd or (recently) free'd</auxwhat>
</error>

<fatal_signal>
  <tid>1</tid>
  <signo>11</signo>
  <signame>SIGSEGV</signame>
  <sicode>1</sicode>
  <event>Access not within mapped region</event>
  <siaddr>0x6151C4E60</siaddr>
  <stack>
    <frame>
      <ip>0x4D29486</ip>
      <obj>/home/akhila/fuzzer_packages/fuzzedpackages/spsann/src/spsann.so</obj>
      <fn>updateMSSDCpp(Rcpp::Matrix&lt;14, Rcpp::PreserveStorage&gt;, Rcpp::Matrix&lt;14, Rcpp::PreserveStorage&gt;, Rcpp::Matrix&lt;14, Rcpp::PreserveStorage&gt;, int)</fn>
      <dir>/home/akhila/fuzzer_packages/fuzzedpackages/spsann/src</dir>
      <file>updateMSSDCpp.cpp</file>
      <line>33</line>
    </frame>
    <frame>
      <ip>0x40A355</ip>
      <obj>/home/akhila/fuzzer_packages/fuzzedpackages/spsann/inst/testfiles/updateMSSDCpp/updateMSSDCpp_DeepState_TestHarness</obj>
      <fn>DeepState_Test_spsann_deepstate_test_updateMSSDCpp_test()</fn>
      <dir>/home/akhila/fuzzer_packages/fuzzedpackages/spsann/inst/testfiles/updateMSSDCpp</dir>
      <file>updateMSSDCpp_DeepState_TestHarness.cpp</file>
      <line>35</line>
    </frame>
    <frame>
      <ip>0x409BA8</ip>
      <obj>/home/akhila/fuzzer_packages/fuzzedpackages/spsann/inst/testfiles/updateMSSDCpp/updateMSSDCpp_DeepState_TestHarness</obj>
      <fn>DeepState_Run_spsann_deepstate_test_updateMSSDCpp_test()</fn>
      <dir>/home/akhila/fuzzer_packages/fuzzedpackages/spsann/inst/testfiles/updateMSSDCpp</dir>
      <file>updateMSSDCpp_DeepState_TestHarness.cpp</file>
      <line>13</line>
    </frame>
    <frame>
      <ip>0x41DE08</ip>
      <obj>/home/akhila/fuzzer_packages/fuzzedpackages/spsann/inst/testfiles/updateMSSDCpp/updateMSSDCpp_DeepState_TestHarness</obj>
      <fn>DeepState_RunTest.isra.0</fn>
    </frame>
    <frame>
      <ip>0x41E0A9</ip>
      <obj>/home/akhila/fuzzer_packages/fuzzedpackages/spsann/inst/testfiles/updateMSSDCpp/updateMSSDCpp_DeepState_TestHarness</obj>
      <fn>DeepState_ForkAndRunTest</fn>
    </frame>
    <frame>
      <ip>0x41E184</ip>
      <obj>/home/akhila/fuzzer_packages/fuzzedpackages/spsann/inst/testfiles/updateMSSDCpp/updateMSSDCpp_DeepState_TestHarness</obj>
      <fn>DeepState_RunSavedTestCase</fn>
    </frame>
    <frame>
      <ip>0x4076B5</ip>
      <obj>/home/akhila/fuzzer_packages/fuzzedpackages/spsann/inst/testfiles/updateMSSDCpp/updateMSSDCpp_DeepState_TestHarness</obj>
      <fn>main</fn>
    </frame>
  </stack>
</fatal_signal>


<status>
  <state>FINISHED</state>
  <time>00:00:00:08.346 </time>
</status>

<errorcounts>
  <pair>
    <count>1</count>
    <unique>0x0</unique>
  </pair>
</errorcounts>

<suppcounts>
</suppcounts>

</valgrindoutput>


<status>
  <state>FINISHED</state>
  <time>00:00:00:08.999 </time>
</status>

<errorcounts>
</errorcounts>

<suppcounts>
</suppcounts>

</valgrindoutput>

