// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <Rcpp.h>

using namespace Rcpp;

// row_overlap
LogicalVector row_overlap(NumericVector row_in, NumericMatrix boxes);
RcppExport SEXP _tagcloud_row_overlap(SEXP row_inSEXP, SEXP boxesSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type row_in(row_inSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type boxes(boxesSEXP);
    rcpp_result_gen = Rcpp::wrap(row_overlap(row_in, boxes));
    return rcpp_result_gen;
END_RCPP
}
// any_overlap
LogicalVector any_overlap(NumericMatrix boxes);
RcppExport SEXP _tagcloud_any_overlap(SEXP boxesSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericMatrix >::type boxes(boxesSEXP);
    rcpp_result_gen = Rcpp::wrap(any_overlap(boxes));
    return rcpp_result_gen;
END_RCPP
}
// is_overlap
LogicalVector is_overlap(NumericVector box, NumericMatrix boxes);
RcppExport SEXP _tagcloud_is_overlap(SEXP boxSEXP, SEXP boxesSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type box(boxSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type boxes(boxesSEXP);
    rcpp_result_gen = Rcpp::wrap(is_overlap(box, boxes));
    return rcpp_result_gen;
END_RCPP
}
// spiral
NumericVector spiral(List params, NumericMatrix boxes);
RcppExport SEXP _tagcloud_spiral(SEXP paramsSEXP, SEXP boxesSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< List >::type params(paramsSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type boxes(boxesSEXP);
    rcpp_result_gen = Rcpp::wrap(spiral(params, boxes));
    return rcpp_result_gen;
END_RCPP
}
// ulam
NumericVector ulam(List params, NumericMatrix boxes);
RcppExport SEXP _tagcloud_ulam(SEXP paramsSEXP, SEXP boxesSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< List >::type params(paramsSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type boxes(boxesSEXP);
    rcpp_result_gen = Rcpp::wrap(ulam(params, boxes));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_tagcloud_row_overlap", (DL_FUNC) &_tagcloud_row_overlap, 2},
    {"_tagcloud_any_overlap", (DL_FUNC) &_tagcloud_any_overlap, 1},
    {"_tagcloud_is_overlap", (DL_FUNC) &_tagcloud_is_overlap, 2},
    {"_tagcloud_spiral", (DL_FUNC) &_tagcloud_spiral, 2},
    {"_tagcloud_ulam", (DL_FUNC) &_tagcloud_ulam, 2},
    {NULL, NULL, 0}
};

RcppExport void R_init_tagcloud(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
