// AUTOMATICALLY GENERATED BY RCPPDEEPSTATE PLEASE DO NOT EDIT BY HAND, INSTEAD EDIT
// start_tree_DeepState_TestHarness_generation.cpp and start_tree_DeepState_TestHarness_checks.cpp

#include <fstream>
#include <RInside.h>
#include <iostream>
#include <RcppDeepState.h>
#include <qs.h>
#include <DeepState.hpp>

NumericMatrix start_tree(double start_mean, double start_sd);

TEST(bartBMA_deepstate_test,start_tree_test){
  RInside R;
  std::cout << "input starts" << std::endl;
  NumericVector start_mean(1);
  start_mean[0]  = RcppDeepState_double();
  qs::c_qsave(start_mean,"/home/akhila/fuzzer_packages/fuzzedpackages/bartBMA/inst/testfiles/start_tree/inputs/start_mean.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "start_mean values: "<< start_mean << std::endl;
  NumericVector start_sd(1);
  start_sd[0]  = RcppDeepState_double();
  qs::c_qsave(start_sd,"/home/akhila/fuzzer_packages/fuzzedpackages/bartBMA/inst/testfiles/start_tree/inputs/start_sd.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "start_sd values: "<< start_sd << std::endl;
  std::cout << "input ends" << std::endl;
  try{
    start_tree(start_mean[0],start_sd[0]);
  }
  catch(Rcpp::exception& e){
    std::cout<<"Exception Handled"<<std::endl;
  }
}
