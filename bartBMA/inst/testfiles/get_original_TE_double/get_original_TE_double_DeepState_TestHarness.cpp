// AUTOMATICALLY GENERATED BY RCPPDEEPSTATE PLEASE DO NOT EDIT BY HAND, INSTEAD EDIT
// get_original_TE_double_DeepState_TestHarness_generation.cpp and get_original_TE_double_DeepState_TestHarness_checks.cpp

#include <fstream>
#include <RInside.h>
#include <iostream>
#include <RcppDeepState.h>
#include <qs.h>
#include <DeepState.hpp>

double get_original_TE_double(double low, double high, double sp_low, double sp_high, double sum_preds);

TEST(bartBMA_deepstate_test,get_original_TE_double_test){
  RInside R;
  std::cout << "input starts" << std::endl;
  NumericVector low(1);
  low[0]  = RcppDeepState_double();
  qs::c_qsave(low,"/home/akhila/fuzzer_packages/fuzzedpackages/bartBMA/inst/testfiles/get_original_TE_double/inputs/low.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "low values: "<< low << std::endl;
  NumericVector high(1);
  high[0]  = RcppDeepState_double();
  qs::c_qsave(high,"/home/akhila/fuzzer_packages/fuzzedpackages/bartBMA/inst/testfiles/get_original_TE_double/inputs/high.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "high values: "<< high << std::endl;
  NumericVector sp_low(1);
  sp_low[0]  = RcppDeepState_double();
  qs::c_qsave(sp_low,"/home/akhila/fuzzer_packages/fuzzedpackages/bartBMA/inst/testfiles/get_original_TE_double/inputs/sp_low.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "sp_low values: "<< sp_low << std::endl;
  NumericVector sp_high(1);
  sp_high[0]  = RcppDeepState_double();
  qs::c_qsave(sp_high,"/home/akhila/fuzzer_packages/fuzzedpackages/bartBMA/inst/testfiles/get_original_TE_double/inputs/sp_high.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "sp_high values: "<< sp_high << std::endl;
  NumericVector sum_preds(1);
  sum_preds[0]  = RcppDeepState_double();
  qs::c_qsave(sum_preds,"/home/akhila/fuzzer_packages/fuzzedpackages/bartBMA/inst/testfiles/get_original_TE_double/inputs/sum_preds.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "sum_preds values: "<< sum_preds << std::endl;
  std::cout << "input ends" << std::endl;
  try{
    get_original_TE_double(low[0],high[0],sp_low[0],sp_high[0],sum_preds[0]);
  }
  catch(Rcpp::exception& e){
    std::cout<<"Exception Handled"<<std::endl;
  }
}
