// AUTOMATICALLY GENERATED BY RCPPDEEPSTATE PLEASE DO NOT EDIT BY HAND, INSTEAD EDIT
// calculateLinesAndArrow_DeepState_TestHarness_generation.cpp and calculateLinesAndArrow_DeepState_TestHarness_checks.cpp

#include <fstream>
#include <RInside.h>
#include <iostream>
#include <RcppDeepState.h>
#include <qs.h>
#include <DeepState.hpp>

Rcpp::List calculateLinesAndArrow(NumericVector x, NumericVector y, NumericVector offset, double end_x, double end_y, double arrow_offset, int rm_intersect);

TEST(Gmisc_deepstate_test,calculateLinesAndArrow_test){
  RInside R;
  std::cout << "input starts" << std::endl;
  NumericVector x  = RcppDeepState_NumericVector();
  qs::c_qsave(x,"/home/akhila/fuzzer_packages/fuzzedpackages/Gmisc/inst/testfiles/calculateLinesAndArrow/inputs/x.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "x values: "<< x << std::endl;
  NumericVector y  = RcppDeepState_NumericVector();
  qs::c_qsave(y,"/home/akhila/fuzzer_packages/fuzzedpackages/Gmisc/inst/testfiles/calculateLinesAndArrow/inputs/y.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "y values: "<< y << std::endl;
  NumericVector offset  = RcppDeepState_NumericVector();
  qs::c_qsave(offset,"/home/akhila/fuzzer_packages/fuzzedpackages/Gmisc/inst/testfiles/calculateLinesAndArrow/inputs/offset.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "offset values: "<< offset << std::endl;
  NumericVector end_x(1);
  end_x[0]  = RcppDeepState_double();
  qs::c_qsave(end_x,"/home/akhila/fuzzer_packages/fuzzedpackages/Gmisc/inst/testfiles/calculateLinesAndArrow/inputs/end_x.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "end_x values: "<< end_x << std::endl;
  NumericVector end_y(1);
  end_y[0]  = RcppDeepState_double();
  qs::c_qsave(end_y,"/home/akhila/fuzzer_packages/fuzzedpackages/Gmisc/inst/testfiles/calculateLinesAndArrow/inputs/end_y.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "end_y values: "<< end_y << std::endl;
  NumericVector arrow_offset(1);
  arrow_offset[0]  = RcppDeepState_double();
  qs::c_qsave(arrow_offset,"/home/akhila/fuzzer_packages/fuzzedpackages/Gmisc/inst/testfiles/calculateLinesAndArrow/inputs/arrow_offset.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "arrow_offset values: "<< arrow_offset << std::endl;
  IntegerVector rm_intersect(1);
  rm_intersect[0]  = RcppDeepState_int();
  qs::c_qsave(rm_intersect,"/home/akhila/fuzzer_packages/fuzzedpackages/Gmisc/inst/testfiles/calculateLinesAndArrow/inputs/rm_intersect.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "rm_intersect values: "<< rm_intersect << std::endl;
  std::cout << "input ends" << std::endl;
  try{
    calculateLinesAndArrow(x,y,offset,end_x[0],end_y[0],arrow_offset[0],rm_intersect[0]);
  }
  catch(Rcpp::exception& e){
    std::cout<<"Exception Handled"<<std::endl;
  }
}
