// AUTOMATICALLY GENERATED BY RCPPDEEPSTATE PLEASE DO NOT EDIT BY HAND, INSTEAD EDIT
// assignValues_cpp_DeepState_TestHarness_generation.cpp and assignValues_cpp_DeepState_TestHarness_checks.cpp

#include <fstream>
#include <RInside.h>
#include <iostream>
#include <RcppDeepState.h>
#include <qs.h>
#include <DeepState.hpp>

NumericMatrix assignValues_cpp(int val, IntegerVector ad, NumericMatrix mtx);

TEST(landscapeR_deepstate_test,assignValues_cpp_test){
  RInside R;
  std::cout << "input starts" << std::endl;
  IntegerVector val(1);
  val[0]  = RcppDeepState_int();
  qs::c_qsave(val,"/home/akhila/fuzzer_packages/fuzzedpackages/landscapeR/inst/testfiles/assignValues_cpp/inputs/val.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "val values: "<< val << std::endl;
  IntegerVector ad  = RcppDeepState_IntegerVector();
  qs::c_qsave(ad,"/home/akhila/fuzzer_packages/fuzzedpackages/landscapeR/inst/testfiles/assignValues_cpp/inputs/ad.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "ad values: "<< ad << std::endl;
  NumericMatrix mtx  = RcppDeepState_NumericMatrix();
  qs::c_qsave(mtx,"/home/akhila/fuzzer_packages/fuzzedpackages/landscapeR/inst/testfiles/assignValues_cpp/inputs/mtx.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "mtx values: "<< mtx << std::endl;
  std::cout << "input ends" << std::endl;
  try{
    assignValues_cpp(val[0],ad,mtx);
  }
  catch(Rcpp::exception& e){
    std::cout<<"Exception Handled"<<std::endl;
  }
}
