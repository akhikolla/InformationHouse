// AUTOMATICALLY GENERATED BY RCPPDEEPSTATE PLEASE DO NOT EDIT BY HAND, INSTEAD EDIT
// indexTranspose_cpp_DeepState_TestHarness_generation.cpp and indexTranspose_cpp_DeepState_TestHarness_checks.cpp

#include <fstream>
#include <RInside.h>
#include <iostream>
#include <RcppDeepState.h>
#include <qs.h>
#include <DeepState.hpp>

IntegerVector indexTranspose_cpp(IntegerVector id, int dim1, int dim2);

TEST(landscapeR_deepstate_test,indexTranspose_cpp_test){
  RInside R;
  std::cout << "input starts" << std::endl;
  IntegerVector id  = RcppDeepState_IntegerVector();
  qs::c_qsave(id,"/home/akhila/fuzzer_packages/fuzzedpackages/landscapeR/inst/testfiles/indexTranspose_cpp/inputs/id.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "id values: "<< id << std::endl;
  IntegerVector dim1(1);
  dim1[0]  = RcppDeepState_int();
  qs::c_qsave(dim1,"/home/akhila/fuzzer_packages/fuzzedpackages/landscapeR/inst/testfiles/indexTranspose_cpp/inputs/dim1.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "dim1 values: "<< dim1 << std::endl;
  IntegerVector dim2(1);
  dim2[0]  = RcppDeepState_int();
  qs::c_qsave(dim2,"/home/akhila/fuzzer_packages/fuzzedpackages/landscapeR/inst/testfiles/indexTranspose_cpp/inputs/dim2.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "dim2 values: "<< dim2 << std::endl;
  std::cout << "input ends" << std::endl;
  try{
    indexTranspose_cpp(id,dim1[0],dim2[0]);
  }
  catch(Rcpp::exception& e){
    std::cout<<"Exception Handled"<<std::endl;
  }
}
