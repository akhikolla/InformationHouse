// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <Rcpp.h>

using namespace Rcpp;

// tf_dp
NumericVector tf_dp(int n, NumericVector y, double lam);
RcppExport SEXP _flam_tf_dp(SEXP nSEXP, SEXP ySEXP, SEXP lamSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< int >::type n(nSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type y(ySEXP);
    Rcpp::traits::input_parameter< double >::type lam(lamSEXP);
    rcpp_result_gen = Rcpp::wrap(tf_dp(n, y, lam));
    return rcpp_result_gen;
END_RCPP
}
// updatecolumn
void updatecolumn(NumericMatrix thetamat, NumericVector column, int colnum, int nrow);
RcppExport SEXP _flam_updatecolumn(SEXP thetamatSEXP, SEXP columnSEXP, SEXP colnumSEXP, SEXP nrowSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericMatrix >::type thetamat(thetamatSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type column(columnSEXP);
    Rcpp::traits::input_parameter< int >::type colnum(colnumSEXP);
    Rcpp::traits::input_parameter< int >::type nrow(nrowSEXP);
    updatecolumn(thetamat, column, colnum, nrow);
    return R_NilValue;
END_RCPP
}
// updatevector
void updatevector(NumericVector vector, NumericVector update, int length);
RcppExport SEXP _flam_updatevector(SEXP vectorSEXP, SEXP updateSEXP, SEXP lengthSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type vector(vectorSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type update(updateSEXP);
    Rcpp::traits::input_parameter< int >::type length(lengthSEXP);
    updatevector(vector, update, length);
    return R_NilValue;
END_RCPP
}
// updateresidual
void updateresidual(NumericVector resid, NumericVector y, NumericMatrix thetamat, int j, int n, int p);
RcppExport SEXP _flam_updateresidual(SEXP residSEXP, SEXP ySEXP, SEXP thetamatSEXP, SEXP jSEXP, SEXP nSEXP, SEXP pSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type resid(residSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type y(ySEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type thetamat(thetamatSEXP);
    Rcpp::traits::input_parameter< int >::type j(jSEXP);
    Rcpp::traits::input_parameter< int >::type n(nSEXP);
    Rcpp::traits::input_parameter< int >::type p(pSEXP);
    updateresidual(resid, y, thetamat, j, n, p);
    return R_NilValue;
END_RCPP
}
// calcsum
double calcsum(NumericMatrix thetamat, int n, int p);
RcppExport SEXP _flam_calcsum(SEXP thetamatSEXP, SEXP nSEXP, SEXP pSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericMatrix >::type thetamat(thetamatSEXP);
    Rcpp::traits::input_parameter< int >::type n(nSEXP);
    Rcpp::traits::input_parameter< int >::type p(pSEXP);
    rcpp_result_gen = Rcpp::wrap(calcsum(thetamat, n, p));
    return rcpp_result_gen;
END_RCPP
}
// order_
IntegerVector order_(NumericVector x);
RcppExport SEXP _flam_order_(SEXP xSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type x(xSEXP);
    rcpp_result_gen = Rcpp::wrap(order_(x));
    return rcpp_result_gen;
END_RCPP
}
// maxLambda_a1_C_single
double maxLambda_a1_C_single(NumericVector ycenter, NumericVector xcol, int n);
RcppExport SEXP _flam_maxLambda_a1_C_single(SEXP ycenterSEXP, SEXP xcolSEXP, SEXP nSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type ycenter(ycenterSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type xcol(xcolSEXP);
    Rcpp::traits::input_parameter< int >::type n(nSEXP);
    rcpp_result_gen = Rcpp::wrap(maxLambda_a1_C_single(ycenter, xcol, n));
    return rcpp_result_gen;
END_RCPP
}
// ordertheta
NumericVector ordertheta(NumericMatrix thetamat, IntegerMatrix orderx, int i, int n);
RcppExport SEXP _flam_ordertheta(SEXP thetamatSEXP, SEXP orderxSEXP, SEXP iSEXP, SEXP nSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericMatrix >::type thetamat(thetamatSEXP);
    Rcpp::traits::input_parameter< IntegerMatrix >::type orderx(orderxSEXP);
    Rcpp::traits::input_parameter< int >::type i(iSEXP);
    Rcpp::traits::input_parameter< int >::type n(nSEXP);
    rcpp_result_gen = Rcpp::wrap(ordertheta(thetamat, orderx, i, n));
    return rcpp_result_gen;
END_RCPP
}
// orderthetamat
NumericMatrix orderthetamat(NumericMatrix thetamat, IntegerMatrix orderx, int n, int p);
RcppExport SEXP _flam_orderthetamat(SEXP thetamatSEXP, SEXP orderxSEXP, SEXP nSEXP, SEXP pSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericMatrix >::type thetamat(thetamatSEXP);
    Rcpp::traits::input_parameter< IntegerMatrix >::type orderx(orderxSEXP);
    Rcpp::traits::input_parameter< int >::type n(nSEXP);
    Rcpp::traits::input_parameter< int >::type p(pSEXP);
    rcpp_result_gen = Rcpp::wrap(orderthetamat(thetamat, orderx, n, p));
    return rcpp_result_gen;
END_RCPP
}
// flamstep
List flamstep(NumericMatrix initialthetamat, NumericVector y, double lambda, double alpha, int n, int p, IntegerMatrix orderx, IntegerMatrix rankx, double tolerance);
RcppExport SEXP _flam_flamstep(SEXP initialthetamatSEXP, SEXP ySEXP, SEXP lambdaSEXP, SEXP alphaSEXP, SEXP nSEXP, SEXP pSEXP, SEXP orderxSEXP, SEXP rankxSEXP, SEXP toleranceSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericMatrix >::type initialthetamat(initialthetamatSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type y(ySEXP);
    Rcpp::traits::input_parameter< double >::type lambda(lambdaSEXP);
    Rcpp::traits::input_parameter< double >::type alpha(alphaSEXP);
    Rcpp::traits::input_parameter< int >::type n(nSEXP);
    Rcpp::traits::input_parameter< int >::type p(pSEXP);
    Rcpp::traits::input_parameter< IntegerMatrix >::type orderx(orderxSEXP);
    Rcpp::traits::input_parameter< IntegerMatrix >::type rankx(rankxSEXP);
    Rcpp::traits::input_parameter< double >::type tolerance(toleranceSEXP);
    rcpp_result_gen = Rcpp::wrap(flamstep(initialthetamat, y, lambda, alpha, n, p, orderx, rankx, tolerance));
    return rcpp_result_gen;
END_RCPP
}
// flamsteplogistic
List flamsteplogistic(NumericMatrix initialthetamat, NumericVector y, double lambda, double alpha, int n, int p, IntegerMatrix orderx, IntegerMatrix rankx, double tolerance);
RcppExport SEXP _flam_flamsteplogistic(SEXP initialthetamatSEXP, SEXP ySEXP, SEXP lambdaSEXP, SEXP alphaSEXP, SEXP nSEXP, SEXP pSEXP, SEXP orderxSEXP, SEXP rankxSEXP, SEXP toleranceSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericMatrix >::type initialthetamat(initialthetamatSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type y(ySEXP);
    Rcpp::traits::input_parameter< double >::type lambda(lambdaSEXP);
    Rcpp::traits::input_parameter< double >::type alpha(alphaSEXP);
    Rcpp::traits::input_parameter< int >::type n(nSEXP);
    Rcpp::traits::input_parameter< int >::type p(pSEXP);
    Rcpp::traits::input_parameter< IntegerMatrix >::type orderx(orderxSEXP);
    Rcpp::traits::input_parameter< IntegerMatrix >::type rankx(rankxSEXP);
    Rcpp::traits::input_parameter< double >::type tolerance(toleranceSEXP);
    rcpp_result_gen = Rcpp::wrap(flamsteplogistic(initialthetamat, y, lambda, alpha, n, p, orderx, rankx, tolerance));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_flam_tf_dp", (DL_FUNC) &_flam_tf_dp, 3},
    {"_flam_updatecolumn", (DL_FUNC) &_flam_updatecolumn, 4},
    {"_flam_updatevector", (DL_FUNC) &_flam_updatevector, 3},
    {"_flam_updateresidual", (DL_FUNC) &_flam_updateresidual, 6},
    {"_flam_calcsum", (DL_FUNC) &_flam_calcsum, 3},
    {"_flam_order_", (DL_FUNC) &_flam_order_, 1},
    {"_flam_maxLambda_a1_C_single", (DL_FUNC) &_flam_maxLambda_a1_C_single, 3},
    {"_flam_ordertheta", (DL_FUNC) &_flam_ordertheta, 4},
    {"_flam_orderthetamat", (DL_FUNC) &_flam_orderthetamat, 4},
    {"_flam_flamstep", (DL_FUNC) &_flam_flamstep, 9},
    {"_flam_flamsteplogistic", (DL_FUNC) &_flam_flamsteplogistic, 9},
    {NULL, NULL, 0}
};

RcppExport void R_init_flam(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
