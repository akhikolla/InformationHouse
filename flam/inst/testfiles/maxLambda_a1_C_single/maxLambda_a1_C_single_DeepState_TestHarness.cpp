// AUTOMATICALLY GENERATED BY RCPPDEEPSTATE PLEASE DO NOT EDIT BY HAND, INSTEAD EDIT
// maxLambda_a1_C_single_DeepState_TestHarness_generation.cpp and maxLambda_a1_C_single_DeepState_TestHarness_checks.cpp

#include <fstream>
#include <RInside.h>
#include <iostream>
#include <RcppDeepState.h>
#include <qs.h>
#include <DeepState.hpp>

double maxLambda_a1_C_single(NumericVector ycenter, NumericVector xcol, int n);

TEST(flam_deepstate_test,maxLambda_a1_C_single_test){
  RInside R;
  std::cout << "input starts" << std::endl;
  NumericVector ycenter  = RcppDeepState_NumericVector();
  qs::c_qsave(ycenter,"/home/akhila/fuzzer_packages/fuzzedpackages/flam/inst/testfiles/maxLambda_a1_C_single/inputs/ycenter.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "ycenter values: "<< ycenter << std::endl;
  NumericVector xcol  = RcppDeepState_NumericVector();
  qs::c_qsave(xcol,"/home/akhila/fuzzer_packages/fuzzedpackages/flam/inst/testfiles/maxLambda_a1_C_single/inputs/xcol.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "xcol values: "<< xcol << std::endl;
  IntegerVector n(1);
  n[0]  = RcppDeepState_int();
  qs::c_qsave(n,"/home/akhila/fuzzer_packages/fuzzedpackages/flam/inst/testfiles/maxLambda_a1_C_single/inputs/n.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "n values: "<< n << std::endl;
  std::cout << "input ends" << std::endl;
  try{
    maxLambda_a1_C_single(ycenter,xcol,n[0]);
  }
  catch(Rcpp::exception& e){
    std::cout<<"Exception Handled"<<std::endl;
  }
}
