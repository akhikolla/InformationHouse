// AUTOMATICALLY GENERATED BY RCPPDEEPSTATE PLEASE DO NOT EDIT BY HAND, INSTEAD EDIT
// tf_dp_DeepState_TestHarness_generation.cpp and tf_dp_DeepState_TestHarness_checks.cpp

#include <fstream>
#include <RInside.h>
#include <iostream>
#include <RcppDeepState.h>
#include <qs.h>
#include <DeepState.hpp>

NumericVector tf_dp(int n, NumericVector y, double lam);

TEST(flam_deepstate_test,tf_dp_test){
  RInside R;
  std::cout << "input starts" << std::endl;
  IntegerVector n(1);
  n[0]  = RcppDeepState_int();
  qs::c_qsave(n,"/home/akhila/fuzzer_packages/fuzzedpackages/flam/inst/testfiles/tf_dp/inputs/n.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "n values: "<< n << std::endl;
  NumericVector y  = RcppDeepState_NumericVector();
  qs::c_qsave(y,"/home/akhila/fuzzer_packages/fuzzedpackages/flam/inst/testfiles/tf_dp/inputs/y.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "y values: "<< y << std::endl;
  NumericVector lam(1);
  lam[0]  = RcppDeepState_double();
  qs::c_qsave(lam,"/home/akhila/fuzzer_packages/fuzzedpackages/flam/inst/testfiles/tf_dp/inputs/lam.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "lam values: "<< lam << std::endl;
  std::cout << "input ends" << std::endl;
  try{
    tf_dp(n[0],y,lam[0]);
  }
  catch(Rcpp::exception& e){
    std::cout<<"Exception Handled"<<std::endl;
  }
}
