// AUTOMATICALLY GENERATED BY RCPPDEEPSTATE PLEASE DO NOT EDIT BY HAND, INSTEAD EDIT
// updatevector_DeepState_TestHarness_generation.cpp and updatevector_DeepState_TestHarness_checks.cpp

#include <fstream>
#include <RInside.h>
#include <iostream>
#include <RcppDeepState.h>
#include <qs.h>
#include <DeepState.hpp>

void updatevector(NumericVector vector, NumericVector update, int length);

TEST(flam_deepstate_test,updatevector_test){
  RInside R;
  std::cout << "input starts" << std::endl;
  NumericVector vector  = RcppDeepState_NumericVector();
  qs::c_qsave(vector,"/home/akhila/fuzzer_packages/fuzzedpackages/flam/inst/testfiles/updatevector/inputs/vector.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "vector values: "<< vector << std::endl;
  NumericVector update  = RcppDeepState_NumericVector();
  qs::c_qsave(update,"/home/akhila/fuzzer_packages/fuzzedpackages/flam/inst/testfiles/updatevector/inputs/update.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "update values: "<< update << std::endl;
  IntegerVector length(1);
  length[0]  = RcppDeepState_int();
  qs::c_qsave(length,"/home/akhila/fuzzer_packages/fuzzedpackages/flam/inst/testfiles/updatevector/inputs/length.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "length values: "<< length << std::endl;
  std::cout << "input ends" << std::endl;
  try{
    updatevector(vector,update,length[0]);
  }
  catch(Rcpp::exception& e){
    std::cout<<"Exception Handled"<<std::endl;
  }
}
