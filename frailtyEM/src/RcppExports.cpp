// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <Rcpp.h>

using namespace Rcpp;

// Estep
NumericMatrix Estep(NumericVector c, NumericVector c_lt, IntegerVector delta, double alpha, double bbeta, const double& pvfm, const int& dist);
RcppExport SEXP _frailtyEM_Estep(SEXP cSEXP, SEXP c_ltSEXP, SEXP deltaSEXP, SEXP alphaSEXP, SEXP bbetaSEXP, SEXP pvfmSEXP, SEXP distSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type c(cSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type c_lt(c_ltSEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type delta(deltaSEXP);
    Rcpp::traits::input_parameter< double >::type alpha(alphaSEXP);
    Rcpp::traits::input_parameter< double >::type bbeta(bbetaSEXP);
    Rcpp::traits::input_parameter< const double& >::type pvfm(pvfmSEXP);
    Rcpp::traits::input_parameter< const int& >::type dist(distSEXP);
    rcpp_result_gen = Rcpp::wrap(Estep(c, c_lt, delta, alpha, bbeta, pvfm, dist));
    return rcpp_result_gen;
END_RCPP
}
// sumxxt
NumericVector sumxxt(List x, int L);
RcppExport SEXP _frailtyEM_sumxxt(SEXP xSEXP, SEXP LSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< List >::type x(xSEXP);
    Rcpp::traits::input_parameter< int >::type L(LSEXP);
    rcpp_result_gen = Rcpp::wrap(sumxxt(x, L));
    return rcpp_result_gen;
END_RCPP
}
// cumsum_elp
NumericVector cumsum_elp(NumericVector left, NumericVector right, NumericVector elp, int maxlength);
RcppExport SEXP _frailtyEM_cumsum_elp(SEXP leftSEXP, SEXP rightSEXP, SEXP elpSEXP, SEXP maxlengthSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type left(leftSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type right(rightSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type elp(elpSEXP);
    Rcpp::traits::input_parameter< int >::type maxlength(maxlengthSEXP);
    rcpp_result_gen = Rcpp::wrap(cumsum_elp(left, right, elp, maxlength));
    return rcpp_result_gen;
END_RCPP
}
// rowsum_vec
NumericVector rowsum_vec(NumericVector x, NumericVector pos, int lgth);
RcppExport SEXP _frailtyEM_rowsum_vec(SEXP xSEXP, SEXP posSEXP, SEXP lgthSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type x(xSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type pos(posSEXP);
    Rcpp::traits::input_parameter< int >::type lgth(lgthSEXP);
    rcpp_result_gen = Rcpp::wrap(rowsum_vec(x, pos, lgth));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_frailtyEM_Estep", (DL_FUNC) &_frailtyEM_Estep, 7},
    {"_frailtyEM_sumxxt", (DL_FUNC) &_frailtyEM_sumxxt, 2},
    {"_frailtyEM_cumsum_elp", (DL_FUNC) &_frailtyEM_cumsum_elp, 4},
    {"_frailtyEM_rowsum_vec", (DL_FUNC) &_frailtyEM_rowsum_vec, 3},
    {NULL, NULL, 0}
};

RcppExport void R_init_frailtyEM(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
