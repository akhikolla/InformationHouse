// AUTOMATICALLY GENERATED BY RCPPDEEPSTATE PLEASE DO NOT EDIT BY HAND, INSTEAD EDIT
// MAVEfastCpp_DeepState_TestHarness_generation.cpp and MAVEfastCpp_DeepState_TestHarness_checks.cpp

#include <fstream>
#include <RInside.h>
#include <iostream>
#include <RcppDeepState.h>
#include <qs.h>
#include <DeepState.hpp>

List MAVEfastCpp(NumericMatrix x, NumericMatrix y, CharacterVector method, double max_dim, double screen);

TEST(MAVE_deepstate_test,MAVEfastCpp_test){
  RInside R;
  std::cout << "input starts" << std::endl;
  NumericMatrix x  = RcppDeepState_NumericMatrix();
  qs::c_qsave(x,"/home/akhila/fuzzer_packages/fuzzedpackages/MAVE/inst/testfiles/MAVEfastCpp/inputs/x.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "x values: "<< x << std::endl;
  NumericMatrix y  = RcppDeepState_NumericMatrix();
  qs::c_qsave(y,"/home/akhila/fuzzer_packages/fuzzedpackages/MAVE/inst/testfiles/MAVEfastCpp/inputs/y.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "y values: "<< y << std::endl;
  CharacterVector method  = RcppDeepState_CharacterVector();
  qs::c_qsave(method,"/home/akhila/fuzzer_packages/fuzzedpackages/MAVE/inst/testfiles/MAVEfastCpp/inputs/method.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "method values: "<< method << std::endl;
  NumericVector max_dim(1);
  max_dim[0]  = RcppDeepState_double();
  qs::c_qsave(max_dim,"/home/akhila/fuzzer_packages/fuzzedpackages/MAVE/inst/testfiles/MAVEfastCpp/inputs/max_dim.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "max_dim values: "<< max_dim << std::endl;
  NumericVector screen(1);
  screen[0]  = RcppDeepState_double();
  qs::c_qsave(screen,"/home/akhila/fuzzer_packages/fuzzedpackages/MAVE/inst/testfiles/MAVEfastCpp/inputs/screen.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "screen values: "<< screen << std::endl;
  std::cout << "input ends" << std::endl;
  try{
    MAVEfastCpp(x,y,method,max_dim[0],screen[0]);
  }
  catch(Rcpp::exception& e){
    std::cout<<"Exception Handled"<<std::endl;
  }
}
