// AUTOMATICALLY GENERATED BY RCPPDEEPSTATE PLEASE DO NOT EDIT BY HAND, INSTEAD EDIT
// pheno_DeepState_TestHarness_generation.cpp and pheno_DeepState_TestHarness_checks.cpp

#include <fstream>
#include <RInside.h>
#include <iostream>
#include <RcppDeepState.h>
#include <qs.h>
#include <DeepState.hpp>

Rcpp::List pheno(double jd_et, int ipl, int ephe_flag);

TEST(swephR_deepstate_test,pheno_test){
  RInside R;
  std::cout << "input starts" << std::endl;
  NumericVector jd_et(1);
  jd_et[0]  = RcppDeepState_double();
  qs::c_qsave(jd_et,"/home/akhila/fuzzer_packages/fuzzedpackages/swephR/inst/testfiles/pheno/inputs/jd_et.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "jd_et values: "<< jd_et << std::endl;
  IntegerVector ipl(1);
  ipl[0]  = RcppDeepState_int();
  qs::c_qsave(ipl,"/home/akhila/fuzzer_packages/fuzzedpackages/swephR/inst/testfiles/pheno/inputs/ipl.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "ipl values: "<< ipl << std::endl;
  IntegerVector ephe_flag(1);
  ephe_flag[0]  = RcppDeepState_int();
  qs::c_qsave(ephe_flag,"/home/akhila/fuzzer_packages/fuzzedpackages/swephR/inst/testfiles/pheno/inputs/ephe_flag.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "ephe_flag values: "<< ephe_flag << std::endl;
  std::cout << "input ends" << std::endl;
  try{
    pheno(jd_et[0],ipl[0],ephe_flag[0]);
  }
  catch(Rcpp::exception& e){
    std::cout<<"Exception Handled"<<std::endl;
  }
}
