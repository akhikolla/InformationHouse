// AUTOMATICALLY GENERATED BY RCPPDEEPSTATE PLEASE DO NOT EDIT BY HAND, INSTEAD EDIT
// shuffle_grammat_rcpp_DeepState_TestHarness_generation.cpp and shuffle_grammat_rcpp_DeepState_TestHarness_checks.cpp

#include <fstream>
#include <RInside.h>
#include <iostream>
#include <RcppDeepState.h>
#include <qs.h>
#include <DeepState.hpp>

NumericMatrix shuffle_grammat_rcpp(NumericMatrix K, NumericVector perm, int n);

TEST(dHSIC_deepstate_test,shuffle_grammat_rcpp_test){
  RInside R;
  std::cout << "input starts" << std::endl;
  NumericMatrix K  = RcppDeepState_NumericMatrix();
  qs::c_qsave(K,"/home/akhila/fuzzer_packages/fuzzedpackages/dHSIC/inst/testfiles/shuffle_grammat_rcpp/inputs/K.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "K values: "<< K << std::endl;
  NumericVector perm  = RcppDeepState_NumericVector();
  qs::c_qsave(perm,"/home/akhila/fuzzer_packages/fuzzedpackages/dHSIC/inst/testfiles/shuffle_grammat_rcpp/inputs/perm.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "perm values: "<< perm << std::endl;
  IntegerVector n(1);
  n[0]  = RcppDeepState_int();
  qs::c_qsave(n,"/home/akhila/fuzzer_packages/fuzzedpackages/dHSIC/inst/testfiles/shuffle_grammat_rcpp/inputs/n.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "n values: "<< n << std::endl;
  std::cout << "input ends" << std::endl;
  try{
    shuffle_grammat_rcpp(K,perm,n[0]);
  }
  catch(Rcpp::exception& e){
    std::cout<<"Exception Handled"<<std::endl;
  }
}
