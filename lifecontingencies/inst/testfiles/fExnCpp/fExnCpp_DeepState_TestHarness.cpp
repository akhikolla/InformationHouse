// AUTOMATICALLY GENERATED BY RCPPDEEPSTATE PLEASE DO NOT EDIT BY HAND, INSTEAD EDIT
// fExnCpp_DeepState_TestHarness_generation.cpp and fExnCpp_DeepState_TestHarness_checks.cpp

#include <fstream>
#include <RInside.h>
#include <iostream>
#include <RcppDeepState.h>
#include <qs.h>
#include <DeepState.hpp>

double fExnCpp(double T, double y, double n, double i);

TEST(lifecontingencies_deepstate_test,fExnCpp_test){
  RInside R;
  std::cout << "input starts" << std::endl;
  NumericVector T(1);
  T[0]  = RcppDeepState_double();
  qs::c_qsave(T,"/home/akhila/fuzzer_packages/fuzzedpackages/lifecontingencies/inst/testfiles/fExnCpp/inputs/T.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "T values: "<< T << std::endl;
  NumericVector y(1);
  y[0]  = RcppDeepState_double();
  qs::c_qsave(y,"/home/akhila/fuzzer_packages/fuzzedpackages/lifecontingencies/inst/testfiles/fExnCpp/inputs/y.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "y values: "<< y << std::endl;
  NumericVector n(1);
  n[0]  = RcppDeepState_double();
  qs::c_qsave(n,"/home/akhila/fuzzer_packages/fuzzedpackages/lifecontingencies/inst/testfiles/fExnCpp/inputs/n.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "n values: "<< n << std::endl;
  NumericVector i(1);
  i[0]  = RcppDeepState_double();
  qs::c_qsave(i,"/home/akhila/fuzzer_packages/fuzzedpackages/lifecontingencies/inst/testfiles/fExnCpp/inputs/i.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "i values: "<< i << std::endl;
  std::cout << "input ends" << std::endl;
  try{
    fExnCpp(T[0],y[0],n[0],i[0]);
  }
  catch(Rcpp::exception& e){
    std::cout<<"Exception Handled"<<std::endl;
  }
}
