// AUTOMATICALLY GENERATED BY RCPPDEEPSTATE PLEASE DO NOT EDIT BY HAND, INSTEAD EDIT
// funcRes_DeepState_TestHarness_generation.cpp and funcRes_DeepState_TestHarness_checks.cpp

#include <fstream>
#include <RInside.h>
#include <iostream>
#include <RcppDeepState.h>
#include <qs.h>
#include <DeepState.hpp>

List funcRes(NumericMatrix yMat, int M, int minLength, NumericVector probVec, IntegerVector topCand, IntegerVector bottomCand, NumericVector var);

TEST(unsystation_deepstate_test,funcRes_test){
  RInside R;
  std::cout << "input starts" << std::endl;
  NumericMatrix yMat  = RcppDeepState_NumericMatrix();
  qs::c_qsave(yMat,"/home/akhila/fuzzer_packages/fuzzedpackages/unsystation/inst/testfiles/funcRes/inputs/yMat.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "yMat values: "<< yMat << std::endl;
  IntegerVector M(1);
  M[0]  = RcppDeepState_int();
  qs::c_qsave(M,"/home/akhila/fuzzer_packages/fuzzedpackages/unsystation/inst/testfiles/funcRes/inputs/M.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "M values: "<< M << std::endl;
  IntegerVector minLength(1);
  minLength[0]  = RcppDeepState_int();
  qs::c_qsave(minLength,"/home/akhila/fuzzer_packages/fuzzedpackages/unsystation/inst/testfiles/funcRes/inputs/minLength.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "minLength values: "<< minLength << std::endl;
  NumericVector probVec  = RcppDeepState_NumericVector();
  qs::c_qsave(probVec,"/home/akhila/fuzzer_packages/fuzzedpackages/unsystation/inst/testfiles/funcRes/inputs/probVec.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "probVec values: "<< probVec << std::endl;
  IntegerVector topCand  = RcppDeepState_IntegerVector();
  qs::c_qsave(topCand,"/home/akhila/fuzzer_packages/fuzzedpackages/unsystation/inst/testfiles/funcRes/inputs/topCand.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "topCand values: "<< topCand << std::endl;
  IntegerVector bottomCand  = RcppDeepState_IntegerVector();
  qs::c_qsave(bottomCand,"/home/akhila/fuzzer_packages/fuzzedpackages/unsystation/inst/testfiles/funcRes/inputs/bottomCand.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "bottomCand values: "<< bottomCand << std::endl;
  NumericVector var  = RcppDeepState_NumericVector();
  qs::c_qsave(var,"/home/akhila/fuzzer_packages/fuzzedpackages/unsystation/inst/testfiles/funcRes/inputs/var.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "var values: "<< var << std::endl;
  std::cout << "input ends" << std::endl;
  try{
    funcRes(yMat,M[0],minLength[0],probVec,topCand,bottomCand,var);
  }
  catch(Rcpp::exception& e){
    std::cout<<"Exception Handled"<<std::endl;
  }
}
