// AUTOMATICALLY GENERATED BY RCPPDEEPSTATE PLEASE DO NOT EDIT BY HAND, INSTEAD EDIT
// funcResVar_DeepState_TestHarness_generation.cpp and funcResVar_DeepState_TestHarness_checks.cpp

#include <fstream>
#include <RInside.h>
#include <iostream>
#include <RcppDeepState.h>
#include <qs.h>
#include <DeepState.hpp>

NumericMatrix funcResVar(NumericMatrix yMat, NumericMatrix seMat, NumericVector tmpVar);

TEST(unsystation_deepstate_test,funcResVar_test){
  RInside R;
  std::cout << "input starts" << std::endl;
  NumericMatrix yMat  = RcppDeepState_NumericMatrix();
  qs::c_qsave(yMat,"/home/akhila/fuzzer_packages/fuzzedpackages/unsystation/inst/testfiles/funcResVar/inputs/yMat.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "yMat values: "<< yMat << std::endl;
  NumericMatrix seMat  = RcppDeepState_NumericMatrix();
  qs::c_qsave(seMat,"/home/akhila/fuzzer_packages/fuzzedpackages/unsystation/inst/testfiles/funcResVar/inputs/seMat.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "seMat values: "<< seMat << std::endl;
  NumericVector tmpVar  = RcppDeepState_NumericVector();
  qs::c_qsave(tmpVar,"/home/akhila/fuzzer_packages/fuzzedpackages/unsystation/inst/testfiles/funcResVar/inputs/tmpVar.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "tmpVar values: "<< tmpVar << std::endl;
  std::cout << "input ends" << std::endl;
  try{
    funcResVar(yMat,seMat,tmpVar);
  }
  catch(Rcpp::exception& e){
    std::cout<<"Exception Handled"<<std::endl;
  }
}
