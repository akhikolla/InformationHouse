// AUTOMATICALLY GENERATED BY RCPPDEEPSTATE PLEASE DO NOT EDIT BY HAND, INSTEAD EDIT
// funcApplyVar_DeepState_TestHarness_generation.cpp and funcApplyVar_DeepState_TestHarness_checks.cpp

#include <fstream>
#include <RInside.h>
#include <iostream>
#include <RcppDeepState.h>
#include <qs.h>
#include <DeepState.hpp>

NumericMatrix funcApplyVar(NumericMatrix nullStatMat, int maxLevel, int Msq);

TEST(unsystation_deepstate_test,funcApplyVar_test){
  RInside R;
  std::cout << "input starts" << std::endl;
  NumericMatrix nullStatMat  = RcppDeepState_NumericMatrix();
  qs::c_qsave(nullStatMat,"/home/akhila/fuzzer_packages/fuzzedpackages/unsystation/inst/testfiles/funcApplyVar/inputs/nullStatMat.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "nullStatMat values: "<< nullStatMat << std::endl;
  IntegerVector maxLevel(1);
  maxLevel[0]  = RcppDeepState_int();
  qs::c_qsave(maxLevel,"/home/akhila/fuzzer_packages/fuzzedpackages/unsystation/inst/testfiles/funcApplyVar/inputs/maxLevel.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "maxLevel values: "<< maxLevel << std::endl;
  IntegerVector Msq(1);
  Msq[0]  = RcppDeepState_int();
  qs::c_qsave(Msq,"/home/akhila/fuzzer_packages/fuzzedpackages/unsystation/inst/testfiles/funcApplyVar/inputs/Msq.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "Msq values: "<< Msq << std::endl;
  std::cout << "input ends" << std::endl;
  try{
    funcApplyVar(nullStatMat,maxLevel[0],Msq[0]);
  }
  catch(Rcpp::exception& e){
    std::cout<<"Exception Handled"<<std::endl;
  }
}
