// AUTOMATICALLY GENERATED BY RCPPDEEPSTATE PLEASE DO NOT EDIT BY HAND, INSTEAD EDIT
// cluster_interval_DeepState_TestHarness_generation.cpp and cluster_interval_DeepState_TestHarness_checks.cpp

#include <fstream>
#include <RInside.h>
#include <iostream>
#include <RcppDeepState.h>
#include <qs.h>
#include <DeepState.hpp>

IntegerVector cluster_interval(NumericVector starts, NumericVector ends, int max_distance);

TEST(tidygenomics_deepstate_test,cluster_interval_test){
  RInside R;
  std::cout << "input starts" << std::endl;
  NumericVector starts  = RcppDeepState_NumericVector();
  qs::c_qsave(starts,"/home/akhila/fuzzer_packages/fuzzedpackages/tidygenomics/inst/testfiles/cluster_interval/inputs/starts.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "starts values: "<< starts << std::endl;
  NumericVector ends  = RcppDeepState_NumericVector();
  qs::c_qsave(ends,"/home/akhila/fuzzer_packages/fuzzedpackages/tidygenomics/inst/testfiles/cluster_interval/inputs/ends.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "ends values: "<< ends << std::endl;
  IntegerVector max_distance(1);
  max_distance[0]  = RcppDeepState_int();
  qs::c_qsave(max_distance,"/home/akhila/fuzzer_packages/fuzzedpackages/tidygenomics/inst/testfiles/cluster_interval/inputs/max_distance.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "max_distance values: "<< max_distance << std::endl;
  std::cout << "input ends" << std::endl;
  try{
    cluster_interval(starts,ends,max_distance[0]);
  }
  catch(Rcpp::exception& e){
    std::cout<<"Exception Handled"<<std::endl;
  }
}
