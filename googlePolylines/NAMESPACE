# Generated by roxygen2: do not edit by hand

S3method("[",sfencoded)
S3method("[",sfencodedLite)
S3method(as.data.frame,sfencoded)
S3method(decode,character)
S3method(decode,default)
S3method(decode,encoded_column)
S3method(decode,zm_column)
S3method(encode,data.frame)
S3method(encode,default)
S3method(encode,sf)
S3method(encode,sfc)
S3method(geometryRow,default)
S3method(geometryRow,sfencoded)
S3method(polyline_wkt,default)
S3method(polyline_wkt,encoded_column)
S3method(polyline_wkt,sfencoded)
S3method(polyline_wkt,sfencodedLite)
S3method(print,sfencoded)
S3method(print,sfencodedLite)
S3method(sfAttributes,sfencoded)
S3method(sfDimension,sfc)
S3method(sfEpsg,sfc)
S3method(sfGeometryAttributes,sf)
S3method(sfGeometryAttributes,sfc)
S3method(sfGeometryColumn,sf)
S3method(sfGeometryType,sfc)
S3method(sfNEmpty,sfc)
S3method(sfPrecision,sfc)
S3method(sfProj,sfc)
S3method(str,encoded_column)
S3method(str,wkt_column)
S3method(str,zm_column)
S3method(wkt_polyline,default)
S3method(wkt_polyline,sfencoded)
S3method(wkt_polyline,wkt_column)
export(decode)
export(encode)
export(encodeCoordinates)
export(geometryRow)
export(polyline_wkt)
export(sfAttributes)
export(wkt_polyline)
importFrom(Rcpp,sourceCpp)
importFrom(stats,setNames)
useDynLib(googlePolylines)
