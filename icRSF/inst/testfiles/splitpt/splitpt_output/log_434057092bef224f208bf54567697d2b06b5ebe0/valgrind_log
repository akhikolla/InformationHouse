<?xml version="1.0"?>

<valgrindoutput>

<protocolversion>4</protocolversion>
<protocoltool>memcheck</protocoltool>

<preamble>
  <line>Memcheck, a memory error detector</line>
  <line>Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.</line>
  <line>Using Valgrind-3.15.0 and LibVEX; rerun with -h for copyright info</line>
  <line>Command: ./splitpt_DeepState_TestHarness --input_test_file /home/akhila/fuzzer_packages/fuzzedpackages/icRSF/inst/testfiles/splitpt/splitpt_output/434057092bef224f208bf54567697d2b06b5ebe0.pass</line>
</preamble>

<pid>873720</pid>
<ppid>873719</ppid>
<tool>memcheck</tool>

<args>
  <vargv>
    <exe>/usr/bin/valgrind.bin</exe>
    <arg>--xml=yes</arg>
    <arg>--xml-file=/home/akhila/fuzzer_packages/fuzzedpackages/icRSF/inst/testfiles/splitpt/splitpt_output/log_434057092bef224f208bf54567697d2b06b5ebe0/valgrind_log</arg>
    <arg>--tool=memcheck</arg>
    <arg>--leak-check=yes</arg>
  </vargv>
  <argv>
    <exe>./splitpt_DeepState_TestHarness</exe>
    <arg>--input_test_file</arg>
    <arg>/home/akhila/fuzzer_packages/fuzzedpackages/icRSF/inst/testfiles/splitpt/splitpt_output/434057092bef224f208bf54567697d2b06b5ebe0.pass</arg>
  </argv>
</args>

<status>
  <state>RUNNING</state>
  <time>00:00:00:00.038 </time>
</status>

<error>
  <unique>0x0</unique>
  <tid>1</tid>
  <kind>UninitCondition</kind>
  <what>Conditional jump or move depends on uninitialised value(s)</what>
  <stack>
    <frame>
      <ip>0x4D39FCB</ip>
      <obj>/home/akhila/fuzzer_packages/fuzzedpackages/icRSF/src/icRSF.so</obj>
      <fn>splitpt(Rcpp::Matrix&lt;14, Rcpp::PreserveStorage&gt;, Rcpp::Vector&lt;14, Rcpp::PreserveStorage&gt;, Rcpp::Vector&lt;14, Rcpp::PreserveStorage&gt;)</fn>
      <dir>/home/akhila/fuzzer_packages/fuzzedpackages/icRSF/src</dir>
      <file>loglikhood2.cpp</file>
      <line>304</line>
    </frame>
    <frame>
      <ip>0x40A147</ip>
      <obj>/home/akhila/fuzzer_packages/fuzzedpackages/icRSF/inst/testfiles/splitpt/splitpt_DeepState_TestHarness</obj>
      <fn>DeepState_Test_icRSF_deepstate_test_splitpt_test()</fn>
      <dir>/home/akhila/fuzzer_packages/fuzzedpackages/icRSF/inst/testfiles/splitpt</dir>
      <file>splitpt_DeepState_TestHarness.cpp</file>
      <line>30</line>
    </frame>
    <frame>
      <ip>0x409BA8</ip>
      <obj>/home/akhila/fuzzer_packages/fuzzedpackages/icRSF/inst/testfiles/splitpt/splitpt_DeepState_TestHarness</obj>
      <fn>DeepState_Run_icRSF_deepstate_test_splitpt_test()</fn>
      <dir>/home/akhila/fuzzer_packages/fuzzedpackages/icRSF/inst/testfiles/splitpt</dir>
      <file>splitpt_DeepState_TestHarness.cpp</file>
      <line>13</line>
    </frame>
    <frame>
      <ip>0x41DBC8</ip>
      <obj>/home/akhila/fuzzer_packages/fuzzedpackages/icRSF/inst/testfiles/splitpt/splitpt_DeepState_TestHarness</obj>
      <fn>DeepState_RunTest.isra.0</fn>
    </frame>
    <frame>
      <ip>0x41DE69</ip>
      <obj>/home/akhila/fuzzer_packages/fuzzedpackages/icRSF/inst/testfiles/splitpt/splitpt_DeepState_TestHarness</obj>
      <fn>DeepState_ForkAndRunTest</fn>
    </frame>
    <frame>
      <ip>0x41DF44</ip>
      <obj>/home/akhila/fuzzer_packages/fuzzedpackages/icRSF/inst/testfiles/splitpt/splitpt_DeepState_TestHarness</obj>
      <fn>DeepState_RunSavedTestCase</fn>
    </frame>
    <frame>
      <ip>0x4076B5</ip>
      <obj>/home/akhila/fuzzer_packages/fuzzedpackages/icRSF/inst/testfiles/splitpt/splitpt_DeepState_TestHarness</obj>
      <fn>main</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0xe</unique>
  <tid>1</tid>
  <kind>InvalidRead</kind>
  <what>Invalid read of size 8</what>
  <stack>
    <frame>
      <ip>0x4D379CA</ip>
      <obj>/home/akhila/fuzzer_packages/fuzzedpackages/icRSF/src/icRSF.so</obj>
      <fn>operator[]</fn>
      <dir>/home/akhila/R/x86_64-pc-linux-gnu-library/4.0/Rcpp/include/Rcpp/sugar/operators</dir>
      <file>times.h</file>
      <line>71</line>
    </frame>
    <frame>
      <ip>0x4D379CA</ip>
      <obj>/home/akhila/fuzzer_packages/fuzzedpackages/icRSF/src/icRSF.so</obj>
      <fn>operator[]</fn>
      <dir>/home/akhila/R/x86_64-pc-linux-gnu-library/4.0/Rcpp/include/Rcpp/sugar/operators</dir>
      <file>minus.h</file>
      <line>68</line>
    </frame>
    <frame>
      <ip>0x4D379CA</ip>
      <obj>/home/akhila/fuzzer_packages/fuzzedpackages/icRSF/src/icRSF.so</obj>
      <fn>get</fn>
      <dir>/home/akhila/R/x86_64-pc-linux-gnu-library/4.0/Rcpp/include/Rcpp/sugar/functions</dir>
      <file>sum.h</file>
      <line>65</line>
    </frame>
    <frame>
      <ip>0x4D379CA</ip>
      <obj>/home/akhila/fuzzer_packages/fuzzedpackages/icRSF/src/icRSF.so</obj>
      <fn>operator double</fn>
      <dir>/home/akhila/R/x86_64-pc-linux-gnu-library/4.0/Rcpp/include/Rcpp/sugar/functions</dir>
      <file>Lazy.h</file>
      <line>31</line>
    </frame>
    <frame>
      <ip>0x4D379CA</ip>
      <obj>/home/akhila/fuzzer_packages/fuzzedpackages/icRSF/src/icRSF.so</obj>
      <fn>scorefun0(Rcpp::Vector&lt;14, Rcpp::PreserveStorage&gt;, Rcpp::Vector&lt;14, Rcpp::PreserveStorage&gt;, Rcpp::Matrix&lt;14, Rcpp::PreserveStorage&gt;)</fn>
      <dir>/home/akhila/fuzzer_packages/fuzzedpackages/icRSF/src</dir>
      <file>loglikhood2.cpp</file>
      <line>284</line>
    </frame>
    <frame>
      <ip>0x4D39F6A</ip>
      <obj>/home/akhila/fuzzer_packages/fuzzedpackages/icRSF/src/icRSF.so</obj>
      <fn>splitpt(Rcpp::Matrix&lt;14, Rcpp::PreserveStorage&gt;, Rcpp::Vector&lt;14, Rcpp::PreserveStorage&gt;, Rcpp::Vector&lt;14, Rcpp::PreserveStorage&gt;)</fn>
      <dir>/home/akhila/fuzzer_packages/fuzzedpackages/icRSF/src</dir>
      <file>loglikhood2.cpp</file>
      <line>303</line>
    </frame>
    <frame>
      <ip>0x40A147</ip>
      <obj>/home/akhila/fuzzer_packages/fuzzedpackages/icRSF/inst/testfiles/splitpt/splitpt_DeepState_TestHarness</obj>
      <fn>DeepState_Test_icRSF_deepstate_test_splitpt_test()</fn>
      <dir>/home/akhila/fuzzer_packages/fuzzedpackages/icRSF/inst/testfiles/splitpt</dir>
      <file>splitpt_DeepState_TestHarness.cpp</file>
      <line>30</line>
    </frame>
    <frame>
      <ip>0x409BA8</ip>
      <obj>/home/akhila/fuzzer_packages/fuzzedpackages/icRSF/inst/testfiles/splitpt/splitpt_DeepState_TestHarness</obj>
      <fn>DeepState_Run_icRSF_deepstate_test_splitpt_test()</fn>
      <dir>/home/akhila/fuzzer_packages/fuzzedpackages/icRSF/inst/testfiles/splitpt</dir>
      <file>splitpt_DeepState_TestHarness.cpp</file>
      <line>13</line>
    </frame>
    <frame>
      <ip>0x41DBC8</ip>
      <obj>/home/akhila/fuzzer_packages/fuzzedpackages/icRSF/inst/testfiles/splitpt/splitpt_DeepState_TestHarness</obj>
      <fn>DeepState_RunTest.isra.0</fn>
    </frame>
    <frame>
      <ip>0x41DE69</ip>
      <obj>/home/akhila/fuzzer_packages/fuzzedpackages/icRSF/inst/testfiles/splitpt/splitpt_DeepState_TestHarness</obj>
      <fn>DeepState_ForkAndRunTest</fn>
    </frame>
    <frame>
      <ip>0x41DF44</ip>
      <obj>/home/akhila/fuzzer_packages/fuzzedpackages/icRSF/inst/testfiles/splitpt/splitpt_DeepState_TestHarness</obj>
      <fn>DeepState_RunSavedTestCase</fn>
    </frame>
    <frame>
      <ip>0x4076B5</ip>
      <obj>/home/akhila/fuzzer_packages/fuzzedpackages/icRSF/inst/testfiles/splitpt/splitpt_DeepState_TestHarness</obj>
      <fn>main</fn>
    </frame>
  </stack>
  <auxwhat>Address 0x95b42b8 is 0 bytes after a block of size 7,960 alloc'd</auxwhat>
  <stack>
    <frame>
      <ip>0x483B7F3</ip>
      <obj>/usr/lib/x86_64-linux-gnu/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>malloc</fn>
    </frame>
    <frame>
      <ip>0x49D42B3</ip>
      <obj>/usr/lib/R/lib/libR.so</obj>
    </frame>
    <frame>
      <ip>0x49D5EAB</ip>
      <obj>/usr/lib/R/lib/libR.so</obj>
      <fn>Rf_allocVector3</fn>
    </frame>
    <frame>
      <ip>0x4A67E61</ip>
      <obj>/usr/lib/R/lib/libR.so</obj>
    </frame>
    <frame>
      <ip>0x4A69F9F</ip>
      <obj>/usr/lib/R/lib/libR.so</obj>
    </frame>
    <frame>
      <ip>0x497A1D0</ip>
      <obj>/usr/lib/R/lib/libR.so</obj>
    </frame>
    <frame>
      <ip>0x4994DD7</ip>
      <obj>/usr/lib/R/lib/libR.so</obj>
      <fn>Rf_eval</fn>
    </frame>
    <frame>
      <ip>0x4996C9E</ip>
      <obj>/usr/lib/R/lib/libR.so</obj>
    </frame>
    <frame>
      <ip>0x4997B91</ip>
      <obj>/usr/lib/R/lib/libR.so</obj>
      <fn>Rf_applyClosure</fn>
    </frame>
    <frame>
      <ip>0x49DB393</ip>
      <obj>/usr/lib/R/lib/libR.so</obj>
    </frame>
    <frame>
      <ip>0x49DB766</ip>
      <obj>/usr/lib/R/lib/libR.so</obj>
    </frame>
    <frame>
      <ip>0x49DBB96</ip>
      <obj>/usr/lib/R/lib/libR.so</obj>
    </frame>
  </stack>
</error>


<status>
  <state>FINISHED</state>
  <time>00:00:00:09.220 </time>
</status>

<errorcounts>
  <pair>
    <count>30</count>
    <unique>0x0</unique>
  </pair>
  <pair>
    <count>243</count>
    <unique>0xe</unique>
  </pair>
</errorcounts>

<suppcounts>
</suppcounts>

</valgrindoutput>


<status>
  <state>FINISHED</state>
  <time>00:00:00:09.803 </time>
</status>

<errorcounts>
</errorcounts>

<suppcounts>
</suppcounts>

</valgrindoutput>

