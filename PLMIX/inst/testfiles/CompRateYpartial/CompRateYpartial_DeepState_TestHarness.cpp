// AUTOMATICALLY GENERATED BY RCPPDEEPSTATE PLEASE DO NOT EDIT BY HAND, INSTEAD EDIT
// CompRateYpartial_DeepState_TestHarness_generation.cpp and CompRateYpartial_DeepState_TestHarness_checks.cpp

#include <fstream>
#include <RInside.h>
#include <iostream>
#include <RcppDeepState.h>
#include <qs.h>
#include <DeepState.hpp>

NumericMatrix CompRateYpartial(NumericMatrix p, NumericMatrix pi_inv, NumericVector ref_order, NumericMatrix z, NumericVector n_rank);

TEST(PLMIX_deepstate_test,CompRateYpartial_test){
  RInside R;
  std::cout << "input starts" << std::endl;
  NumericMatrix p  = RcppDeepState_NumericMatrix();
  qs::c_qsave(p,"/home/akhila/fuzzer_packages/fuzzedpackages/PLMIX/inst/testfiles/CompRateYpartial/inputs/p.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "p values: "<< p << std::endl;
  NumericMatrix pi_inv  = RcppDeepState_NumericMatrix();
  qs::c_qsave(pi_inv,"/home/akhila/fuzzer_packages/fuzzedpackages/PLMIX/inst/testfiles/CompRateYpartial/inputs/pi_inv.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "pi_inv values: "<< pi_inv << std::endl;
  NumericVector ref_order  = RcppDeepState_NumericVector();
  qs::c_qsave(ref_order,"/home/akhila/fuzzer_packages/fuzzedpackages/PLMIX/inst/testfiles/CompRateYpartial/inputs/ref_order.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "ref_order values: "<< ref_order << std::endl;
  NumericMatrix z  = RcppDeepState_NumericMatrix();
  qs::c_qsave(z,"/home/akhila/fuzzer_packages/fuzzedpackages/PLMIX/inst/testfiles/CompRateYpartial/inputs/z.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "z values: "<< z << std::endl;
  NumericVector n_rank  = RcppDeepState_NumericVector();
  qs::c_qsave(n_rank,"/home/akhila/fuzzer_packages/fuzzedpackages/PLMIX/inst/testfiles/CompRateYpartial/inputs/n_rank.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "n_rank values: "<< n_rank << std::endl;
  std::cout << "input ends" << std::endl;
  try{
    CompRateYpartial(p,pi_inv,ref_order,z,n_rank);
  }
  catch(Rcpp::exception& e){
    std::cout<<"Exception Handled"<<std::endl;
  }
}
