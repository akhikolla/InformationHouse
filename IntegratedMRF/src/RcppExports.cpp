// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <Rcpp.h>

using namespace Rcpp;

// splitt
List splitt(NumericMatrix X, NumericMatrix Y, int m_feature, NumericVector Index, NumericMatrix Inv_Cov_Y, int Command, NumericVector ff);
RcppExport SEXP _IntegratedMRF_splitt(SEXP XSEXP, SEXP YSEXP, SEXP m_featureSEXP, SEXP IndexSEXP, SEXP Inv_Cov_YSEXP, SEXP CommandSEXP, SEXP ffSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericMatrix >::type X(XSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type Y(YSEXP);
    Rcpp::traits::input_parameter< int >::type m_feature(m_featureSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type Index(IndexSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type Inv_Cov_Y(Inv_Cov_YSEXP);
    Rcpp::traits::input_parameter< int >::type Command(CommandSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type ff(ffSEXP);
    rcpp_result_gen = Rcpp::wrap(splitt(X, Y, m_feature, Index, Inv_Cov_Y, Command, ff));
    return rcpp_result_gen;
END_RCPP
}
// Node_cost
double Node_cost(NumericMatrix y, NumericMatrix Inv_Cov_Y, int Command);
RcppExport SEXP _IntegratedMRF_Node_cost(SEXP ySEXP, SEXP Inv_Cov_YSEXP, SEXP CommandSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericMatrix >::type y(ySEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type Inv_Cov_Y(Inv_Cov_YSEXP);
    Rcpp::traits::input_parameter< int >::type Command(CommandSEXP);
    rcpp_result_gen = Rcpp::wrap(Node_cost(y, Inv_Cov_Y, Command));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_IntegratedMRF_splitt", (DL_FUNC) &_IntegratedMRF_splitt, 7},
    {"_IntegratedMRF_Node_cost", (DL_FUNC) &_IntegratedMRF_Node_cost, 3},
    {NULL, NULL, 0}
};

RcppExport void R_init_IntegratedMRF(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
