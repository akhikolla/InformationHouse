// AUTOMATICALLY GENERATED BY RCPPDEEPSTATE PLEASE DO NOT EDIT BY HAND, INSTEAD EDIT
// a_tilda_cpp_DeepState_TestHarness_generation.cpp and a_tilda_cpp_DeepState_TestHarness_checks.cpp

#include <fstream>
#include <RInside.h>
#include <iostream>
#include <RcppDeepState.h>
#include <qs.h>
#include <DeepState.hpp>

std::vector<double> a_tilda_cpp(int N, int m, int M, double alpha, double H);

TEST(rlfsm_deepstate_test,a_tilda_cpp_test){
  RInside R;
  std::cout << "input starts" << std::endl;
  IntegerVector N(1);
  N[0]  = RcppDeepState_int();
  qs::c_qsave(N,"/home/akhila/fuzzer_packages/fuzzedpackages/rlfsm/inst/testfiles/a_tilda_cpp/inputs/N.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "N values: "<< N << std::endl;
  IntegerVector m(1);
  m[0]  = RcppDeepState_int();
  qs::c_qsave(m,"/home/akhila/fuzzer_packages/fuzzedpackages/rlfsm/inst/testfiles/a_tilda_cpp/inputs/m.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "m values: "<< m << std::endl;
  IntegerVector M(1);
  M[0]  = RcppDeepState_int();
  qs::c_qsave(M,"/home/akhila/fuzzer_packages/fuzzedpackages/rlfsm/inst/testfiles/a_tilda_cpp/inputs/M.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "M values: "<< M << std::endl;
  NumericVector alpha(1);
  alpha[0]  = RcppDeepState_double();
  qs::c_qsave(alpha,"/home/akhila/fuzzer_packages/fuzzedpackages/rlfsm/inst/testfiles/a_tilda_cpp/inputs/alpha.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "alpha values: "<< alpha << std::endl;
  NumericVector H(1);
  H[0]  = RcppDeepState_double();
  qs::c_qsave(H,"/home/akhila/fuzzer_packages/fuzzedpackages/rlfsm/inst/testfiles/a_tilda_cpp/inputs/H.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "H values: "<< H << std::endl;
  std::cout << "input ends" << std::endl;
  try{
    a_tilda_cpp(N[0],m[0],M[0],alpha[0],H[0]);
  }
  catch(Rcpp::exception& e){
    std::cout<<"Exception Handled"<<std::endl;
  }
}
