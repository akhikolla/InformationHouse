// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <RcppEigen.h>
#include <Rcpp.h>

using namespace Rcpp;

// surva
double surva(NumericVector thetaTmp, double m, double m2, double t, NumericVector KnotI, NumericVector KnotM);
RcppExport SEXP _cenROC_surva(SEXP thetaTmpSEXP, SEXP mSEXP, SEXP m2SEXP, SEXP tSEXP, SEXP KnotISEXP, SEXP KnotMSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type thetaTmp(thetaTmpSEXP);
    Rcpp::traits::input_parameter< double >::type m(mSEXP);
    Rcpp::traits::input_parameter< double >::type m2(m2SEXP);
    Rcpp::traits::input_parameter< double >::type t(tSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type KnotI(KnotISEXP);
    Rcpp::traits::input_parameter< NumericVector >::type KnotM(KnotMSEXP);
    rcpp_result_gen = Rcpp::wrap(surva(thetaTmp, m, m2, t, KnotI, KnotM));
    return rcpp_result_gen;
END_RCPP
}
// sieve
NumericVector sieve(NumericVector Utmp, NumericVector Vtmp, NumericVector Markertmp, NumericVector Deltatmp, NumericVector KnotI, NumericVector KnotM, int ki);
RcppExport SEXP _cenROC_sieve(SEXP UtmpSEXP, SEXP VtmpSEXP, SEXP MarkertmpSEXP, SEXP DeltatmpSEXP, SEXP KnotISEXP, SEXP KnotMSEXP, SEXP kiSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type Utmp(UtmpSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type Vtmp(VtmpSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type Markertmp(MarkertmpSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type Deltatmp(DeltatmpSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type KnotI(KnotISEXP);
    Rcpp::traits::input_parameter< NumericVector >::type KnotM(KnotMSEXP);
    Rcpp::traits::input_parameter< int >::type ki(kiSEXP);
    rcpp_result_gen = Rcpp::wrap(sieve(Utmp, Vtmp, Markertmp, Deltatmp, KnotI, KnotM, ki));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_cenROC_surva", (DL_FUNC) &_cenROC_surva, 6},
    {"_cenROC_sieve", (DL_FUNC) &_cenROC_sieve, 7},
    {NULL, NULL, 0}
};

RcppExport void R_init_cenROC(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
