// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <Rcpp.h>

using namespace Rcpp;

// comp_surv_cpp
int comp_surv_cpp(double time1, double event1, double time0, double event0);
RcppExport SEXP _WinRatio_comp_surv_cpp(SEXP time1SEXP, SEXP event1SEXP, SEXP time0SEXP, SEXP event0SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< double >::type time1(time1SEXP);
    Rcpp::traits::input_parameter< double >::type event1(event1SEXP);
    Rcpp::traits::input_parameter< double >::type time0(time0SEXP);
    Rcpp::traits::input_parameter< double >::type event0(event0SEXP);
    rcpp_result_gen = Rcpp::wrap(comp_surv_cpp(time1, event1, time0, event0));
    return rcpp_result_gen;
END_RCPP
}
// mat_comp_surv_cpp
NumericMatrix mat_comp_surv_cpp(NumericVector time1, NumericVector event1, NumericVector time0, NumericVector event0);
RcppExport SEXP _WinRatio_mat_comp_surv_cpp(SEXP time1SEXP, SEXP event1SEXP, SEXP time0SEXP, SEXP event0SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type time1(time1SEXP);
    Rcpp::traits::input_parameter< NumericVector >::type event1(event1SEXP);
    Rcpp::traits::input_parameter< NumericVector >::type time0(time0SEXP);
    Rcpp::traits::input_parameter< NumericVector >::type event0(event0SEXP);
    rcpp_result_gen = Rcpp::wrap(mat_comp_surv_cpp(time1, event1, time0, event0));
    return rcpp_result_gen;
END_RCPP
}
// comp_cont_cpp
int comp_cont_cpp(double event1, double event0, std::string direction);
RcppExport SEXP _WinRatio_comp_cont_cpp(SEXP event1SEXP, SEXP event0SEXP, SEXP directionSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< double >::type event1(event1SEXP);
    Rcpp::traits::input_parameter< double >::type event0(event0SEXP);
    Rcpp::traits::input_parameter< std::string >::type direction(directionSEXP);
    rcpp_result_gen = Rcpp::wrap(comp_cont_cpp(event1, event0, direction));
    return rcpp_result_gen;
END_RCPP
}
// mat_comp_cont_cpp
NumericMatrix mat_comp_cont_cpp(NumericVector event1, NumericVector event0, std::string direction);
RcppExport SEXP _WinRatio_mat_comp_cont_cpp(SEXP event1SEXP, SEXP event0SEXP, SEXP directionSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type event1(event1SEXP);
    Rcpp::traits::input_parameter< NumericVector >::type event0(event0SEXP);
    Rcpp::traits::input_parameter< std::string >::type direction(directionSEXP);
    rcpp_result_gen = Rcpp::wrap(mat_comp_cont_cpp(event1, event0, direction));
    return rcpp_result_gen;
END_RCPP
}
// sign_cpp
int sign_cpp(int x);
RcppExport SEXP _WinRatio_sign_cpp(SEXP xSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< int >::type x(xSEXP);
    rcpp_result_gen = Rcpp::wrap(sign_cpp(x));
    return rcpp_result_gen;
END_RCPP
}
// comp_repeated_cpp
int comp_repeated_cpp(NumericVector time1, NumericVector event1, double fu1, NumericVector time0, NumericVector event0, double fu0);
RcppExport SEXP _WinRatio_comp_repeated_cpp(SEXP time1SEXP, SEXP event1SEXP, SEXP fu1SEXP, SEXP time0SEXP, SEXP event0SEXP, SEXP fu0SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type time1(time1SEXP);
    Rcpp::traits::input_parameter< NumericVector >::type event1(event1SEXP);
    Rcpp::traits::input_parameter< double >::type fu1(fu1SEXP);
    Rcpp::traits::input_parameter< NumericVector >::type time0(time0SEXP);
    Rcpp::traits::input_parameter< NumericVector >::type event0(event0SEXP);
    Rcpp::traits::input_parameter< double >::type fu0(fu0SEXP);
    rcpp_result_gen = Rcpp::wrap(comp_repeated_cpp(time1, event1, fu1, time0, event0, fu0));
    return rcpp_result_gen;
END_RCPP
}
// mat_comp_repeated_cpp
NumericMatrix mat_comp_repeated_cpp(NumericMatrix time1, NumericMatrix event1, NumericVector fu1, NumericMatrix time0, NumericMatrix event0, NumericVector fu0);
RcppExport SEXP _WinRatio_mat_comp_repeated_cpp(SEXP time1SEXP, SEXP event1SEXP, SEXP fu1SEXP, SEXP time0SEXP, SEXP event0SEXP, SEXP fu0SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericMatrix >::type time1(time1SEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type event1(event1SEXP);
    Rcpp::traits::input_parameter< NumericVector >::type fu1(fu1SEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type time0(time0SEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type event0(event0SEXP);
    Rcpp::traits::input_parameter< NumericVector >::type fu0(fu0SEXP);
    rcpp_result_gen = Rcpp::wrap(mat_comp_repeated_cpp(time1, event1, fu1, time0, event0, fu0));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_WinRatio_comp_surv_cpp", (DL_FUNC) &_WinRatio_comp_surv_cpp, 4},
    {"_WinRatio_mat_comp_surv_cpp", (DL_FUNC) &_WinRatio_mat_comp_surv_cpp, 4},
    {"_WinRatio_comp_cont_cpp", (DL_FUNC) &_WinRatio_comp_cont_cpp, 3},
    {"_WinRatio_mat_comp_cont_cpp", (DL_FUNC) &_WinRatio_mat_comp_cont_cpp, 3},
    {"_WinRatio_sign_cpp", (DL_FUNC) &_WinRatio_sign_cpp, 1},
    {"_WinRatio_comp_repeated_cpp", (DL_FUNC) &_WinRatio_comp_repeated_cpp, 6},
    {"_WinRatio_mat_comp_repeated_cpp", (DL_FUNC) &_WinRatio_mat_comp_repeated_cpp, 6},
    {NULL, NULL, 0}
};

RcppExport void R_init_WinRatio(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
