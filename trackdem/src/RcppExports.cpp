// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <RcppArmadillo.h>
#include <Rcpp.h>

using namespace Rcpp;

// cb
NumericVector cb(NumericVector m1, NumericVector m2, NumericVector m3, IntegerVector d, IntegerVector e);
RcppExport SEXP _trackdem_cb(SEXP m1SEXP, SEXP m2SEXP, SEXP m3SEXP, SEXP dSEXP, SEXP eSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type m1(m1SEXP);
    Rcpp::traits::input_parameter< NumericVector >::type m2(m2SEXP);
    Rcpp::traits::input_parameter< NumericVector >::type m3(m3SEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type d(dSEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type e(eSEXP);
    rcpp_result_gen = Rcpp::wrap(cb(m1, m2, m3, d, e));
    return rcpp_result_gen;
END_RCPP
}
// cb1
NumericVector cb1(NumericVector m1, IntegerVector d, IntegerVector e);
RcppExport SEXP _trackdem_cb1(SEXP m1SEXP, SEXP dSEXP, SEXP eSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type m1(m1SEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type d(dSEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type e(eSEXP);
    rcpp_result_gen = Rcpp::wrap(cb1(m1, d, e));
    return rcpp_result_gen;
END_RCPP
}
// getCoords
NumericVector getCoords(NumericVector m, IntegerVector d);
RcppExport SEXP _trackdem_getCoords(SEXP mSEXP, SEXP dSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type m(mSEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type d(dSEXP);
    rcpp_result_gen = Rcpp::wrap(getCoords(m, d));
    return rcpp_result_gen;
END_RCPP
}
// muP
NumericVector muP(NumericVector m, NumericVector id, NumericVector cm1, NumericVector cm2, NumericVector cm3, IntegerVector d);
RcppExport SEXP _trackdem_muP(SEXP mSEXP, SEXP idSEXP, SEXP cm1SEXP, SEXP cm2SEXP, SEXP cm3SEXP, SEXP dSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type m(mSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type id(idSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type cm1(cm1SEXP);
    Rcpp::traits::input_parameter< NumericVector >::type cm2(cm2SEXP);
    Rcpp::traits::input_parameter< NumericVector >::type cm3(cm3SEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type d(dSEXP);
    rcpp_result_gen = Rcpp::wrap(muP(m, id, cm1, cm2, cm3, d));
    return rcpp_result_gen;
END_RCPP
}
// muP1
NumericVector muP1(NumericVector m, NumericVector id, NumericVector cm1, IntegerVector d);
RcppExport SEXP _trackdem_muP1(SEXP mSEXP, SEXP idSEXP, SEXP cm1SEXP, SEXP dSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type m(mSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type id(idSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type cm1(cm1SEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type d(dSEXP);
    rcpp_result_gen = Rcpp::wrap(muP1(m, id, cm1, d));
    return rcpp_result_gen;
END_RCPP
}
// sb
NumericVector sb(NumericVector m1, NumericVector bg, IntegerVector d, IntegerVector e);
RcppExport SEXP _trackdem_sb(SEXP m1SEXP, SEXP bgSEXP, SEXP dSEXP, SEXP eSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type m1(m1SEXP);
    Rcpp::traits::input_parameter< NumericVector >::type bg(bgSEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type d(dSEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type e(eSEXP);
    rcpp_result_gen = Rcpp::wrap(sb(m1, bg, d, e));
    return rcpp_result_gen;
END_RCPP
}
// sb2
NumericVector sb2(NumericVector m1, NumericVector bg, IntegerVector d, IntegerVector e);
RcppExport SEXP _trackdem_sb2(SEXP m1SEXP, SEXP bgSEXP, SEXP dSEXP, SEXP eSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type m1(m1SEXP);
    Rcpp::traits::input_parameter< NumericVector >::type bg(bgSEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type d(dSEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type e(eSEXP);
    rcpp_result_gen = Rcpp::wrap(sb2(m1, bg, d, e));
    return rcpp_result_gen;
END_RCPP
}
// sdP
NumericVector sdP(NumericVector m, NumericVector id, NumericVector cm1, NumericVector cm2, NumericVector cm3, IntegerVector d);
RcppExport SEXP _trackdem_sdP(SEXP mSEXP, SEXP idSEXP, SEXP cm1SEXP, SEXP cm2SEXP, SEXP cm3SEXP, SEXP dSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type m(mSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type id(idSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type cm1(cm1SEXP);
    Rcpp::traits::input_parameter< NumericVector >::type cm2(cm2SEXP);
    Rcpp::traits::input_parameter< NumericVector >::type cm3(cm3SEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type d(dSEXP);
    rcpp_result_gen = Rcpp::wrap(sdP(m, id, cm1, cm2, cm3, d));
    return rcpp_result_gen;
END_RCPP
}
// sdP1
NumericVector sdP1(NumericVector m, NumericVector id, NumericVector cm1, IntegerVector d);
RcppExport SEXP _trackdem_sdP1(SEXP mSEXP, SEXP idSEXP, SEXP cm1SEXP, SEXP dSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type m(mSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type id(idSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type cm1(cm1SEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type d(dSEXP);
    rcpp_result_gen = Rcpp::wrap(sdP1(m, id, cm1, d));
    return rcpp_result_gen;
END_RCPP
}

RcppExport SEXP ccl(SEXP);
RcppExport SEXP projectedPS(SEXP, SEXP);

static const R_CallMethodDef CallEntries[] = {
    {"_trackdem_cb", (DL_FUNC) &_trackdem_cb, 5},
    {"_trackdem_cb1", (DL_FUNC) &_trackdem_cb1, 3},
    {"_trackdem_getCoords", (DL_FUNC) &_trackdem_getCoords, 2},
    {"_trackdem_muP", (DL_FUNC) &_trackdem_muP, 6},
    {"_trackdem_muP1", (DL_FUNC) &_trackdem_muP1, 4},
    {"_trackdem_sb", (DL_FUNC) &_trackdem_sb, 4},
    {"_trackdem_sb2", (DL_FUNC) &_trackdem_sb2, 4},
    {"_trackdem_sdP", (DL_FUNC) &_trackdem_sdP, 6},
    {"_trackdem_sdP1", (DL_FUNC) &_trackdem_sdP1, 4},
    {"ccl",         (DL_FUNC) &ccl,         1},
    {"projectedPS", (DL_FUNC) &projectedPS, 2},
    {NULL, NULL, 0}
};

RcppExport void R_init_trackdem(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
