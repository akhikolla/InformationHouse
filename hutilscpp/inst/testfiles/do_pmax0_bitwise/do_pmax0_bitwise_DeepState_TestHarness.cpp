// AUTOMATICALLY GENERATED BY RCPPDEEPSTATE PLEASE DO NOT EDIT BY HAND, INSTEAD EDIT
// do_pmax0_bitwise_DeepState_TestHarness_generation.cpp and do_pmax0_bitwise_DeepState_TestHarness_checks.cpp

#include <fstream>
#include <RInside.h>
#include <iostream>
#include <RcppDeepState.h>
#include <qs.h>
#include <DeepState.hpp>

IntegerVector do_pmax0_bitwise(IntegerVector x, int nThread);

TEST(hutilscpp_deepstate_test,do_pmax0_bitwise_test){
  RInside R;
  std::cout << "input starts" << std::endl;
  IntegerVector x  = RcppDeepState_IntegerVector();
  qs::c_qsave(x,"/home/akhila/fuzzer_packages/fuzzedpackages/hutilscpp/inst/testfiles/do_pmax0_bitwise/inputs/x.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "x values: "<< x << std::endl;
  IntegerVector nThread(1);
  nThread[0]  = RcppDeepState_int();
  qs::c_qsave(nThread,"/home/akhila/fuzzer_packages/fuzzedpackages/hutilscpp/inst/testfiles/do_pmax0_bitwise/inputs/nThread.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "nThread values: "<< nThread << std::endl;
  std::cout << "input ends" << std::endl;
  try{
    do_pmax0_bitwise(x,nThread[0]);
  }
  catch(Rcpp::exception& e){
    std::cout<<"Exception Handled"<<std::endl;
  }
}
