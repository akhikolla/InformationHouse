// AUTOMATICALLY GENERATED BY RCPPDEEPSTATE PLEASE DO NOT EDIT BY HAND, INSTEAD EDIT
// normalise1d_DeepState_TestHarness_generation.cpp and normalise1d_DeepState_TestHarness_checks.cpp

#include <fstream>
#include <RInside.h>
#include <iostream>
#include <RcppDeepState.h>
#include <qs.h>
#include <DeepState.hpp>

std::vector<double> normalise1d(NumericVector vec, const int pnorm);

TEST(superml_deepstate_test,normalise1d_test){
  RInside R;
  std::cout << "input starts" << std::endl;
  NumericVector vec  = RcppDeepState_NumericVector();
  qs::c_qsave(vec,"/home/akhila/fuzzer_packages/fuzzedpackages/superml/inst/testfiles/normalise1d/inputs/vec.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "vec values: "<< vec << std::endl;
  IntegerVector pnorm(1);
  pnorm[0]  = RcppDeepState_int();
  qs::c_qsave(pnorm,"/home/akhila/fuzzer_packages/fuzzedpackages/superml/inst/testfiles/normalise1d/inputs/pnorm.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "pnorm values: "<< pnorm << std::endl;
  std::cout << "input ends" << std::endl;
  try{
    normalise1d(vec,pnorm[0]);
  }
  catch(Rcpp::exception& e){
    std::cout<<"Exception Handled"<<std::endl;
  }
}
