// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <Rcpp.h>

using namespace Rcpp;

// kBCT
List kBCT(CharacterVector input_data, IntegerVector depth, IntegerVector k, Nullable<NumericVector> beta);
RcppExport SEXP _BCT_kBCT(SEXP input_dataSEXP, SEXP depthSEXP, SEXP kSEXP, SEXP betaSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< CharacterVector >::type input_data(input_dataSEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type depth(depthSEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type k(kSEXP);
    Rcpp::traits::input_parameter< Nullable<NumericVector> >::type beta(betaSEXP);
    rcpp_result_gen = Rcpp::wrap(kBCT(input_data, depth, k, beta));
    return rcpp_result_gen;
END_RCPP
}
// log_loss
NumericVector log_loss(CharacterVector input_data, IntegerVector depth, IntegerVector train_size, Nullable<NumericVector> beta);
RcppExport SEXP _BCT_log_loss(SEXP input_dataSEXP, SEXP depthSEXP, SEXP train_sizeSEXP, SEXP betaSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< CharacterVector >::type input_data(input_dataSEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type depth(depthSEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type train_size(train_sizeSEXP);
    Rcpp::traits::input_parameter< Nullable<NumericVector> >::type beta(betaSEXP);
    rcpp_result_gen = Rcpp::wrap(log_loss(input_data, depth, train_size, beta));
    return rcpp_result_gen;
END_RCPP
}
// BCT
List BCT(CharacterVector input_data, IntegerVector depth, Nullable<NumericVector> beta);
RcppExport SEXP _BCT_BCT(SEXP input_dataSEXP, SEXP depthSEXP, SEXP betaSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< CharacterVector >::type input_data(input_dataSEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type depth(depthSEXP);
    Rcpp::traits::input_parameter< Nullable<NumericVector> >::type beta(betaSEXP);
    rcpp_result_gen = Rcpp::wrap(BCT(input_data, depth, beta));
    return rcpp_result_gen;
END_RCPP
}
// zero_one_loss
NumericVector zero_one_loss(CharacterVector input_data, IntegerVector depth, IntegerVector train_size, Nullable<NumericVector> beta);
RcppExport SEXP _BCT_zero_one_loss(SEXP input_dataSEXP, SEXP depthSEXP, SEXP train_sizeSEXP, SEXP betaSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< CharacterVector >::type input_data(input_dataSEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type depth(depthSEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type train_size(train_sizeSEXP);
    Rcpp::traits::input_parameter< Nullable<NumericVector> >::type beta(betaSEXP);
    rcpp_result_gen = Rcpp::wrap(zero_one_loss(input_data, depth, train_size, beta));
    return rcpp_result_gen;
END_RCPP
}
// prediction
Rcpp::List prediction(CharacterVector input_data, IntegerVector depth, IntegerVector train_size, Nullable<NumericVector> beta);
RcppExport SEXP _BCT_prediction(SEXP input_dataSEXP, SEXP depthSEXP, SEXP train_sizeSEXP, SEXP betaSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< CharacterVector >::type input_data(input_dataSEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type depth(depthSEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type train_size(train_sizeSEXP);
    Rcpp::traits::input_parameter< Nullable<NumericVector> >::type beta(betaSEXP);
    rcpp_result_gen = Rcpp::wrap(prediction(input_data, depth, train_size, beta));
    return rcpp_result_gen;
END_RCPP
}
// ML
long double ML(CharacterVector input_data, IntegerVector depth);
RcppExport SEXP _BCT_ML(SEXP input_dataSEXP, SEXP depthSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< CharacterVector >::type input_data(input_dataSEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type depth(depthSEXP);
    rcpp_result_gen = Rcpp::wrap(ML(input_data, depth));
    return rcpp_result_gen;
END_RCPP
}
// compute_counts
List compute_counts(CharacterVector input_data, IntegerVector depth);
RcppExport SEXP _BCT_compute_counts(SEXP input_dataSEXP, SEXP depthSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< CharacterVector >::type input_data(input_dataSEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type depth(depthSEXP);
    rcpp_result_gen = Rcpp::wrap(compute_counts(input_data, depth));
    return rcpp_result_gen;
END_RCPP
}
// CTW
long double CTW(CharacterVector input_data, IntegerVector depth, Nullable<NumericVector> beta);
RcppExport SEXP _BCT_CTW(SEXP input_dataSEXP, SEXP depthSEXP, SEXP betaSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< CharacterVector >::type input_data(input_dataSEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type depth(depthSEXP);
    Rcpp::traits::input_parameter< Nullable<NumericVector> >::type beta(betaSEXP);
    rcpp_result_gen = Rcpp::wrap(CTW(input_data, depth, beta));
    return rcpp_result_gen;
END_RCPP
}
// MAP_parameters
List MAP_parameters(CharacterVector input_data, IntegerVector depth, Nullable<NumericVector> beta);
RcppExport SEXP _BCT_MAP_parameters(SEXP input_dataSEXP, SEXP depthSEXP, SEXP betaSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< CharacterVector >::type input_data(input_dataSEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type depth(depthSEXP);
    Rcpp::traits::input_parameter< Nullable<NumericVector> >::type beta(betaSEXP);
    rcpp_result_gen = Rcpp::wrap(MAP_parameters(input_data, depth, beta));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_BCT_kBCT", (DL_FUNC) &_BCT_kBCT, 4},
    {"_BCT_log_loss", (DL_FUNC) &_BCT_log_loss, 4},
    {"_BCT_BCT", (DL_FUNC) &_BCT_BCT, 3},
    {"_BCT_zero_one_loss", (DL_FUNC) &_BCT_zero_one_loss, 4},
    {"_BCT_prediction", (DL_FUNC) &_BCT_prediction, 4},
    {"_BCT_ML", (DL_FUNC) &_BCT_ML, 2},
    {"_BCT_compute_counts", (DL_FUNC) &_BCT_compute_counts, 2},
    {"_BCT_CTW", (DL_FUNC) &_BCT_CTW, 3},
    {"_BCT_MAP_parameters", (DL_FUNC) &_BCT_MAP_parameters, 3},
    {NULL, NULL, 0}
};

RcppExport void R_init_BCT(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
