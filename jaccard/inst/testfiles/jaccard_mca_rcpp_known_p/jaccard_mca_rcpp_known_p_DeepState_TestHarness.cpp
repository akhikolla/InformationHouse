// AUTOMATICALLY GENERATED BY RCPPDEEPSTATE PLEASE DO NOT EDIT BY HAND, INSTEAD EDIT
// jaccard_mca_rcpp_known_p_DeepState_TestHarness_generation.cpp and jaccard_mca_rcpp_known_p_DeepState_TestHarness_checks.cpp

#include <fstream>
#include <RInside.h>
#include <iostream>
#include <RcppDeepState.h>
#include <qs.h>
#include <DeepState.hpp>

Rcpp::List jaccard_mca_rcpp_known_p(const double px, const double py, const int m, const double T_observed, const double accuracy);

TEST(jaccard_deepstate_test,jaccard_mca_rcpp_known_p_test){
  RInside R;
  std::cout << "input starts" << std::endl;
  NumericVector px(1);
  px[0]  = RcppDeepState_double();
  qs::c_qsave(px,"/home/akhila/fuzzer_packages/fuzzedpackages/jaccard/inst/testfiles/jaccard_mca_rcpp_known_p/inputs/px.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "px values: "<< px << std::endl;
  NumericVector py(1);
  py[0]  = RcppDeepState_double();
  qs::c_qsave(py,"/home/akhila/fuzzer_packages/fuzzedpackages/jaccard/inst/testfiles/jaccard_mca_rcpp_known_p/inputs/py.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "py values: "<< py << std::endl;
  IntegerVector m(1);
  m[0]  = RcppDeepState_int();
  qs::c_qsave(m,"/home/akhila/fuzzer_packages/fuzzedpackages/jaccard/inst/testfiles/jaccard_mca_rcpp_known_p/inputs/m.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "m values: "<< m << std::endl;
  NumericVector T_observed(1);
  T_observed[0]  = RcppDeepState_double();
  qs::c_qsave(T_observed,"/home/akhila/fuzzer_packages/fuzzedpackages/jaccard/inst/testfiles/jaccard_mca_rcpp_known_p/inputs/T_observed.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "T_observed values: "<< T_observed << std::endl;
  NumericVector accuracy(1);
  accuracy[0]  = RcppDeepState_double();
  qs::c_qsave(accuracy,"/home/akhila/fuzzer_packages/fuzzedpackages/jaccard/inst/testfiles/jaccard_mca_rcpp_known_p/inputs/accuracy.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "accuracy values: "<< accuracy << std::endl;
  std::cout << "input ends" << std::endl;
  try{
    jaccard_mca_rcpp_known_p(px[0],py[0],m[0],T_observed[0],accuracy[0]);
  }
  catch(Rcpp::exception& e){
    std::cout<<"Exception Handled"<<std::endl;
  }
}
