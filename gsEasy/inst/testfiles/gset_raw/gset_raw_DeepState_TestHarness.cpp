// AUTOMATICALLY GENERATED BY RCPPDEEPSTATE PLEASE DO NOT EDIT BY HAND, INSTEAD EDIT
// gset_raw_DeepState_TestHarness_generation.cpp and gset_raw_DeepState_TestHarness_checks.cpp

#include <fstream>
#include <RInside.h>
#include <iostream>
#include <RcppDeepState.h>
#include <qs.h>
#include <DeepState.hpp>

double gset_raw(int N, IntegerVector S, NumericVector r, int min_its, int max_its, double signif, double log_dismiss);

TEST(gsEasy_deepstate_test,gset_raw_test){
  RInside R;
  std::cout << "input starts" << std::endl;
  IntegerVector N(1);
  N[0]  = RcppDeepState_int();
  qs::c_qsave(N,"/home/akhila/fuzzer_packages/fuzzedpackages/gsEasy/inst/testfiles/gset_raw/inputs/N.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "N values: "<< N << std::endl;
  IntegerVector S  = RcppDeepState_IntegerVector();
  qs::c_qsave(S,"/home/akhila/fuzzer_packages/fuzzedpackages/gsEasy/inst/testfiles/gset_raw/inputs/S.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "S values: "<< S << std::endl;
  NumericVector r  = RcppDeepState_NumericVector();
  qs::c_qsave(r,"/home/akhila/fuzzer_packages/fuzzedpackages/gsEasy/inst/testfiles/gset_raw/inputs/r.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "r values: "<< r << std::endl;
  IntegerVector min_its(1);
  min_its[0]  = RcppDeepState_int();
  qs::c_qsave(min_its,"/home/akhila/fuzzer_packages/fuzzedpackages/gsEasy/inst/testfiles/gset_raw/inputs/min_its.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "min_its values: "<< min_its << std::endl;
  IntegerVector max_its(1);
  max_its[0]  = RcppDeepState_int();
  qs::c_qsave(max_its,"/home/akhila/fuzzer_packages/fuzzedpackages/gsEasy/inst/testfiles/gset_raw/inputs/max_its.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "max_its values: "<< max_its << std::endl;
  NumericVector signif(1);
  signif[0]  = RcppDeepState_double();
  qs::c_qsave(signif,"/home/akhila/fuzzer_packages/fuzzedpackages/gsEasy/inst/testfiles/gset_raw/inputs/signif.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "signif values: "<< signif << std::endl;
  NumericVector log_dismiss(1);
  log_dismiss[0]  = RcppDeepState_double();
  qs::c_qsave(log_dismiss,"/home/akhila/fuzzer_packages/fuzzedpackages/gsEasy/inst/testfiles/gset_raw/inputs/log_dismiss.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "log_dismiss values: "<< log_dismiss << std::endl;
  std::cout << "input ends" << std::endl;
  try{
    gset_raw(N[0],S,r,min_its[0],max_its[0],signif[0],log_dismiss[0]);
  }
  catch(Rcpp::exception& e){
    std::cout<<"Exception Handled"<<std::endl;
  }
}
