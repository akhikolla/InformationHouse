// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <RcppArmadillo.h>
#include <Rcpp.h>

using namespace Rcpp;

// C_GP_cpp
NumericMatrix C_GP_cpp(NumericMatrix design, NumericVector response, NumericVector theta, NumericMatrix Ki, int ct);
RcppExport SEXP _activegp_C_GP_cpp(SEXP designSEXP, SEXP responseSEXP, SEXP thetaSEXP, SEXP KiSEXP, SEXP ctSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericMatrix >::type design(designSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type response(responseSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type theta(thetaSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type Ki(KiSEXP);
    Rcpp::traits::input_parameter< int >::type ct(ctSEXP);
    rcpp_result_gen = Rcpp::wrap(C_GP_cpp(design, response, theta, Ki, ct));
    return rcpp_result_gen;
END_RCPP
}
// d_gauss_cpp
NumericVector d_gauss_cpp(NumericVector X, double x, double sigma);
RcppExport SEXP _activegp_d_gauss_cpp(SEXP XSEXP, SEXP xSEXP, SEXP sigmaSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type X(XSEXP);
    Rcpp::traits::input_parameter< double >::type x(xSEXP);
    Rcpp::traits::input_parameter< double >::type sigma(sigmaSEXP);
    rcpp_result_gen = Rcpp::wrap(d_gauss_cpp(X, x, sigma));
    return rcpp_result_gen;
END_RCPP
}
// d_mat52_cpp
NumericVector d_mat52_cpp(NumericVector X, double x, double sigma);
RcppExport SEXP _activegp_d_mat52_cpp(SEXP XSEXP, SEXP xSEXP, SEXP sigmaSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type X(XSEXP);
    Rcpp::traits::input_parameter< double >::type x(xSEXP);
    Rcpp::traits::input_parameter< double >::type sigma(sigmaSEXP);
    rcpp_result_gen = Rcpp::wrap(d_mat52_cpp(X, x, sigma));
    return rcpp_result_gen;
END_RCPP
}
// d_mat32_cpp
NumericVector d_mat32_cpp(NumericVector X, double x, double sigma);
RcppExport SEXP _activegp_d_mat32_cpp(SEXP XSEXP, SEXP xSEXP, SEXP sigmaSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type X(XSEXP);
    Rcpp::traits::input_parameter< double >::type x(xSEXP);
    Rcpp::traits::input_parameter< double >::type sigma(sigmaSEXP);
    rcpp_result_gen = Rcpp::wrap(d_mat32_cpp(X, x, sigma));
    return rcpp_result_gen;
END_RCPP
}
// w_ii_cpp
double w_ii_cpp(double a, double b, double t, int ct);
RcppExport SEXP _activegp_w_ii_cpp(SEXP aSEXP, SEXP bSEXP, SEXP tSEXP, SEXP ctSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< double >::type a(aSEXP);
    Rcpp::traits::input_parameter< double >::type b(bSEXP);
    Rcpp::traits::input_parameter< double >::type t(tSEXP);
    Rcpp::traits::input_parameter< int >::type ct(ctSEXP);
    rcpp_result_gen = Rcpp::wrap(w_ii_cpp(a, b, t, ct));
    return rcpp_result_gen;
END_RCPP
}
// grad_w_ii_cppa
double grad_w_ii_cppa(double a, double b, double t, int ct);
RcppExport SEXP _activegp_grad_w_ii_cppa(SEXP aSEXP, SEXP bSEXP, SEXP tSEXP, SEXP ctSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< double >::type a(aSEXP);
    Rcpp::traits::input_parameter< double >::type b(bSEXP);
    Rcpp::traits::input_parameter< double >::type t(tSEXP);
    Rcpp::traits::input_parameter< int >::type ct(ctSEXP);
    rcpp_result_gen = Rcpp::wrap(grad_w_ii_cppa(a, b, t, ct));
    return rcpp_result_gen;
END_RCPP
}
// grad_w_ii_cppb
double grad_w_ii_cppb(double a, double b, double t, int ct);
RcppExport SEXP _activegp_grad_w_ii_cppb(SEXP aSEXP, SEXP bSEXP, SEXP tSEXP, SEXP ctSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< double >::type a(aSEXP);
    Rcpp::traits::input_parameter< double >::type b(bSEXP);
    Rcpp::traits::input_parameter< double >::type t(tSEXP);
    Rcpp::traits::input_parameter< int >::type ct(ctSEXP);
    rcpp_result_gen = Rcpp::wrap(grad_w_ii_cppb(a, b, t, ct));
    return rcpp_result_gen;
END_RCPP
}
// w_ij_cpp
double w_ij_cpp(double a, double b, double t, int ct);
RcppExport SEXP _activegp_w_ij_cpp(SEXP aSEXP, SEXP bSEXP, SEXP tSEXP, SEXP ctSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< double >::type a(aSEXP);
    Rcpp::traits::input_parameter< double >::type b(bSEXP);
    Rcpp::traits::input_parameter< double >::type t(tSEXP);
    Rcpp::traits::input_parameter< int >::type ct(ctSEXP);
    rcpp_result_gen = Rcpp::wrap(w_ij_cpp(a, b, t, ct));
    return rcpp_result_gen;
END_RCPP
}
// grad_w_ij_cppa
double grad_w_ij_cppa(double a, double b, double t, int ct);
RcppExport SEXP _activegp_grad_w_ij_cppa(SEXP aSEXP, SEXP bSEXP, SEXP tSEXP, SEXP ctSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< double >::type a(aSEXP);
    Rcpp::traits::input_parameter< double >::type b(bSEXP);
    Rcpp::traits::input_parameter< double >::type t(tSEXP);
    Rcpp::traits::input_parameter< int >::type ct(ctSEXP);
    rcpp_result_gen = Rcpp::wrap(grad_w_ij_cppa(a, b, t, ct));
    return rcpp_result_gen;
END_RCPP
}
// grad_w_ij_cppb
double grad_w_ij_cppb(double a, double b, double t, int ct);
RcppExport SEXP _activegp_grad_w_ij_cppb(SEXP aSEXP, SEXP bSEXP, SEXP tSEXP, SEXP ctSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< double >::type a(aSEXP);
    Rcpp::traits::input_parameter< double >::type b(bSEXP);
    Rcpp::traits::input_parameter< double >::type t(tSEXP);
    Rcpp::traits::input_parameter< int >::type ct(ctSEXP);
    rcpp_result_gen = Rcpp::wrap(grad_w_ij_cppb(a, b, t, ct));
    return rcpp_result_gen;
END_RCPP
}
// Ikk_cpp
double Ikk_cpp(double a, double b, double t, int ct);
RcppExport SEXP _activegp_Ikk_cpp(SEXP aSEXP, SEXP bSEXP, SEXP tSEXP, SEXP ctSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< double >::type a(aSEXP);
    Rcpp::traits::input_parameter< double >::type b(bSEXP);
    Rcpp::traits::input_parameter< double >::type t(tSEXP);
    Rcpp::traits::input_parameter< int >::type ct(ctSEXP);
    rcpp_result_gen = Rcpp::wrap(Ikk_cpp(a, b, t, ct));
    return rcpp_result_gen;
END_RCPP
}
// grad_Ikk_cppa
double grad_Ikk_cppa(double a, double b, double t, int ct);
RcppExport SEXP _activegp_grad_Ikk_cppa(SEXP aSEXP, SEXP bSEXP, SEXP tSEXP, SEXP ctSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< double >::type a(aSEXP);
    Rcpp::traits::input_parameter< double >::type b(bSEXP);
    Rcpp::traits::input_parameter< double >::type t(tSEXP);
    Rcpp::traits::input_parameter< int >::type ct(ctSEXP);
    rcpp_result_gen = Rcpp::wrap(grad_Ikk_cppa(a, b, t, ct));
    return rcpp_result_gen;
END_RCPP
}
// grad_Ikk_cppb
double grad_Ikk_cppb(double a, double b, double t, int ct);
RcppExport SEXP _activegp_grad_Ikk_cppb(SEXP aSEXP, SEXP bSEXP, SEXP tSEXP, SEXP ctSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< double >::type a(aSEXP);
    Rcpp::traits::input_parameter< double >::type b(bSEXP);
    Rcpp::traits::input_parameter< double >::type t(tSEXP);
    Rcpp::traits::input_parameter< int >::type ct(ctSEXP);
    rcpp_result_gen = Rcpp::wrap(grad_Ikk_cppb(a, b, t, ct));
    return rcpp_result_gen;
END_RCPP
}
// W_kappa_ij
NumericMatrix W_kappa_ij(NumericMatrix design, NumericVector theta, int i1, int i2, int ct);
RcppExport SEXP _activegp_W_kappa_ij(SEXP designSEXP, SEXP thetaSEXP, SEXP i1SEXP, SEXP i2SEXP, SEXP ctSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericMatrix >::type design(designSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type theta(thetaSEXP);
    Rcpp::traits::input_parameter< int >::type i1(i1SEXP);
    Rcpp::traits::input_parameter< int >::type i2(i2SEXP);
    Rcpp::traits::input_parameter< int >::type ct(ctSEXP);
    rcpp_result_gen = Rcpp::wrap(W_kappa_ij(design, theta, i1, i2, ct));
    return rcpp_result_gen;
END_RCPP
}
// W_kappa_ij2
NumericMatrix W_kappa_ij2(NumericMatrix design1, NumericMatrix design2, NumericVector theta, int i1, int i2, int ct);
RcppExport SEXP _activegp_W_kappa_ij2(SEXP design1SEXP, SEXP design2SEXP, SEXP thetaSEXP, SEXP i1SEXP, SEXP i2SEXP, SEXP ctSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericMatrix >::type design1(design1SEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type design2(design2SEXP);
    Rcpp::traits::input_parameter< NumericVector >::type theta(thetaSEXP);
    Rcpp::traits::input_parameter< int >::type i1(i1SEXP);
    Rcpp::traits::input_parameter< int >::type i2(i2SEXP);
    Rcpp::traits::input_parameter< int >::type ct(ctSEXP);
    rcpp_result_gen = Rcpp::wrap(W_kappa_ij2(design1, design2, theta, i1, i2, ct));
    return rcpp_result_gen;
END_RCPP
}
// grad_W_kappa_ij2
NumericMatrix grad_W_kappa_ij2(NumericVector design1, NumericMatrix design2, NumericVector theta, int i1, int i2, int ct);
RcppExport SEXP _activegp_grad_W_kappa_ij2(SEXP design1SEXP, SEXP design2SEXP, SEXP thetaSEXP, SEXP i1SEXP, SEXP i2SEXP, SEXP ctSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type design1(design1SEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type design2(design2SEXP);
    Rcpp::traits::input_parameter< NumericVector >::type theta(thetaSEXP);
    Rcpp::traits::input_parameter< int >::type i1(i1SEXP);
    Rcpp::traits::input_parameter< int >::type i2(i2SEXP);
    Rcpp::traits::input_parameter< int >::type ct(ctSEXP);
    rcpp_result_gen = Rcpp::wrap(grad_W_kappa_ij2(design1, design2, theta, i1, i2, ct));
    return rcpp_result_gen;
END_RCPP
}
// grad_W_kappa_ij2_w2
NumericMatrix grad_W_kappa_ij2_w2(NumericVector design1, NumericMatrix design2, NumericVector theta, int i1, int i2, int ct);
RcppExport SEXP _activegp_grad_W_kappa_ij2_w2(SEXP design1SEXP, SEXP design2SEXP, SEXP thetaSEXP, SEXP i1SEXP, SEXP i2SEXP, SEXP ctSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type design1(design1SEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type design2(design2SEXP);
    Rcpp::traits::input_parameter< NumericVector >::type theta(thetaSEXP);
    Rcpp::traits::input_parameter< int >::type i1(i1SEXP);
    Rcpp::traits::input_parameter< int >::type i2(i2SEXP);
    Rcpp::traits::input_parameter< int >::type ct(ctSEXP);
    rcpp_result_gen = Rcpp::wrap(grad_W_kappa_ij2_w2(design1, design2, theta, i1, i2, ct));
    return rcpp_result_gen;
END_RCPP
}
// W_kappa_ij_up
void W_kappa_ij_up(NumericMatrix W, NumericMatrix design, NumericVector theta, int i1, int i2, int start, int ct);
RcppExport SEXP _activegp_W_kappa_ij_up(SEXP WSEXP, SEXP designSEXP, SEXP thetaSEXP, SEXP i1SEXP, SEXP i2SEXP, SEXP startSEXP, SEXP ctSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericMatrix >::type W(WSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type design(designSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type theta(thetaSEXP);
    Rcpp::traits::input_parameter< int >::type i1(i1SEXP);
    Rcpp::traits::input_parameter< int >::type i2(i2SEXP);
    Rcpp::traits::input_parameter< int >::type start(startSEXP);
    Rcpp::traits::input_parameter< int >::type ct(ctSEXP);
    W_kappa_ij_up(W, design, theta, i1, i2, start, ct);
    return R_NilValue;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_activegp_C_GP_cpp", (DL_FUNC) &_activegp_C_GP_cpp, 5},
    {"_activegp_d_gauss_cpp", (DL_FUNC) &_activegp_d_gauss_cpp, 3},
    {"_activegp_d_mat52_cpp", (DL_FUNC) &_activegp_d_mat52_cpp, 3},
    {"_activegp_d_mat32_cpp", (DL_FUNC) &_activegp_d_mat32_cpp, 3},
    {"_activegp_w_ii_cpp", (DL_FUNC) &_activegp_w_ii_cpp, 4},
    {"_activegp_grad_w_ii_cppa", (DL_FUNC) &_activegp_grad_w_ii_cppa, 4},
    {"_activegp_grad_w_ii_cppb", (DL_FUNC) &_activegp_grad_w_ii_cppb, 4},
    {"_activegp_w_ij_cpp", (DL_FUNC) &_activegp_w_ij_cpp, 4},
    {"_activegp_grad_w_ij_cppa", (DL_FUNC) &_activegp_grad_w_ij_cppa, 4},
    {"_activegp_grad_w_ij_cppb", (DL_FUNC) &_activegp_grad_w_ij_cppb, 4},
    {"_activegp_Ikk_cpp", (DL_FUNC) &_activegp_Ikk_cpp, 4},
    {"_activegp_grad_Ikk_cppa", (DL_FUNC) &_activegp_grad_Ikk_cppa, 4},
    {"_activegp_grad_Ikk_cppb", (DL_FUNC) &_activegp_grad_Ikk_cppb, 4},
    {"_activegp_W_kappa_ij", (DL_FUNC) &_activegp_W_kappa_ij, 5},
    {"_activegp_W_kappa_ij2", (DL_FUNC) &_activegp_W_kappa_ij2, 6},
    {"_activegp_grad_W_kappa_ij2", (DL_FUNC) &_activegp_grad_W_kappa_ij2, 6},
    {"_activegp_grad_W_kappa_ij2_w2", (DL_FUNC) &_activegp_grad_W_kappa_ij2_w2, 6},
    {"_activegp_W_kappa_ij_up", (DL_FUNC) &_activegp_W_kappa_ij_up, 7},
    {NULL, NULL, 0}
};

RcppExport void R_init_activegp(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
