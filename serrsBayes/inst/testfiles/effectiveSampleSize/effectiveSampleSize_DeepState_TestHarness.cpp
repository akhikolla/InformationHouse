// AUTOMATICALLY GENERATED BY RCPPDEEPSTATE PLEASE DO NOT EDIT BY HAND, INSTEAD EDIT
// effectiveSampleSize_DeepState_TestHarness_generation.cpp and effectiveSampleSize_DeepState_TestHarness_checks.cpp

#include <fstream>
#include <RInside.h>
#include <iostream>
#include <RcppDeepState.h>
#include <qs.h>
#include <DeepState.hpp>

double effectiveSampleSize(NumericVector log_weights);

TEST(serrsBayes_deepstate_test,effectiveSampleSize_test){
  RInside R;
  std::cout << "input starts" << std::endl;
  NumericVector log_weights  = RcppDeepState_NumericVector();
  qs::c_qsave(log_weights,"/home/akhila/fuzzer_packages/fuzzedpackages/serrsBayes/inst/testfiles/effectiveSampleSize/inputs/log_weights.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "log_weights values: "<< log_weights << std::endl;
  std::cout << "input ends" << std::endl;
  try{
    effectiveSampleSize(log_weights);
  }
  catch(Rcpp::exception& e){
    std::cout<<"Exception Handled"<<std::endl;
  }
}
