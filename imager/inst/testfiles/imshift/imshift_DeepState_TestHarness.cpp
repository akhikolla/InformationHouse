// AUTOMATICALLY GENERATED BY RCPPDEEPSTATE PLEASE DO NOT EDIT BY HAND, INSTEAD EDIT
// imshift_DeepState_TestHarness_generation.cpp and imshift_DeepState_TestHarness_checks.cpp

#include <fstream>
#include <RInside.h>
#include <iostream>
#include <RcppDeepState.h>
#include <qs.h>
#include <DeepState.hpp>

NumericVector imshift(NumericVector im, int delta_x, int delta_y, int delta_z, int delta_c, int boundary_conditions);

TEST(imager_deepstate_test,imshift_test){
  RInside R;
  std::cout << "input starts" << std::endl;
  NumericVector im  = RcppDeepState_NumericVector();
  qs::c_qsave(im,"/home/akhila/fuzzer_packages/fuzzedpackages/imager/inst/testfiles/imshift/inputs/im.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "im values: "<< im << std::endl;
  IntegerVector delta_x(1);
  delta_x[0]  = RcppDeepState_int();
  qs::c_qsave(delta_x,"/home/akhila/fuzzer_packages/fuzzedpackages/imager/inst/testfiles/imshift/inputs/delta_x.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "delta_x values: "<< delta_x << std::endl;
  IntegerVector delta_y(1);
  delta_y[0]  = RcppDeepState_int();
  qs::c_qsave(delta_y,"/home/akhila/fuzzer_packages/fuzzedpackages/imager/inst/testfiles/imshift/inputs/delta_y.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "delta_y values: "<< delta_y << std::endl;
  IntegerVector delta_z(1);
  delta_z[0]  = RcppDeepState_int();
  qs::c_qsave(delta_z,"/home/akhila/fuzzer_packages/fuzzedpackages/imager/inst/testfiles/imshift/inputs/delta_z.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "delta_z values: "<< delta_z << std::endl;
  IntegerVector delta_c(1);
  delta_c[0]  = RcppDeepState_int();
  qs::c_qsave(delta_c,"/home/akhila/fuzzer_packages/fuzzedpackages/imager/inst/testfiles/imshift/inputs/delta_c.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "delta_c values: "<< delta_c << std::endl;
  IntegerVector boundary_conditions(1);
  boundary_conditions[0]  = RcppDeepState_int();
  qs::c_qsave(boundary_conditions,"/home/akhila/fuzzer_packages/fuzzedpackages/imager/inst/testfiles/imshift/inputs/boundary_conditions.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "boundary_conditions values: "<< boundary_conditions << std::endl;
  std::cout << "input ends" << std::endl;
  try{
    imshift(im,delta_x[0],delta_y[0],delta_z[0],delta_c[0],boundary_conditions[0]);
  }
  catch(Rcpp::exception& e){
    std::cout<<"Exception Handled"<<std::endl;
  }
}
