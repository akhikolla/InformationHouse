// AUTOMATICALLY GENERATED BY RCPPDEEPSTATE PLEASE DO NOT EDIT BY HAND, INSTEAD EDIT
// erode_rect_DeepState_TestHarness_generation.cpp and erode_rect_DeepState_TestHarness_checks.cpp

#include <fstream>
#include <RInside.h>
#include <iostream>
#include <RcppDeepState.h>
#include <qs.h>
#include <DeepState.hpp>

NumericVector erode_rect(NumericVector im, int sx, int sy, int sz);

TEST(imager_deepstate_test,erode_rect_test){
  RInside R;
  std::cout << "input starts" << std::endl;
  NumericVector im  = RcppDeepState_NumericVector();
  qs::c_qsave(im,"/home/akhila/fuzzer_packages/fuzzedpackages/imager/inst/testfiles/erode_rect/inputs/im.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "im values: "<< im << std::endl;
  IntegerVector sx(1);
  sx[0]  = RcppDeepState_int();
  qs::c_qsave(sx,"/home/akhila/fuzzer_packages/fuzzedpackages/imager/inst/testfiles/erode_rect/inputs/sx.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "sx values: "<< sx << std::endl;
  IntegerVector sy(1);
  sy[0]  = RcppDeepState_int();
  qs::c_qsave(sy,"/home/akhila/fuzzer_packages/fuzzedpackages/imager/inst/testfiles/erode_rect/inputs/sy.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "sy values: "<< sy << std::endl;
  IntegerVector sz(1);
  sz[0]  = RcppDeepState_int();
  qs::c_qsave(sz,"/home/akhila/fuzzer_packages/fuzzedpackages/imager/inst/testfiles/erode_rect/inputs/sz.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "sz values: "<< sz << std::endl;
  std::cout << "input ends" << std::endl;
  try{
    erode_rect(im,sx[0],sy[0],sz[0]);
  }
  catch(Rcpp::exception& e){
    std::cout<<"Exception Handled"<<std::endl;
  }
}
