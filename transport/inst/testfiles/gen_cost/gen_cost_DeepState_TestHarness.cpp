// AUTOMATICALLY GENERATED BY RCPPDEEPSTATE PLEASE DO NOT EDIT BY HAND, INSTEAD EDIT
// gen_cost_DeepState_TestHarness_generation.cpp and gen_cost_DeepState_TestHarness_checks.cpp

#include <fstream>
#include <RInside.h>
#include <iostream>
#include <RcppDeepState.h>
#include <qs.h>
#include <DeepState.hpp>

NumericMatrix gen_cost(NumericMatrix AR, NumericMatrix BR, int threads);

TEST(transport_deepstate_test,gen_cost_test){
  RInside R;
  std::cout << "input starts" << std::endl;
  NumericMatrix AR  = RcppDeepState_NumericMatrix();
  qs::c_qsave(AR,"/home/akhila/fuzzer_packages/fuzzedpackages/transport/inst/testfiles/gen_cost/inputs/AR.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "AR values: "<< AR << std::endl;
  NumericMatrix BR  = RcppDeepState_NumericMatrix();
  qs::c_qsave(BR,"/home/akhila/fuzzer_packages/fuzzedpackages/transport/inst/testfiles/gen_cost/inputs/BR.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "BR values: "<< BR << std::endl;
  IntegerVector threads(1);
  threads[0]  = RcppDeepState_int();
  qs::c_qsave(threads,"/home/akhila/fuzzer_packages/fuzzedpackages/transport/inst/testfiles/gen_cost/inputs/threads.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "threads values: "<< threads << std::endl;
  std::cout << "input ends" << std::endl;
  try{
    gen_cost(AR,BR,threads[0]);
  }
  catch(Rcpp::exception& e){
    std::cout<<"Exception Handled"<<std::endl;
  }
}
