// AUTOMATICALLY GENERATED BY RCPPDEEPSTATE PLEASE DO NOT EDIT BY HAND, INSTEAD EDIT
// fssf_b_DeepState_TestHarness_generation.cpp and fssf_b_DeepState_TestHarness_checks.cpp

#include <fstream>
#include <RInside.h>
#include <iostream>
#include <RcppDeepState.h>
#include <qs.h>
#include <DeepState.hpp>

NumericMatrix fssf_b(int d, int nMax, int N, double eps);

TEST(FSSF_deepstate_test,fssf_b_test){
  RInside R;
  std::cout << "input starts" << std::endl;
  IntegerVector d(1);
  d[0]  = RcppDeepState_int();
  qs::c_qsave(d,"/home/akhila/fuzzer_packages/fuzzedpackages/FSSF/inst/testfiles/fssf_b/inputs/d.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "d values: "<< d << std::endl;
  IntegerVector nMax(1);
  nMax[0]  = RcppDeepState_int();
  qs::c_qsave(nMax,"/home/akhila/fuzzer_packages/fuzzedpackages/FSSF/inst/testfiles/fssf_b/inputs/nMax.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "nMax values: "<< nMax << std::endl;
  IntegerVector N(1);
  N[0]  = RcppDeepState_int();
  qs::c_qsave(N,"/home/akhila/fuzzer_packages/fuzzedpackages/FSSF/inst/testfiles/fssf_b/inputs/N.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "N values: "<< N << std::endl;
  NumericVector eps(1);
  eps[0]  = RcppDeepState_double();
  qs::c_qsave(eps,"/home/akhila/fuzzer_packages/fuzzedpackages/FSSF/inst/testfiles/fssf_b/inputs/eps.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "eps values: "<< eps << std::endl;
  std::cout << "input ends" << std::endl;
  try{
    fssf_b(d[0],nMax[0],N[0],eps[0]);
  }
  catch(Rcpp::exception& e){
    std::cout<<"Exception Handled"<<std::endl;
  }
}
