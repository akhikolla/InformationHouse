// AUTOMATICALLY GENERATED BY RCPPDEEPSTATE PLEASE DO NOT EDIT BY HAND, INSTEAD EDIT
// episode_checkCpp_DeepState_TestHarness_generation.cpp and episode_checkCpp_DeepState_TestHarness_checks.cpp

#include <fstream>
#include <RInside.h>
#include <iostream>
#include <RcppDeepState.h>
#include <qs.h>
#include <DeepState.hpp>

NumericVector episode_checkCpp(NumericVector x, int perm_gap, int init_rank);

TEST(adheRenceRX_deepstate_test,episode_checkCpp_test){
  RInside R;
  std::cout << "input starts" << std::endl;
  NumericVector x  = RcppDeepState_NumericVector();
  qs::c_qsave(x,"/home/akhila/fuzzer_packages/fuzzedpackages/adheRenceRX/inst/testfiles/episode_checkCpp/inputs/x.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "x values: "<< x << std::endl;
  IntegerVector perm_gap(1);
  perm_gap[0]  = RcppDeepState_int();
  qs::c_qsave(perm_gap,"/home/akhila/fuzzer_packages/fuzzedpackages/adheRenceRX/inst/testfiles/episode_checkCpp/inputs/perm_gap.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "perm_gap values: "<< perm_gap << std::endl;
  IntegerVector init_rank(1);
  init_rank[0]  = RcppDeepState_int();
  qs::c_qsave(init_rank,"/home/akhila/fuzzer_packages/fuzzedpackages/adheRenceRX/inst/testfiles/episode_checkCpp/inputs/init_rank.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "init_rank values: "<< init_rank << std::endl;
  std::cout << "input ends" << std::endl;
  try{
    episode_checkCpp(x,perm_gap[0],init_rank[0]);
  }
  catch(Rcpp::exception& e){
    std::cout<<"Exception Handled"<<std::endl;
  }
}
