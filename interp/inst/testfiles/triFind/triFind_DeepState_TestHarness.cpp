// AUTOMATICALLY GENERATED BY RCPPDEEPSTATE PLEASE DO NOT EDIT BY HAND, INSTEAD EDIT
// triFind_DeepState_TestHarness_generation.cpp and triFind_DeepState_TestHarness_checks.cpp

#include <fstream>
#include <RInside.h>
#include <iostream>
#include <RcppDeepState.h>
#include <qs.h>
#include <DeepState.hpp>

List triFind(int nT, NumericVector xT, NumericVector yT, IntegerVector i1, IntegerVector i2, IntegerVector i3, NumericVector x, NumericVector y);

TEST(interp_deepstate_test,triFind_test){
  RInside R;
  std::cout << "input starts" << std::endl;
  IntegerVector nT(1);
  nT[0]  = RcppDeepState_int();
  qs::c_qsave(nT,"/home/akhila/fuzzer_packages/fuzzedpackages/interp/inst/testfiles/triFind/inputs/nT.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "nT values: "<< nT << std::endl;
  NumericVector xT  = RcppDeepState_NumericVector();
  qs::c_qsave(xT,"/home/akhila/fuzzer_packages/fuzzedpackages/interp/inst/testfiles/triFind/inputs/xT.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "xT values: "<< xT << std::endl;
  NumericVector yT  = RcppDeepState_NumericVector();
  qs::c_qsave(yT,"/home/akhila/fuzzer_packages/fuzzedpackages/interp/inst/testfiles/triFind/inputs/yT.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "yT values: "<< yT << std::endl;
  IntegerVector i1  = RcppDeepState_IntegerVector();
  qs::c_qsave(i1,"/home/akhila/fuzzer_packages/fuzzedpackages/interp/inst/testfiles/triFind/inputs/i1.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "i1 values: "<< i1 << std::endl;
  IntegerVector i2  = RcppDeepState_IntegerVector();
  qs::c_qsave(i2,"/home/akhila/fuzzer_packages/fuzzedpackages/interp/inst/testfiles/triFind/inputs/i2.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "i2 values: "<< i2 << std::endl;
  IntegerVector i3  = RcppDeepState_IntegerVector();
  qs::c_qsave(i3,"/home/akhila/fuzzer_packages/fuzzedpackages/interp/inst/testfiles/triFind/inputs/i3.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "i3 values: "<< i3 << std::endl;
  NumericVector x  = RcppDeepState_NumericVector();
  qs::c_qsave(x,"/home/akhila/fuzzer_packages/fuzzedpackages/interp/inst/testfiles/triFind/inputs/x.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "x values: "<< x << std::endl;
  NumericVector y  = RcppDeepState_NumericVector();
  qs::c_qsave(y,"/home/akhila/fuzzer_packages/fuzzedpackages/interp/inst/testfiles/triFind/inputs/y.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "y values: "<< y << std::endl;
  std::cout << "input ends" << std::endl;
  try{
    triFind(nT[0],xT,yT,i1,i2,i3,x,y);
  }
  catch(Rcpp::exception& e){
    std::cout<<"Exception Handled"<<std::endl;
  }
}
