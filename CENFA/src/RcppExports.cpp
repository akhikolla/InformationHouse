// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <Rcpp.h>

using namespace Rcpp;

// doSpmin
NumericVector doSpmin(NumericVector x, NumericVector y);
RcppExport SEXP _CENFA_doSpmin(SEXP xSEXP, SEXP ySEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type x(xSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type y(ySEXP);
    rcpp_result_gen = Rcpp::wrap(doSpmin(x, y));
    return rcpp_result_gen;
END_RCPP
}
// doSpmax
NumericVector doSpmax(NumericVector x, NumericVector y);
RcppExport SEXP _CENFA_doSpmax(SEXP xSEXP, SEXP ySEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type x(xSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type y(ySEXP);
    rcpp_result_gen = Rcpp::wrap(doSpmax(x, y));
    return rcpp_result_gen;
END_RCPP
}
// ppmin
NumericVector ppmin(NumericVector x, NumericVector y, bool narm);
RcppExport SEXP _CENFA_ppmin(SEXP xSEXP, SEXP ySEXP, SEXP narmSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type x(xSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type y(ySEXP);
    Rcpp::traits::input_parameter< bool >::type narm(narmSEXP);
    rcpp_result_gen = Rcpp::wrap(ppmin(x, y, narm));
    return rcpp_result_gen;
END_RCPP
}
// ppmax
NumericVector ppmax(NumericVector x, NumericVector y, bool narm);
RcppExport SEXP _CENFA_ppmax(SEXP xSEXP, SEXP ySEXP, SEXP narmSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type x(xSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type y(ySEXP);
    Rcpp::traits::input_parameter< bool >::type narm(narmSEXP);
    rcpp_result_gen = Rcpp::wrap(ppmax(x, y, narm));
    return rcpp_result_gen;
END_RCPP
}
// doRowMin
NumericVector doRowMin(NumericMatrix x, bool narm);
RcppExport SEXP _CENFA_doRowMin(SEXP xSEXP, SEXP narmSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericMatrix >::type x(xSEXP);
    Rcpp::traits::input_parameter< bool >::type narm(narmSEXP);
    rcpp_result_gen = Rcpp::wrap(doRowMin(x, narm));
    return rcpp_result_gen;
END_RCPP
}
// doRowMax
NumericVector doRowMax(NumericMatrix x, bool narm);
RcppExport SEXP _CENFA_doRowMax(SEXP xSEXP, SEXP narmSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericMatrix >::type x(xSEXP);
    Rcpp::traits::input_parameter< bool >::type narm(narmSEXP);
    rcpp_result_gen = Rcpp::wrap(doRowMax(x, narm));
    return rcpp_result_gen;
END_RCPP
}
// timesTwo
NumericVector timesTwo(NumericVector x);
RcppExport SEXP _CENFA_timesTwo(SEXP xSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type x(xSEXP);
    rcpp_result_gen = Rcpp::wrap(timesTwo(x));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_CENFA_doSpmin", (DL_FUNC) &_CENFA_doSpmin, 2},
    {"_CENFA_doSpmax", (DL_FUNC) &_CENFA_doSpmax, 2},
    {"_CENFA_ppmin", (DL_FUNC) &_CENFA_ppmin, 3},
    {"_CENFA_ppmax", (DL_FUNC) &_CENFA_ppmax, 3},
    {"_CENFA_doRowMin", (DL_FUNC) &_CENFA_doRowMin, 2},
    {"_CENFA_doRowMax", (DL_FUNC) &_CENFA_doRowMax, 2},
    {"_CENFA_timesTwo", (DL_FUNC) &_CENFA_timesTwo, 1},
    {NULL, NULL, 0}
};

RcppExport void R_init_CENFA(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
