// AUTOMATICALLY GENERATED BY RCPPDEEPSTATE PLEASE DO NOT EDIT BY HAND, INSTEAD EDIT
// calc_segmentation_magnitude_impl_DeepState_TestHarness_generation.cpp and calc_segmentation_magnitude_impl_DeepState_TestHarness_checks.cpp

#include <fstream>
#include <RInside.h>
#include <iostream>
#include <RcppDeepState.h>
#include <qs.h>
#include <DeepState.hpp>

void calc_segmentation_magnitude_impl(NumericVector segmentation_magnitude_overall, NumericVector index_keypresses, NumericVector gauss_values, int gauss_n_indexes_per_side, int indexes_gauss_offset);

TEST(segmag_deepstate_test,calc_segmentation_magnitude_impl_test){
  RInside R;
  std::cout << "input starts" << std::endl;
  NumericVector segmentation_magnitude_overall  = RcppDeepState_NumericVector();
  qs::c_qsave(segmentation_magnitude_overall,"/home/akhila/fuzzer_packages/fuzzedpackages/segmag/inst/testfiles/calc_segmentation_magnitude_impl/inputs/segmentation_magnitude_overall.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "segmentation_magnitude_overall values: "<< segmentation_magnitude_overall << std::endl;
  NumericVector index_keypresses  = RcppDeepState_NumericVector();
  qs::c_qsave(index_keypresses,"/home/akhila/fuzzer_packages/fuzzedpackages/segmag/inst/testfiles/calc_segmentation_magnitude_impl/inputs/index_keypresses.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "index_keypresses values: "<< index_keypresses << std::endl;
  NumericVector gauss_values  = RcppDeepState_NumericVector();
  qs::c_qsave(gauss_values,"/home/akhila/fuzzer_packages/fuzzedpackages/segmag/inst/testfiles/calc_segmentation_magnitude_impl/inputs/gauss_values.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "gauss_values values: "<< gauss_values << std::endl;
  IntegerVector gauss_n_indexes_per_side(1);
  gauss_n_indexes_per_side[0]  = RcppDeepState_int();
  qs::c_qsave(gauss_n_indexes_per_side,"/home/akhila/fuzzer_packages/fuzzedpackages/segmag/inst/testfiles/calc_segmentation_magnitude_impl/inputs/gauss_n_indexes_per_side.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "gauss_n_indexes_per_side values: "<< gauss_n_indexes_per_side << std::endl;
  IntegerVector indexes_gauss_offset(1);
  indexes_gauss_offset[0]  = RcppDeepState_int();
  qs::c_qsave(indexes_gauss_offset,"/home/akhila/fuzzer_packages/fuzzedpackages/segmag/inst/testfiles/calc_segmentation_magnitude_impl/inputs/indexes_gauss_offset.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "indexes_gauss_offset values: "<< indexes_gauss_offset << std::endl;
  std::cout << "input ends" << std::endl;
  try{
    calc_segmentation_magnitude_impl(segmentation_magnitude_overall,index_keypresses,gauss_values,gauss_n_indexes_per_side[0],indexes_gauss_offset[0]);
  }
  catch(Rcpp::exception& e){
    std::cout<<"Exception Handled"<<std::endl;
  }
}
