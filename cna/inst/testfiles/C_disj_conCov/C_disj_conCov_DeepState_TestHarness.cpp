// AUTOMATICALLY GENERATED BY RCPPDEEPSTATE PLEASE DO NOT EDIT BY HAND, INSTEAD EDIT
// C_disj_conCov_DeepState_TestHarness_generation.cpp and C_disj_conCov_DeepState_TestHarness_checks.cpp

#include <fstream>
#include <RInside.h>
#include <iostream>
#include <RcppDeepState.h>
#include <qs.h>
#include <DeepState.hpp>

NumericVector C_disj_conCov(const IntegerVector cols, const NumericMatrix x, const NumericVector y, const IntegerVector f);

TEST(cna_deepstate_test,C_disj_conCov_test){
  RInside R;
  std::cout << "input starts" << std::endl;
  IntegerVector cols  = RcppDeepState_IntegerVector();
  qs::c_qsave(cols,"/home/akhila/fuzzer_packages/fuzzedpackages/cna/inst/testfiles/C_disj_conCov/inputs/cols.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "cols values: "<< cols << std::endl;
  NumericMatrix x  = RcppDeepState_NumericMatrix();
  qs::c_qsave(x,"/home/akhila/fuzzer_packages/fuzzedpackages/cna/inst/testfiles/C_disj_conCov/inputs/x.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "x values: "<< x << std::endl;
  NumericVector y  = RcppDeepState_NumericVector();
  qs::c_qsave(y,"/home/akhila/fuzzer_packages/fuzzedpackages/cna/inst/testfiles/C_disj_conCov/inputs/y.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "y values: "<< y << std::endl;
  IntegerVector f  = RcppDeepState_IntegerVector();
  qs::c_qsave(f,"/home/akhila/fuzzer_packages/fuzzedpackages/cna/inst/testfiles/C_disj_conCov/inputs/f.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "f values: "<< f << std::endl;
  std::cout << "input ends" << std::endl;
  try{
    C_disj_conCov(cols,x,y,f);
  }
  catch(Rcpp::exception& e){
    std::cout<<"Exception Handled"<<std::endl;
  }
}
