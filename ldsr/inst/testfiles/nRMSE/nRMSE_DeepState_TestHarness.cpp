// AUTOMATICALLY GENERATED BY RCPPDEEPSTATE PLEASE DO NOT EDIT BY HAND, INSTEAD EDIT
// nRMSE_DeepState_TestHarness_generation.cpp and nRMSE_DeepState_TestHarness_checks.cpp

#include <fstream>
#include <RInside.h>
#include <iostream>
#include <RcppDeepState.h>
#include <qs.h>
#include <DeepState.hpp>

double nRMSE(NumericVector yhat, NumericVector y, double normConst);

TEST(ldsr_deepstate_test,nRMSE_test){
  RInside R;
  std::cout << "input starts" << std::endl;
  NumericVector yhat  = RcppDeepState_NumericVector();
  qs::c_qsave(yhat,"/home/akhila/fuzzer_packages/fuzzedpackages/ldsr/inst/testfiles/nRMSE/inputs/yhat.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "yhat values: "<< yhat << std::endl;
  NumericVector y  = RcppDeepState_NumericVector();
  qs::c_qsave(y,"/home/akhila/fuzzer_packages/fuzzedpackages/ldsr/inst/testfiles/nRMSE/inputs/y.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "y values: "<< y << std::endl;
  NumericVector normConst(1);
  normConst[0]  = RcppDeepState_double();
  qs::c_qsave(normConst,"/home/akhila/fuzzer_packages/fuzzedpackages/ldsr/inst/testfiles/nRMSE/inputs/normConst.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "normConst values: "<< normConst << std::endl;
  std::cout << "input ends" << std::endl;
  try{
    nRMSE(yhat,y,normConst[0]);
  }
  catch(Rcpp::exception& e){
    std::cout<<"Exception Handled"<<std::endl;
  }
}
