<?xml version="1.0"?>

<valgrindoutput>

<protocolversion>4</protocolversion>
<protocoltool>memcheck</protocoltool>

<preamble>
  <line>Memcheck, a memory error detector</line>
  <line>Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.</line>
  <line>Using Valgrind-3.15.0 and LibVEX; rerun with -h for copyright info</line>
  <line>Command: ./KGE_DeepState_TestHarness --input_test_file /home/akhila/fuzzer_packages/fuzzedpackages/ldsr/inst/testfiles/KGE/KGE_output/414fbbcf9307ee823e3971a470609eedf2cad9a7.pass</line>
</preamble>

<pid>966625</pid>
<ppid>966624</ppid>
<tool>memcheck</tool>

<args>
  <vargv>
    <exe>/usr/bin/valgrind.bin</exe>
    <arg>--xml=yes</arg>
    <arg>--xml-file=/home/akhila/fuzzer_packages/fuzzedpackages/ldsr/inst/testfiles/KGE/KGE_output/log_414fbbcf9307ee823e3971a470609eedf2cad9a7/valgrind_log</arg>
    <arg>--tool=memcheck</arg>
    <arg>--leak-check=yes</arg>
  </vargv>
  <argv>
    <exe>./KGE_DeepState_TestHarness</exe>
    <arg>--input_test_file</arg>
    <arg>/home/akhila/fuzzer_packages/fuzzedpackages/ldsr/inst/testfiles/KGE/KGE_output/414fbbcf9307ee823e3971a470609eedf2cad9a7.pass</arg>
  </argv>
</args>

<status>
  <state>RUNNING</state>
  <time>00:00:00:00.025 </time>
</status>

<error>
  <unique>0x0</unique>
  <tid>1</tid>
  <kind>InvalidRead</kind>
  <what>Invalid read of size 8</what>
  <stack>
    <frame>
      <ip>0x4D51176</ip>
      <obj>/home/akhila/fuzzer_packages/fuzzedpackages/ldsr/src/ldsr.so</obj>
      <fn>operator[]</fn>
      <dir>/home/akhila/R/x86_64-pc-linux-gnu-library/4.0/Rcpp/include/Rcpp/sugar/operators</dir>
      <file>times.h</file>
      <line>71</line>
    </frame>
    <frame>
      <ip>0x4D51176</ip>
      <obj>/home/akhila/fuzzer_packages/fuzzedpackages/ldsr/src/ldsr.so</obj>
      <fn>get</fn>
      <dir>/home/akhila/R/x86_64-pc-linux-gnu-library/4.0/Rcpp/include/Rcpp/sugar/functions</dir>
      <file>sum.h</file>
      <line>65</line>
    </frame>
    <frame>
      <ip>0x4D51176</ip>
      <obj>/home/akhila/fuzzer_packages/fuzzedpackages/ldsr/src/ldsr.so</obj>
      <fn>operator double</fn>
      <dir>/home/akhila/R/x86_64-pc-linux-gnu-library/4.0/Rcpp/include/Rcpp/sugar/functions</dir>
      <file>Lazy.h</file>
      <line>31</line>
    </frame>
    <frame>
      <ip>0x4D51176</ip>
      <obj>/home/akhila/fuzzer_packages/fuzzedpackages/ldsr/src/ldsr.so</obj>
      <fn>corr(Rcpp::Vector&lt;14, Rcpp::PreserveStorage&gt;, Rcpp::Vector&lt;14, Rcpp::PreserveStorage&gt;)</fn>
      <dir>/home/akhila/fuzzer_packages/fuzzedpackages/ldsr/src</dir>
      <file>utils.cpp</file>
      <line>56</line>
    </frame>
    <frame>
      <ip>0x4D51B89</ip>
      <obj>/home/akhila/fuzzer_packages/fuzzedpackages/ldsr/src/ldsr.so</obj>
      <fn>KGE(Rcpp::Vector&lt;14, Rcpp::PreserveStorage&gt;, Rcpp::Vector&lt;14, Rcpp::PreserveStorage&gt;)</fn>
      <dir>/home/akhila/fuzzer_packages/fuzzedpackages/ldsr/src</dir>
      <file>utils.cpp</file>
      <line>73</line>
    </frame>
    <frame>
      <ip>0x409F35</ip>
      <obj>/home/akhila/fuzzer_packages/fuzzedpackages/ldsr/inst/testfiles/KGE/KGE_DeepState_TestHarness</obj>
      <fn>DeepState_Test_ldsr_deepstate_test_KGE_test()</fn>
      <dir>/home/akhila/fuzzer_packages/fuzzedpackages/ldsr/inst/testfiles/KGE</dir>
      <file>KGE_DeepState_TestHarness.cpp</file>
      <line>26</line>
    </frame>
    <frame>
      <ip>0x409B58</ip>
      <obj>/home/akhila/fuzzer_packages/fuzzedpackages/ldsr/inst/testfiles/KGE/KGE_DeepState_TestHarness</obj>
      <fn>DeepState_Run_ldsr_deepstate_test_KGE_test()</fn>
      <dir>/home/akhila/fuzzer_packages/fuzzedpackages/ldsr/inst/testfiles/KGE</dir>
      <file>KGE_DeepState_TestHarness.cpp</file>
      <line>13</line>
    </frame>
    <frame>
      <ip>0x41CCD8</ip>
      <obj>/home/akhila/fuzzer_packages/fuzzedpackages/ldsr/inst/testfiles/KGE/KGE_DeepState_TestHarness</obj>
      <fn>DeepState_RunTest.isra.0</fn>
    </frame>
    <frame>
      <ip>0x41CF79</ip>
      <obj>/home/akhila/fuzzer_packages/fuzzedpackages/ldsr/inst/testfiles/KGE/KGE_DeepState_TestHarness</obj>
      <fn>DeepState_ForkAndRunTest</fn>
    </frame>
    <frame>
      <ip>0x41D054</ip>
      <obj>/home/akhila/fuzzer_packages/fuzzedpackages/ldsr/inst/testfiles/KGE/KGE_DeepState_TestHarness</obj>
      <fn>DeepState_RunSavedTestCase</fn>
    </frame>
    <frame>
      <ip>0x407665</ip>
      <obj>/home/akhila/fuzzer_packages/fuzzedpackages/ldsr/inst/testfiles/KGE/KGE_DeepState_TestHarness</obj>
      <fn>main</fn>
    </frame>
  </stack>
  <auxwhat>Address 0xab90ba0 is 0 bytes after a block of size 256 alloc'd</auxwhat>
  <stack>
    <frame>
      <ip>0x483B7F3</ip>
      <obj>/usr/lib/x86_64-linux-gnu/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>malloc</fn>
    </frame>
    <frame>
      <ip>0x49D5CB3</ip>
      <obj>/usr/lib/R/lib/libR.so</obj>
      <fn>Rf_allocVector3</fn>
    </frame>
    <frame>
      <ip>0x4D51049</ip>
      <obj>/home/akhila/fuzzer_packages/fuzzedpackages/ldsr/src/ldsr.so</obj>
      <fn>import_sugar_expression&lt;true, Rcpp::sugar::Divides_Vector_Primitive&lt;14, true, Rcpp::sugar::Minus_Vector_Primitive&lt;14, true, Rcpp::Vector&lt;14, Rcpp::PreserveStorage&gt; &gt; &gt; &gt;</fn>
      <dir>/home/akhila/R/x86_64-pc-linux-gnu-library/4.0/Rcpp/include/Rcpp/vector</dir>
      <file>Vector.h</file>
      <line>1070</line>
    </frame>
    <frame>
      <ip>0x4D51049</ip>
      <obj>/home/akhila/fuzzer_packages/fuzzedpackages/ldsr/src/ldsr.so</obj>
      <fn>Vector&lt;true, Rcpp::sugar::Divides_Vector_Primitive&lt;14, true, Rcpp::sugar::Minus_Vector_Primitive&lt;14, true, Rcpp::Vector&lt;14, Rcpp::PreserveStorage&gt; &gt; &gt; &gt;</fn>
      <dir>/home/akhila/R/x86_64-pc-linux-gnu-library/4.0/Rcpp/include/Rcpp/vector</dir>
      <file>Vector.h</file>
      <line>165</line>
    </frame>
    <frame>
      <ip>0x4D51049</ip>
      <obj>/home/akhila/fuzzer_packages/fuzzedpackages/ldsr/src/ldsr.so</obj>
      <fn>corr(Rcpp::Vector&lt;14, Rcpp::PreserveStorage&gt;, Rcpp::Vector&lt;14, Rcpp::PreserveStorage&gt;)</fn>
      <dir>/home/akhila/fuzzer_packages/fuzzedpackages/ldsr/src</dir>
      <file>utils.cpp</file>
      <line>55</line>
    </frame>
    <frame>
      <ip>0x4D51B89</ip>
      <obj>/home/akhila/fuzzer_packages/fuzzedpackages/ldsr/src/ldsr.so</obj>
      <fn>KGE(Rcpp::Vector&lt;14, Rcpp::PreserveStorage&gt;, Rcpp::Vector&lt;14, Rcpp::PreserveStorage&gt;)</fn>
      <dir>/home/akhila/fuzzer_packages/fuzzedpackages/ldsr/src</dir>
      <file>utils.cpp</file>
      <line>73</line>
    </frame>
    <frame>
      <ip>0x409F35</ip>
      <obj>/home/akhila/fuzzer_packages/fuzzedpackages/ldsr/inst/testfiles/KGE/KGE_DeepState_TestHarness</obj>
      <fn>DeepState_Test_ldsr_deepstate_test_KGE_test()</fn>
      <dir>/home/akhila/fuzzer_packages/fuzzedpackages/ldsr/inst/testfiles/KGE</dir>
      <file>KGE_DeepState_TestHarness.cpp</file>
      <line>26</line>
    </frame>
    <frame>
      <ip>0x409B58</ip>
      <obj>/home/akhila/fuzzer_packages/fuzzedpackages/ldsr/inst/testfiles/KGE/KGE_DeepState_TestHarness</obj>
      <fn>DeepState_Run_ldsr_deepstate_test_KGE_test()</fn>
      <dir>/home/akhila/fuzzer_packages/fuzzedpackages/ldsr/inst/testfiles/KGE</dir>
      <file>KGE_DeepState_TestHarness.cpp</file>
      <line>13</line>
    </frame>
    <frame>
      <ip>0x41CCD8</ip>
      <obj>/home/akhila/fuzzer_packages/fuzzedpackages/ldsr/inst/testfiles/KGE/KGE_DeepState_TestHarness</obj>
      <fn>DeepState_RunTest.isra.0</fn>
    </frame>
    <frame>
      <ip>0x41CF79</ip>
      <obj>/home/akhila/fuzzer_packages/fuzzedpackages/ldsr/inst/testfiles/KGE/KGE_DeepState_TestHarness</obj>
      <fn>DeepState_ForkAndRunTest</fn>
    </frame>
    <frame>
      <ip>0x41D054</ip>
      <obj>/home/akhila/fuzzer_packages/fuzzedpackages/ldsr/inst/testfiles/KGE/KGE_DeepState_TestHarness</obj>
      <fn>DeepState_RunSavedTestCase</fn>
    </frame>
    <frame>
      <ip>0x407665</ip>
      <obj>/home/akhila/fuzzer_packages/fuzzedpackages/ldsr/inst/testfiles/KGE/KGE_DeepState_TestHarness</obj>
      <fn>main</fn>
    </frame>
  </stack>
</error>


<status>
  <state>FINISHED</state>
  <time>00:00:00:07.773 </time>
</status>

<errorcounts>
  <pair>
    <count>16</count>
    <unique>0x0</unique>
  </pair>
</errorcounts>

<suppcounts>
</suppcounts>

</valgrindoutput>


<status>
  <state>FINISHED</state>
  <time>00:00:00:08.261 </time>
</status>

<errorcounts>
</errorcounts>

<suppcounts>
</suppcounts>

</valgrindoutput>

