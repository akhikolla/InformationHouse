// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <Rcpp.h>

using namespace Rcpp;

// SDM
double SDM(NumericMatrix M);
RcppExport SEXP _Opt5PL_SDM(SEXP MSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericMatrix >::type M(MSEXP);
    rcpp_result_gen = Rcpp::wrap(SDM(M));
    return rcpp_result_gen;
END_RCPP
}
// Trans
NumericMatrix Trans(NumericMatrix M);
RcppExport SEXP _Opt5PL_Trans(SEXP MSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericMatrix >::type M(MSEXP);
    rcpp_result_gen = Rcpp::wrap(Trans(M));
    return rcpp_result_gen;
END_RCPP
}
// Minus
NumericMatrix Minus(NumericMatrix M1, NumericMatrix M2);
RcppExport SEXP _Opt5PL_Minus(SEXP M1SEXP, SEXP M2SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericMatrix >::type M1(M1SEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type M2(M2SEXP);
    rcpp_result_gen = Rcpp::wrap(Minus(M1, M2));
    return rcpp_result_gen;
END_RCPP
}
// Plus
NumericMatrix Plus(NumericMatrix M1, NumericMatrix M2);
RcppExport SEXP _Opt5PL_Plus(SEXP M1SEXP, SEXP M2SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericMatrix >::type M1(M1SEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type M2(M2SEXP);
    rcpp_result_gen = Rcpp::wrap(Plus(M1, M2));
    return rcpp_result_gen;
END_RCPP
}
// Multiple
NumericMatrix Multiple(NumericMatrix M1, NumericMatrix M2);
RcppExport SEXP _Opt5PL_Multiple(SEXP M1SEXP, SEXP M2SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericMatrix >::type M1(M1SEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type M2(M2SEXP);
    rcpp_result_gen = Rcpp::wrap(Multiple(M1, M2));
    return rcpp_result_gen;
END_RCPP
}
// sMultiple
NumericMatrix sMultiple(double s, NumericMatrix M);
RcppExport SEXP _Opt5PL_sMultiple(SEXP sSEXP, SEXP MSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< double >::type s(sSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type M(MSEXP);
    rcpp_result_gen = Rcpp::wrap(sMultiple(s, M));
    return rcpp_result_gen;
END_RCPP
}
// infor
NumericMatrix infor(NumericVector T, double x, int order);
RcppExport SEXP _Opt5PL_infor(SEXP TSEXP, SEXP xSEXP, SEXP orderSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type T(TSEXP);
    Rcpp::traits::input_parameter< double >::type x(xSEXP);
    Rcpp::traits::input_parameter< int >::type order(orderSEXP);
    rcpp_result_gen = Rcpp::wrap(infor(T, x, order));
    return rcpp_result_gen;
END_RCPP
}
// upinfor
NumericMatrix upinfor(NumericVector W, NumericVector T, NumericVector X, int order);
RcppExport SEXP _Opt5PL_upinfor(SEXP WSEXP, SEXP TSEXP, SEXP XSEXP, SEXP orderSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type W(WSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type T(TSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type X(XSEXP);
    Rcpp::traits::input_parameter< int >::type order(orderSEXP);
    rcpp_result_gen = Rcpp::wrap(upinfor(W, T, X, order));
    return rcpp_result_gen;
END_RCPP
}
// smalld1
double smalld1(NumericVector T, double x, double xl, NumericMatrix inv, int order);
RcppExport SEXP _Opt5PL_smalld1(SEXP TSEXP, SEXP xSEXP, SEXP xlSEXP, SEXP invSEXP, SEXP orderSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type T(TSEXP);
    Rcpp::traits::input_parameter< double >::type x(xSEXP);
    Rcpp::traits::input_parameter< double >::type xl(xlSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type inv(invSEXP);
    Rcpp::traits::input_parameter< int >::type order(orderSEXP);
    rcpp_result_gen = Rcpp::wrap(smalld1(T, x, xl, inv, order));
    return rcpp_result_gen;
END_RCPP
}
// smalldd1
double smalldd1(NumericVector T, double x1, double x2, double xl, NumericMatrix inv, int order);
RcppExport SEXP _Opt5PL_smalldd1(SEXP TSEXP, SEXP x1SEXP, SEXP x2SEXP, SEXP xlSEXP, SEXP invSEXP, SEXP orderSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type T(TSEXP);
    Rcpp::traits::input_parameter< double >::type x1(x1SEXP);
    Rcpp::traits::input_parameter< double >::type x2(x2SEXP);
    Rcpp::traits::input_parameter< double >::type xl(xlSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type inv(invSEXP);
    Rcpp::traits::input_parameter< int >::type order(orderSEXP);
    rcpp_result_gen = Rcpp::wrap(smalldd1(T, x1, x2, xl, inv, order));
    return rcpp_result_gen;
END_RCPP
}
// d11
double d11(NumericVector T, double x, double xl, NumericMatrix inv, NumericMatrix inv1, int order);
RcppExport SEXP _Opt5PL_d11(SEXP TSEXP, SEXP xSEXP, SEXP xlSEXP, SEXP invSEXP, SEXP inv1SEXP, SEXP orderSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type T(TSEXP);
    Rcpp::traits::input_parameter< double >::type x(xSEXP);
    Rcpp::traits::input_parameter< double >::type xl(xlSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type inv(invSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type inv1(inv1SEXP);
    Rcpp::traits::input_parameter< int >::type order(orderSEXP);
    rcpp_result_gen = Rcpp::wrap(d11(T, x, xl, inv, inv1, order));
    return rcpp_result_gen;
END_RCPP
}
// dd11
double dd11(NumericVector T, double x1, double x2, double xl, NumericMatrix inv, NumericMatrix inv1, int order);
RcppExport SEXP _Opt5PL_dd11(SEXP TSEXP, SEXP x1SEXP, SEXP x2SEXP, SEXP xlSEXP, SEXP invSEXP, SEXP inv1SEXP, SEXP orderSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type T(TSEXP);
    Rcpp::traits::input_parameter< double >::type x1(x1SEXP);
    Rcpp::traits::input_parameter< double >::type x2(x2SEXP);
    Rcpp::traits::input_parameter< double >::type xl(xlSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type inv(invSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type inv1(inv1SEXP);
    Rcpp::traits::input_parameter< int >::type order(orderSEXP);
    rcpp_result_gen = Rcpp::wrap(dd11(T, x1, x2, xl, inv, inv1, order));
    return rcpp_result_gen;
END_RCPP
}
// f
NumericMatrix f(NumericVector T, double x, int order);
RcppExport SEXP _Opt5PL_f(SEXP TSEXP, SEXP xSEXP, SEXP orderSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type T(TSEXP);
    Rcpp::traits::input_parameter< double >::type x(xSEXP);
    Rcpp::traits::input_parameter< int >::type order(orderSEXP);
    rcpp_result_gen = Rcpp::wrap(f(T, x, order));
    return rcpp_result_gen;
END_RCPP
}
// smallds1
double smallds1(NumericVector T, double x, NumericMatrix inv, int order);
RcppExport SEXP _Opt5PL_smallds1(SEXP TSEXP, SEXP xSEXP, SEXP invSEXP, SEXP orderSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type T(TSEXP);
    Rcpp::traits::input_parameter< double >::type x(xSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type inv(invSEXP);
    Rcpp::traits::input_parameter< int >::type order(orderSEXP);
    rcpp_result_gen = Rcpp::wrap(smallds1(T, x, inv, order));
    return rcpp_result_gen;
END_RCPP
}
// ds11
double ds11(NumericVector T, double x, NumericMatrix inv, NumericMatrix inv1, int order);
RcppExport SEXP _Opt5PL_ds11(SEXP TSEXP, SEXP xSEXP, SEXP invSEXP, SEXP inv1SEXP, SEXP orderSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type T(TSEXP);
    Rcpp::traits::input_parameter< double >::type x(xSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type inv(invSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type inv1(inv1SEXP);
    Rcpp::traits::input_parameter< int >::type order(orderSEXP);
    rcpp_result_gen = Rcpp::wrap(ds11(T, x, inv, inv1, order));
    return rcpp_result_gen;
END_RCPP
}
// Dp
double Dp(NumericVector T, double p);
RcppExport SEXP _Opt5PL_Dp(SEXP TSEXP, SEXP pSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type T(TSEXP);
    Rcpp::traits::input_parameter< double >::type p(pSEXP);
    rcpp_result_gen = Rcpp::wrap(Dp(T, p));
    return rcpp_result_gen;
END_RCPP
}
// g
NumericMatrix g(NumericVector T, double p);
RcppExport SEXP _Opt5PL_g(SEXP TSEXP, SEXP pSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type T(TSEXP);
    Rcpp::traits::input_parameter< double >::type p(pSEXP);
    rcpp_result_gen = Rcpp::wrap(g(T, p));
    return rcpp_result_gen;
END_RCPP
}
// D1
double D1(NumericVector T, double x, double xl, NumericMatrix inv, double p, int order);
RcppExport SEXP _Opt5PL_D1(SEXP TSEXP, SEXP xSEXP, SEXP xlSEXP, SEXP invSEXP, SEXP pSEXP, SEXP orderSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type T(TSEXP);
    Rcpp::traits::input_parameter< double >::type x(xSEXP);
    Rcpp::traits::input_parameter< double >::type xl(xlSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type inv(invSEXP);
    Rcpp::traits::input_parameter< double >::type p(pSEXP);
    Rcpp::traits::input_parameter< int >::type order(orderSEXP);
    rcpp_result_gen = Rcpp::wrap(D1(T, x, xl, inv, p, order));
    return rcpp_result_gen;
END_RCPP
}
// DD1
double DD1(NumericVector T, double x1, double x2, double xl, NumericMatrix inv, double p, int order);
RcppExport SEXP _Opt5PL_DD1(SEXP TSEXP, SEXP x1SEXP, SEXP x2SEXP, SEXP xlSEXP, SEXP invSEXP, SEXP pSEXP, SEXP orderSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type T(TSEXP);
    Rcpp::traits::input_parameter< double >::type x1(x1SEXP);
    Rcpp::traits::input_parameter< double >::type x2(x2SEXP);
    Rcpp::traits::input_parameter< double >::type xl(xlSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type inv(invSEXP);
    Rcpp::traits::input_parameter< double >::type p(pSEXP);
    Rcpp::traits::input_parameter< int >::type order(orderSEXP);
    rcpp_result_gen = Rcpp::wrap(DD1(T, x1, x2, xl, inv, p, order));
    return rcpp_result_gen;
END_RCPP
}
// DS1
double DS1(NumericVector T, double x, NumericMatrix inv, double p, int order);
RcppExport SEXP _Opt5PL_DS1(SEXP TSEXP, SEXP xSEXP, SEXP invSEXP, SEXP pSEXP, SEXP orderSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type T(TSEXP);
    Rcpp::traits::input_parameter< double >::type x(xSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type inv(invSEXP);
    Rcpp::traits::input_parameter< double >::type p(pSEXP);
    Rcpp::traits::input_parameter< int >::type order(orderSEXP);
    rcpp_result_gen = Rcpp::wrap(DS1(T, x, inv, p, order));
    return rcpp_result_gen;
END_RCPP
}
// D_weight_1
NumericVector D_weight_1(NumericVector q, NumericVector W, NumericVector T1, NumericVector T2, NumericVector T3, NumericVector X, NumericMatrix inv1, NumericMatrix inv2, NumericMatrix inv3);
RcppExport SEXP _Opt5PL_D_weight_1(SEXP qSEXP, SEXP WSEXP, SEXP T1SEXP, SEXP T2SEXP, SEXP T3SEXP, SEXP XSEXP, SEXP inv1SEXP, SEXP inv2SEXP, SEXP inv3SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type q(qSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type W(WSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type T1(T1SEXP);
    Rcpp::traits::input_parameter< NumericVector >::type T2(T2SEXP);
    Rcpp::traits::input_parameter< NumericVector >::type T3(T3SEXP);
    Rcpp::traits::input_parameter< NumericVector >::type X(XSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type inv1(inv1SEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type inv2(inv2SEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type inv3(inv3SEXP);
    rcpp_result_gen = Rcpp::wrap(D_weight_1(q, W, T1, T2, T3, X, inv1, inv2, inv3));
    return rcpp_result_gen;
END_RCPP
}
// D_weight_2
NumericVector D_weight_2(NumericVector q, NumericVector W, NumericVector T1, NumericVector T2, NumericVector T3, NumericVector X, NumericMatrix inv1, NumericMatrix inv2, NumericMatrix inv3);
RcppExport SEXP _Opt5PL_D_weight_2(SEXP qSEXP, SEXP WSEXP, SEXP T1SEXP, SEXP T2SEXP, SEXP T3SEXP, SEXP XSEXP, SEXP inv1SEXP, SEXP inv2SEXP, SEXP inv3SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type q(qSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type W(WSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type T1(T1SEXP);
    Rcpp::traits::input_parameter< NumericVector >::type T2(T2SEXP);
    Rcpp::traits::input_parameter< NumericVector >::type T3(T3SEXP);
    Rcpp::traits::input_parameter< NumericVector >::type X(XSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type inv1(inv1SEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type inv2(inv2SEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type inv3(inv3SEXP);
    rcpp_result_gen = Rcpp::wrap(D_weight_2(q, W, T1, T2, T3, X, inv1, inv2, inv3));
    return rcpp_result_gen;
END_RCPP
}
// c_weight_1
NumericVector c_weight_1(NumericVector W, NumericVector T, NumericVector X, NumericMatrix inv, double p, int order);
RcppExport SEXP _Opt5PL_c_weight_1(SEXP WSEXP, SEXP TSEXP, SEXP XSEXP, SEXP invSEXP, SEXP pSEXP, SEXP orderSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type W(WSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type T(TSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type X(XSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type inv(invSEXP);
    Rcpp::traits::input_parameter< double >::type p(pSEXP);
    Rcpp::traits::input_parameter< int >::type order(orderSEXP);
    rcpp_result_gen = Rcpp::wrap(c_weight_1(W, T, X, inv, p, order));
    return rcpp_result_gen;
END_RCPP
}
// c_weight_2
NumericMatrix c_weight_2(NumericVector W, NumericVector T, NumericVector X, NumericMatrix inv, double p, int order);
RcppExport SEXP _Opt5PL_c_weight_2(SEXP WSEXP, SEXP TSEXP, SEXP XSEXP, SEXP invSEXP, SEXP pSEXP, SEXP orderSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type W(WSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type T(TSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type X(XSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type inv(invSEXP);
    Rcpp::traits::input_parameter< double >::type p(pSEXP);
    Rcpp::traits::input_parameter< int >::type order(orderSEXP);
    rcpp_result_gen = Rcpp::wrap(c_weight_2(W, T, X, inv, p, order));
    return rcpp_result_gen;
END_RCPP
}
// DD_weight_1
NumericVector DD_weight_1(NumericVector W, NumericVector T, NumericVector X, NumericMatrix inv, NumericMatrix inv1, int order);
RcppExport SEXP _Opt5PL_DD_weight_1(SEXP WSEXP, SEXP TSEXP, SEXP XSEXP, SEXP invSEXP, SEXP inv1SEXP, SEXP orderSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type W(WSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type T(TSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type X(XSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type inv(invSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type inv1(inv1SEXP);
    Rcpp::traits::input_parameter< int >::type order(orderSEXP);
    rcpp_result_gen = Rcpp::wrap(DD_weight_1(W, T, X, inv, inv1, order));
    return rcpp_result_gen;
END_RCPP
}
// DD_weight_2
NumericMatrix DD_weight_2(NumericVector W, NumericVector T, NumericVector X, NumericMatrix inv, NumericMatrix inv1, int order);
RcppExport SEXP _Opt5PL_DD_weight_2(SEXP WSEXP, SEXP TSEXP, SEXP XSEXP, SEXP invSEXP, SEXP inv1SEXP, SEXP orderSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type W(WSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type T(TSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type X(XSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type inv(invSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type inv1(inv1SEXP);
    Rcpp::traits::input_parameter< int >::type order(orderSEXP);
    rcpp_result_gen = Rcpp::wrap(DD_weight_2(W, T, X, inv, inv1, order));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_Opt5PL_SDM", (DL_FUNC) &_Opt5PL_SDM, 1},
    {"_Opt5PL_Trans", (DL_FUNC) &_Opt5PL_Trans, 1},
    {"_Opt5PL_Minus", (DL_FUNC) &_Opt5PL_Minus, 2},
    {"_Opt5PL_Plus", (DL_FUNC) &_Opt5PL_Plus, 2},
    {"_Opt5PL_Multiple", (DL_FUNC) &_Opt5PL_Multiple, 2},
    {"_Opt5PL_sMultiple", (DL_FUNC) &_Opt5PL_sMultiple, 2},
    {"_Opt5PL_infor", (DL_FUNC) &_Opt5PL_infor, 3},
    {"_Opt5PL_upinfor", (DL_FUNC) &_Opt5PL_upinfor, 4},
    {"_Opt5PL_smalld1", (DL_FUNC) &_Opt5PL_smalld1, 5},
    {"_Opt5PL_smalldd1", (DL_FUNC) &_Opt5PL_smalldd1, 6},
    {"_Opt5PL_d11", (DL_FUNC) &_Opt5PL_d11, 6},
    {"_Opt5PL_dd11", (DL_FUNC) &_Opt5PL_dd11, 7},
    {"_Opt5PL_f", (DL_FUNC) &_Opt5PL_f, 3},
    {"_Opt5PL_smallds1", (DL_FUNC) &_Opt5PL_smallds1, 4},
    {"_Opt5PL_ds11", (DL_FUNC) &_Opt5PL_ds11, 5},
    {"_Opt5PL_Dp", (DL_FUNC) &_Opt5PL_Dp, 2},
    {"_Opt5PL_g", (DL_FUNC) &_Opt5PL_g, 2},
    {"_Opt5PL_D1", (DL_FUNC) &_Opt5PL_D1, 6},
    {"_Opt5PL_DD1", (DL_FUNC) &_Opt5PL_DD1, 7},
    {"_Opt5PL_DS1", (DL_FUNC) &_Opt5PL_DS1, 5},
    {"_Opt5PL_D_weight_1", (DL_FUNC) &_Opt5PL_D_weight_1, 9},
    {"_Opt5PL_D_weight_2", (DL_FUNC) &_Opt5PL_D_weight_2, 9},
    {"_Opt5PL_c_weight_1", (DL_FUNC) &_Opt5PL_c_weight_1, 6},
    {"_Opt5PL_c_weight_2", (DL_FUNC) &_Opt5PL_c_weight_2, 6},
    {"_Opt5PL_DD_weight_1", (DL_FUNC) &_Opt5PL_DD_weight_1, 6},
    {"_Opt5PL_DD_weight_2", (DL_FUNC) &_Opt5PL_DD_weight_2, 6},
    {NULL, NULL, 0}
};

RcppExport void R_init_Opt5PL(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
