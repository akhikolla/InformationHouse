// AUTOMATICALLY GENERATED BY RCPPDEEPSTATE PLEASE DO NOT EDIT BY HAND, INSTEAD EDIT
// upinfor_DeepState_TestHarness_generation.cpp and upinfor_DeepState_TestHarness_checks.cpp

#include <fstream>
#include <RInside.h>
#include <iostream>
#include <RcppDeepState.h>
#include <qs.h>
#include <DeepState.hpp>

NumericMatrix upinfor(NumericVector W, NumericVector T, NumericVector X, int order);

TEST(Opt5PL_deepstate_test,upinfor_test){
  RInside R;
  std::cout << "input starts" << std::endl;
  NumericVector W  = RcppDeepState_NumericVector();
  qs::c_qsave(W,"/home/akhila/fuzzer_packages/fuzzedpackages/Opt5PL/inst/testfiles/upinfor/inputs/W.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "W values: "<< W << std::endl;
  NumericVector T  = RcppDeepState_NumericVector();
  qs::c_qsave(T,"/home/akhila/fuzzer_packages/fuzzedpackages/Opt5PL/inst/testfiles/upinfor/inputs/T.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "T values: "<< T << std::endl;
  NumericVector X  = RcppDeepState_NumericVector();
  qs::c_qsave(X,"/home/akhila/fuzzer_packages/fuzzedpackages/Opt5PL/inst/testfiles/upinfor/inputs/X.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "X values: "<< X << std::endl;
  IntegerVector order(1);
  order[0]  = RcppDeepState_int();
  qs::c_qsave(order,"/home/akhila/fuzzer_packages/fuzzedpackages/Opt5PL/inst/testfiles/upinfor/inputs/order.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "order values: "<< order << std::endl;
  std::cout << "input ends" << std::endl;
  try{
    upinfor(W,T,X,order[0]);
  }
  catch(Rcpp::exception& e){
    std::cout<<"Exception Handled"<<std::endl;
  }
}
