// AUTOMATICALLY GENERATED BY RCPPDEEPSTATE PLEASE DO NOT EDIT BY HAND, INSTEAD EDIT
// create_lambda_sequence_DeepState_TestHarness_generation.cpp and create_lambda_sequence_DeepState_TestHarness_checks.cpp

#include <fstream>
#include <RInside.h>
#include <iostream>
#include <RcppDeepState.h>
#include <qs.h>
#include <DeepState.hpp>

NumericVector create_lambda_sequence(double lambda_max, int n_lambda, double factor_eps_inv);

TEST(xyz_deepstate_test,create_lambda_sequence_test){
  RInside R;
  std::cout << "input starts" << std::endl;
  NumericVector lambda_max(1);
  lambda_max[0]  = RcppDeepState_double();
  qs::c_qsave(lambda_max,"/home/akhila/fuzzer_packages/fuzzedpackages/xyz/inst/testfiles/create_lambda_sequence/inputs/lambda_max.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "lambda_max values: "<< lambda_max << std::endl;
  IntegerVector n_lambda(1);
  n_lambda[0]  = RcppDeepState_int();
  qs::c_qsave(n_lambda,"/home/akhila/fuzzer_packages/fuzzedpackages/xyz/inst/testfiles/create_lambda_sequence/inputs/n_lambda.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "n_lambda values: "<< n_lambda << std::endl;
  NumericVector factor_eps_inv(1);
  factor_eps_inv[0]  = RcppDeepState_double();
  qs::c_qsave(factor_eps_inv,"/home/akhila/fuzzer_packages/fuzzedpackages/xyz/inst/testfiles/create_lambda_sequence/inputs/factor_eps_inv.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "factor_eps_inv values: "<< factor_eps_inv << std::endl;
  std::cout << "input ends" << std::endl;
  try{
    create_lambda_sequence(lambda_max[0],n_lambda[0],factor_eps_inv[0]);
  }
  catch(Rcpp::exception& e){
    std::cout<<"Exception Handled"<<std::endl;
  }
}
