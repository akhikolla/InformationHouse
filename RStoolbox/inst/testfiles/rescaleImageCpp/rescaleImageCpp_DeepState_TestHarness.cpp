// AUTOMATICALLY GENERATED BY RCPPDEEPSTATE PLEASE DO NOT EDIT BY HAND, INSTEAD EDIT
// rescaleImageCpp_DeepState_TestHarness_generation.cpp and rescaleImageCpp_DeepState_TestHarness_checks.cpp

#include <fstream>
#include <RInside.h>
#include <iostream>
#include <RcppDeepState.h>
#include <qs.h>
#include <DeepState.hpp>

NumericMatrix rescaleImageCpp(NumericMatrix x, NumericVector scal, NumericVector xmin, NumericVector ymin);

TEST(RStoolbox_deepstate_test,rescaleImageCpp_test){
  RInside R;
  std::cout << "input starts" << std::endl;
  NumericMatrix x  = RcppDeepState_NumericMatrix();
  qs::c_qsave(x,"/home/akhila/fuzzer_packages/fuzzedpackages/RStoolbox/inst/testfiles/rescaleImageCpp/inputs/x.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "x values: "<< x << std::endl;
  NumericVector scal  = RcppDeepState_NumericVector();
  qs::c_qsave(scal,"/home/akhila/fuzzer_packages/fuzzedpackages/RStoolbox/inst/testfiles/rescaleImageCpp/inputs/scal.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "scal values: "<< scal << std::endl;
  NumericVector xmin  = RcppDeepState_NumericVector();
  qs::c_qsave(xmin,"/home/akhila/fuzzer_packages/fuzzedpackages/RStoolbox/inst/testfiles/rescaleImageCpp/inputs/xmin.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "xmin values: "<< xmin << std::endl;
  NumericVector ymin  = RcppDeepState_NumericVector();
  qs::c_qsave(ymin,"/home/akhila/fuzzer_packages/fuzzedpackages/RStoolbox/inst/testfiles/rescaleImageCpp/inputs/ymin.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "ymin values: "<< ymin << std::endl;
  std::cout << "input ends" << std::endl;
  try{
    rescaleImageCpp(x,scal,xmin,ymin);
  }
  catch(Rcpp::exception& e){
    std::cout<<"Exception Handled"<<std::endl;
  }
}
