// AUTOMATICALLY GENERATED BY RCPPDEEPSTATE PLEASE DO NOT EDIT BY HAND, INSTEAD EDIT
// C_Akritas_DeepState_TestHarness_generation.cpp and C_Akritas_DeepState_TestHarness_checks.cpp

#include <fstream>
#include <RInside.h>
#include <iostream>
#include <RcppDeepState.h>
#include <qs.h>
#include <DeepState.hpp>

NumericVector C_Akritas(NumericMatrix truth, NumericVector times, NumericVector unique_times, NumericVector FX_train, NumericVector FX_predict, double lambda);

TEST(survivalmodels_deepstate_test,C_Akritas_test){
  RInside R;
  std::cout << "input starts" << std::endl;
  NumericMatrix truth  = RcppDeepState_NumericMatrix();
  qs::c_qsave(truth,"/home/akhila/fuzzer_packages/fuzzedpackages/survivalmodels/inst/testfiles/C_Akritas/inputs/truth.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "truth values: "<< truth << std::endl;
  NumericVector times  = RcppDeepState_NumericVector();
  qs::c_qsave(times,"/home/akhila/fuzzer_packages/fuzzedpackages/survivalmodels/inst/testfiles/C_Akritas/inputs/times.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "times values: "<< times << std::endl;
  NumericVector unique_times  = RcppDeepState_NumericVector();
  qs::c_qsave(unique_times,"/home/akhila/fuzzer_packages/fuzzedpackages/survivalmodels/inst/testfiles/C_Akritas/inputs/unique_times.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "unique_times values: "<< unique_times << std::endl;
  NumericVector FX_train  = RcppDeepState_NumericVector();
  qs::c_qsave(FX_train,"/home/akhila/fuzzer_packages/fuzzedpackages/survivalmodels/inst/testfiles/C_Akritas/inputs/FX_train.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "FX_train values: "<< FX_train << std::endl;
  NumericVector FX_predict  = RcppDeepState_NumericVector();
  qs::c_qsave(FX_predict,"/home/akhila/fuzzer_packages/fuzzedpackages/survivalmodels/inst/testfiles/C_Akritas/inputs/FX_predict.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "FX_predict values: "<< FX_predict << std::endl;
  NumericVector lambda(1);
  lambda[0]  = RcppDeepState_double();
  qs::c_qsave(lambda,"/home/akhila/fuzzer_packages/fuzzedpackages/survivalmodels/inst/testfiles/C_Akritas/inputs/lambda.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "lambda values: "<< lambda << std::endl;
  std::cout << "input ends" << std::endl;
  try{
    C_Akritas(truth,times,unique_times,FX_train,FX_predict,lambda[0]);
  }
  catch(Rcpp::exception& e){
    std::cout<<"Exception Handled"<<std::endl;
  }
}
