// AUTOMATICALLY GENERATED BY RCPPDEEPSTATE PLEASE DO NOT EDIT BY HAND, INSTEAD EDIT
// nodeVars_DeepState_TestHarness_generation.cpp and nodeVars_DeepState_TestHarness_checks.cpp

#include <fstream>
#include <RInside.h>
#include <iostream>
#include <RcppDeepState.h>
#include <qs.h>
#include <DeepState.hpp>

IntegerVector nodeVars(IntegerVector varnodes, int nrnodes, int p, IntegerVector parents, IntegerVector idcskeep, IntegerVector nodect, int rowoffset, IntegerVector nodevars);

TEST(iRF_deepstate_test,nodeVars_test){
  RInside R;
  std::cout << "input starts" << std::endl;
  IntegerVector varnodes  = RcppDeepState_IntegerVector();
  qs::c_qsave(varnodes,"/home/akhila/fuzzer_packages/fuzzedpackages/iRF/inst/testfiles/nodeVars/inputs/varnodes.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "varnodes values: "<< varnodes << std::endl;
  IntegerVector nrnodes(1);
  nrnodes[0]  = RcppDeepState_int();
  qs::c_qsave(nrnodes,"/home/akhila/fuzzer_packages/fuzzedpackages/iRF/inst/testfiles/nodeVars/inputs/nrnodes.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "nrnodes values: "<< nrnodes << std::endl;
  IntegerVector p(1);
  p[0]  = RcppDeepState_int();
  qs::c_qsave(p,"/home/akhila/fuzzer_packages/fuzzedpackages/iRF/inst/testfiles/nodeVars/inputs/p.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "p values: "<< p << std::endl;
  IntegerVector parents  = RcppDeepState_IntegerVector();
  qs::c_qsave(parents,"/home/akhila/fuzzer_packages/fuzzedpackages/iRF/inst/testfiles/nodeVars/inputs/parents.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "parents values: "<< parents << std::endl;
  IntegerVector idcskeep  = RcppDeepState_IntegerVector();
  qs::c_qsave(idcskeep,"/home/akhila/fuzzer_packages/fuzzedpackages/iRF/inst/testfiles/nodeVars/inputs/idcskeep.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "idcskeep values: "<< idcskeep << std::endl;
  IntegerVector nodect  = RcppDeepState_IntegerVector();
  qs::c_qsave(nodect,"/home/akhila/fuzzer_packages/fuzzedpackages/iRF/inst/testfiles/nodeVars/inputs/nodect.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "nodect values: "<< nodect << std::endl;
  IntegerVector rowoffset(1);
  rowoffset[0]  = RcppDeepState_int();
  qs::c_qsave(rowoffset,"/home/akhila/fuzzer_packages/fuzzedpackages/iRF/inst/testfiles/nodeVars/inputs/rowoffset.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "rowoffset values: "<< rowoffset << std::endl;
  IntegerVector nodevars  = RcppDeepState_IntegerVector();
  qs::c_qsave(nodevars,"/home/akhila/fuzzer_packages/fuzzedpackages/iRF/inst/testfiles/nodeVars/inputs/nodevars.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "nodevars values: "<< nodevars << std::endl;
  std::cout << "input ends" << std::endl;
  try{
    nodeVars(varnodes,nrnodes[0],p[0],parents,idcskeep,nodect,rowoffset[0],nodevars);
  }
  catch(Rcpp::exception& e){
    std::cout<<"Exception Handled"<<std::endl;
  }
}
