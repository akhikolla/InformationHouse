<?xml version="1.0"?>

<valgrindoutput>

<protocolversion>4</protocolversion>
<protocoltool>memcheck</protocoltool>

<preamble>
  <line>Memcheck, a memory error detector</line>
  <line>Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.</line>
  <line>Using Valgrind-3.15.0 and LibVEX; rerun with -h for copyright info</line>
  <line>Command: ./get_VM_C_DeepState_TestHarness --input_test_file /home/akhila/fuzzer_packages/fuzzedpackages/AGread/inst/testfiles/get_VM_C/get_VM_C_output/2131a2c23093496a2e805b98b816fda1fd290eb3.pass</line>
</preamble>

<pid>586479</pid>
<ppid>586478</ppid>
<tool>memcheck</tool>

<args>
  <vargv>
    <exe>/usr/bin/valgrind.bin</exe>
    <arg>--xml=yes</arg>
    <arg>--xml-file=/home/akhila/fuzzer_packages/fuzzedpackages/AGread/inst/testfiles/get_VM_C/get_VM_C_output/log_2131a2c23093496a2e805b98b816fda1fd290eb3/valgrind_log</arg>
    <arg>--tool=memcheck</arg>
    <arg>--leak-check=yes</arg>
  </vargv>
  <argv>
    <exe>./get_VM_C_DeepState_TestHarness</exe>
    <arg>--input_test_file</arg>
    <arg>/home/akhila/fuzzer_packages/fuzzedpackages/AGread/inst/testfiles/get_VM_C/get_VM_C_output/2131a2c23093496a2e805b98b816fda1fd290eb3.pass</arg>
  </argv>
</args>

<status>
  <state>RUNNING</state>
  <time>00:00:00:00.023 </time>
</status>

<error>
  <unique>0x0</unique>
  <tid>1</tid>
  <kind>UninitCondition</kind>
  <what>Conditional jump or move depends on uninitialised value(s)</what>
  <stack>
    <frame>
      <ip>0x4D39762</ip>
      <obj>/home/akhila/fuzzer_packages/fuzzedpackages/AGread/src/AGread.so</obj>
      <fn>operator[]</fn>
      <dir>/home/akhila/R/x86_64-pc-linux-gnu-library/4.0/Rcpp/include/Rcpp/sugar/block</dir>
      <file>Vectorized_Math.h</file>
      <line>38</line>
    </frame>
    <frame>
      <ip>0x4D39762</ip>
      <obj>/home/akhila/fuzzer_packages/fuzzedpackages/AGread/src/AGread.so</obj>
      <fn>import_expression&lt;Rcpp::sugar::Vectorized&lt;sqrt, true, Rcpp::Vector&lt;14, Rcpp::PreserveStorage&gt; &gt; &gt;</fn>
      <dir>/home/akhila/R/x86_64-pc-linux-gnu-library/4.0/Rcpp/include/Rcpp/vector</dir>
      <file>Vector.h</file>
      <line>1085</line>
    </frame>
    <frame>
      <ip>0x4D39762</ip>
      <obj>/home/akhila/fuzzer_packages/fuzzedpackages/AGread/src/AGread.so</obj>
      <fn>assign_sugar_expression&lt;Rcpp::sugar::Vectorized&lt;sqrt, true, Rcpp::Vector&lt;14, Rcpp::PreserveStorage&gt; &gt; &gt;</fn>
      <dir>/home/akhila/R/x86_64-pc-linux-gnu-library/4.0/Rcpp/include/Rcpp/vector</dir>
      <file>Vector.h</file>
      <line>1042</line>
    </frame>
    <frame>
      <ip>0x4D39762</ip>
      <obj>/home/akhila/fuzzer_packages/fuzzedpackages/AGread/src/AGread.so</obj>
      <fn>assign_object&lt;Rcpp::sugar::Vectorized&lt;sqrt, true, Rcpp::Vector&lt;14, Rcpp::PreserveStorage&gt; &gt; &gt;</fn>
      <dir>/home/akhila/R/x86_64-pc-linux-gnu-library/4.0/Rcpp/include/Rcpp/vector</dir>
      <file>Vector.h</file>
      <line>1054</line>
    </frame>
    <frame>
      <ip>0x4D39762</ip>
      <obj>/home/akhila/fuzzer_packages/fuzzedpackages/AGread/src/AGread.so</obj>
      <fn>operator=&lt;Rcpp::sugar::Vectorized&lt;sqrt, true, Rcpp::Vector&lt;14, Rcpp::PreserveStorage&gt; &gt; &gt;</fn>
      <dir>/home/akhila/R/x86_64-pc-linux-gnu-library/4.0/Rcpp/include/Rcpp/vector</dir>
      <file>Vector.h</file>
      <line>248</line>
    </frame>
    <frame>
      <ip>0x4D39762</ip>
      <obj>/home/akhila/fuzzer_packages/fuzzedpackages/AGread/src/AGread.so</obj>
      <fn>get_VM_C(Rcpp::Vector&lt;14, Rcpp::PreserveStorage&gt;, Rcpp::Vector&lt;14, Rcpp::PreserveStorage&gt;, Rcpp::Vector&lt;14, Rcpp::PreserveStorage&gt;)</fn>
      <dir>/home/akhila/fuzzer_packages/fuzzedpackages/AGread/src</dir>
      <file>get_VM_C.cpp</file>
      <line>26</line>
    </frame>
    <frame>
      <ip>0x40A0F7</ip>
      <obj>/home/akhila/fuzzer_packages/fuzzedpackages/AGread/inst/testfiles/get_VM_C/get_VM_C_DeepState_TestHarness</obj>
      <fn>DeepState_Test_AGread_deepstate_test_get_VM_C_test()</fn>
      <dir>/home/akhila/fuzzer_packages/fuzzedpackages/AGread/inst/testfiles/get_VM_C</dir>
      <file>get_VM_C_DeepState_TestHarness.cpp</file>
      <line>30</line>
    </frame>
    <frame>
      <ip>0x409B58</ip>
      <obj>/home/akhila/fuzzer_packages/fuzzedpackages/AGread/inst/testfiles/get_VM_C/get_VM_C_DeepState_TestHarness</obj>
      <fn>DeepState_Run_AGread_deepstate_test_get_VM_C_test()</fn>
      <dir>/home/akhila/fuzzer_packages/fuzzedpackages/AGread/inst/testfiles/get_VM_C</dir>
      <file>get_VM_C_DeepState_TestHarness.cpp</file>
      <line>13</line>
    </frame>
    <frame>
      <ip>0x41CF68</ip>
      <obj>/home/akhila/fuzzer_packages/fuzzedpackages/AGread/inst/testfiles/get_VM_C/get_VM_C_DeepState_TestHarness</obj>
      <fn>DeepState_RunTest.isra.0</fn>
    </frame>
    <frame>
      <ip>0x41D209</ip>
      <obj>/home/akhila/fuzzer_packages/fuzzedpackages/AGread/inst/testfiles/get_VM_C/get_VM_C_DeepState_TestHarness</obj>
      <fn>DeepState_ForkAndRunTest</fn>
    </frame>
    <frame>
      <ip>0x41D2E4</ip>
      <obj>/home/akhila/fuzzer_packages/fuzzedpackages/AGread/inst/testfiles/get_VM_C/get_VM_C_DeepState_TestHarness</obj>
      <fn>DeepState_RunSavedTestCase</fn>
    </frame>
    <frame>
      <ip>0x407665</ip>
      <obj>/home/akhila/fuzzer_packages/fuzzedpackages/AGread/inst/testfiles/get_VM_C/get_VM_C_DeepState_TestHarness</obj>
      <fn>main</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x1</unique>
  <tid>1</tid>
  <kind>UninitCondition</kind>
  <what>Conditional jump or move depends on uninitialised value(s)</what>
  <stack>
    <frame>
      <ip>0x4D39724</ip>
      <obj>/home/akhila/fuzzer_packages/fuzzedpackages/AGread/src/AGread.so</obj>
      <fn>operator[]</fn>
      <dir>/home/akhila/R/x86_64-pc-linux-gnu-library/4.0/Rcpp/include/Rcpp/sugar/block</dir>
      <file>Vectorized_Math.h</file>
      <line>38</line>
    </frame>
    <frame>
      <ip>0x4D39724</ip>
      <obj>/home/akhila/fuzzer_packages/fuzzedpackages/AGread/src/AGread.so</obj>
      <fn>import_expression&lt;Rcpp::sugar::Vectorized&lt;sqrt, true, Rcpp::Vector&lt;14, Rcpp::PreserveStorage&gt; &gt; &gt;</fn>
      <dir>/home/akhila/R/x86_64-pc-linux-gnu-library/4.0/Rcpp/include/Rcpp/vector</dir>
      <file>Vector.h</file>
      <line>1085</line>
    </frame>
    <frame>
      <ip>0x4D39724</ip>
      <obj>/home/akhila/fuzzer_packages/fuzzedpackages/AGread/src/AGread.so</obj>
      <fn>assign_sugar_expression&lt;Rcpp::sugar::Vectorized&lt;sqrt, true, Rcpp::Vector&lt;14, Rcpp::PreserveStorage&gt; &gt; &gt;</fn>
      <dir>/home/akhila/R/x86_64-pc-linux-gnu-library/4.0/Rcpp/include/Rcpp/vector</dir>
      <file>Vector.h</file>
      <line>1042</line>
    </frame>
    <frame>
      <ip>0x4D39724</ip>
      <obj>/home/akhila/fuzzer_packages/fuzzedpackages/AGread/src/AGread.so</obj>
      <fn>assign_object&lt;Rcpp::sugar::Vectorized&lt;sqrt, true, Rcpp::Vector&lt;14, Rcpp::PreserveStorage&gt; &gt; &gt;</fn>
      <dir>/home/akhila/R/x86_64-pc-linux-gnu-library/4.0/Rcpp/include/Rcpp/vector</dir>
      <file>Vector.h</file>
      <line>1054</line>
    </frame>
    <frame>
      <ip>0x4D39724</ip>
      <obj>/home/akhila/fuzzer_packages/fuzzedpackages/AGread/src/AGread.so</obj>
      <fn>operator=&lt;Rcpp::sugar::Vectorized&lt;sqrt, true, Rcpp::Vector&lt;14, Rcpp::PreserveStorage&gt; &gt; &gt;</fn>
      <dir>/home/akhila/R/x86_64-pc-linux-gnu-library/4.0/Rcpp/include/Rcpp/vector</dir>
      <file>Vector.h</file>
      <line>248</line>
    </frame>
    <frame>
      <ip>0x4D39724</ip>
      <obj>/home/akhila/fuzzer_packages/fuzzedpackages/AGread/src/AGread.so</obj>
      <fn>get_VM_C(Rcpp::Vector&lt;14, Rcpp::PreserveStorage&gt;, Rcpp::Vector&lt;14, Rcpp::PreserveStorage&gt;, Rcpp::Vector&lt;14, Rcpp::PreserveStorage&gt;)</fn>
      <dir>/home/akhila/fuzzer_packages/fuzzedpackages/AGread/src</dir>
      <file>get_VM_C.cpp</file>
      <line>26</line>
    </frame>
    <frame>
      <ip>0x40A0F7</ip>
      <obj>/home/akhila/fuzzer_packages/fuzzedpackages/AGread/inst/testfiles/get_VM_C/get_VM_C_DeepState_TestHarness</obj>
      <fn>DeepState_Test_AGread_deepstate_test_get_VM_C_test()</fn>
      <dir>/home/akhila/fuzzer_packages/fuzzedpackages/AGread/inst/testfiles/get_VM_C</dir>
      <file>get_VM_C_DeepState_TestHarness.cpp</file>
      <line>30</line>
    </frame>
    <frame>
      <ip>0x409B58</ip>
      <obj>/home/akhila/fuzzer_packages/fuzzedpackages/AGread/inst/testfiles/get_VM_C/get_VM_C_DeepState_TestHarness</obj>
      <fn>DeepState_Run_AGread_deepstate_test_get_VM_C_test()</fn>
      <dir>/home/akhila/fuzzer_packages/fuzzedpackages/AGread/inst/testfiles/get_VM_C</dir>
      <file>get_VM_C_DeepState_TestHarness.cpp</file>
      <line>13</line>
    </frame>
    <frame>
      <ip>0x41CF68</ip>
      <obj>/home/akhila/fuzzer_packages/fuzzedpackages/AGread/inst/testfiles/get_VM_C/get_VM_C_DeepState_TestHarness</obj>
      <fn>DeepState_RunTest.isra.0</fn>
    </frame>
    <frame>
      <ip>0x41D209</ip>
      <obj>/home/akhila/fuzzer_packages/fuzzedpackages/AGread/inst/testfiles/get_VM_C/get_VM_C_DeepState_TestHarness</obj>
      <fn>DeepState_ForkAndRunTest</fn>
    </frame>
    <frame>
      <ip>0x41D2E4</ip>
      <obj>/home/akhila/fuzzer_packages/fuzzedpackages/AGread/inst/testfiles/get_VM_C/get_VM_C_DeepState_TestHarness</obj>
      <fn>DeepState_RunSavedTestCase</fn>
    </frame>
    <frame>
      <ip>0x407665</ip>
      <obj>/home/akhila/fuzzer_packages/fuzzedpackages/AGread/inst/testfiles/get_VM_C/get_VM_C_DeepState_TestHarness</obj>
      <fn>main</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x3</unique>
  <tid>1</tid>
  <kind>UninitCondition</kind>
  <what>Conditional jump or move depends on uninitialised value(s)</what>
  <stack>
    <frame>
      <ip>0x4D39743</ip>
      <obj>/home/akhila/fuzzer_packages/fuzzedpackages/AGread/src/AGread.so</obj>
      <fn>operator[]</fn>
      <dir>/home/akhila/R/x86_64-pc-linux-gnu-library/4.0/Rcpp/include/Rcpp/sugar/block</dir>
      <file>Vectorized_Math.h</file>
      <line>38</line>
    </frame>
    <frame>
      <ip>0x4D39743</ip>
      <obj>/home/akhila/fuzzer_packages/fuzzedpackages/AGread/src/AGread.so</obj>
      <fn>import_expression&lt;Rcpp::sugar::Vectorized&lt;sqrt, true, Rcpp::Vector&lt;14, Rcpp::PreserveStorage&gt; &gt; &gt;</fn>
      <dir>/home/akhila/R/x86_64-pc-linux-gnu-library/4.0/Rcpp/include/Rcpp/vector</dir>
      <file>Vector.h</file>
      <line>1085</line>
    </frame>
    <frame>
      <ip>0x4D39743</ip>
      <obj>/home/akhila/fuzzer_packages/fuzzedpackages/AGread/src/AGread.so</obj>
      <fn>assign_sugar_expression&lt;Rcpp::sugar::Vectorized&lt;sqrt, true, Rcpp::Vector&lt;14, Rcpp::PreserveStorage&gt; &gt; &gt;</fn>
      <dir>/home/akhila/R/x86_64-pc-linux-gnu-library/4.0/Rcpp/include/Rcpp/vector</dir>
      <file>Vector.h</file>
      <line>1042</line>
    </frame>
    <frame>
      <ip>0x4D39743</ip>
      <obj>/home/akhila/fuzzer_packages/fuzzedpackages/AGread/src/AGread.so</obj>
      <fn>assign_object&lt;Rcpp::sugar::Vectorized&lt;sqrt, true, Rcpp::Vector&lt;14, Rcpp::PreserveStorage&gt; &gt; &gt;</fn>
      <dir>/home/akhila/R/x86_64-pc-linux-gnu-library/4.0/Rcpp/include/Rcpp/vector</dir>
      <file>Vector.h</file>
      <line>1054</line>
    </frame>
    <frame>
      <ip>0x4D39743</ip>
      <obj>/home/akhila/fuzzer_packages/fuzzedpackages/AGread/src/AGread.so</obj>
      <fn>operator=&lt;Rcpp::sugar::Vectorized&lt;sqrt, true, Rcpp::Vector&lt;14, Rcpp::PreserveStorage&gt; &gt; &gt;</fn>
      <dir>/home/akhila/R/x86_64-pc-linux-gnu-library/4.0/Rcpp/include/Rcpp/vector</dir>
      <file>Vector.h</file>
      <line>248</line>
    </frame>
    <frame>
      <ip>0x4D39743</ip>
      <obj>/home/akhila/fuzzer_packages/fuzzedpackages/AGread/src/AGread.so</obj>
      <fn>get_VM_C(Rcpp::Vector&lt;14, Rcpp::PreserveStorage&gt;, Rcpp::Vector&lt;14, Rcpp::PreserveStorage&gt;, Rcpp::Vector&lt;14, Rcpp::PreserveStorage&gt;)</fn>
      <dir>/home/akhila/fuzzer_packages/fuzzedpackages/AGread/src</dir>
      <file>get_VM_C.cpp</file>
      <line>26</line>
    </frame>
    <frame>
      <ip>0x40A0F7</ip>
      <obj>/home/akhila/fuzzer_packages/fuzzedpackages/AGread/inst/testfiles/get_VM_C/get_VM_C_DeepState_TestHarness</obj>
      <fn>DeepState_Test_AGread_deepstate_test_get_VM_C_test()</fn>
      <dir>/home/akhila/fuzzer_packages/fuzzedpackages/AGread/inst/testfiles/get_VM_C</dir>
      <file>get_VM_C_DeepState_TestHarness.cpp</file>
      <line>30</line>
    </frame>
    <frame>
      <ip>0x409B58</ip>
      <obj>/home/akhila/fuzzer_packages/fuzzedpackages/AGread/inst/testfiles/get_VM_C/get_VM_C_DeepState_TestHarness</obj>
      <fn>DeepState_Run_AGread_deepstate_test_get_VM_C_test()</fn>
      <dir>/home/akhila/fuzzer_packages/fuzzedpackages/AGread/inst/testfiles/get_VM_C</dir>
      <file>get_VM_C_DeepState_TestHarness.cpp</file>
      <line>13</line>
    </frame>
    <frame>
      <ip>0x41CF68</ip>
      <obj>/home/akhila/fuzzer_packages/fuzzedpackages/AGread/inst/testfiles/get_VM_C/get_VM_C_DeepState_TestHarness</obj>
      <fn>DeepState_RunTest.isra.0</fn>
    </frame>
    <frame>
      <ip>0x41D209</ip>
      <obj>/home/akhila/fuzzer_packages/fuzzedpackages/AGread/inst/testfiles/get_VM_C/get_VM_C_DeepState_TestHarness</obj>
      <fn>DeepState_ForkAndRunTest</fn>
    </frame>
    <frame>
      <ip>0x41D2E4</ip>
      <obj>/home/akhila/fuzzer_packages/fuzzedpackages/AGread/inst/testfiles/get_VM_C/get_VM_C_DeepState_TestHarness</obj>
      <fn>DeepState_RunSavedTestCase</fn>
    </frame>
    <frame>
      <ip>0x407665</ip>
      <obj>/home/akhila/fuzzer_packages/fuzzedpackages/AGread/inst/testfiles/get_VM_C/get_VM_C_DeepState_TestHarness</obj>
      <fn>main</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x5</unique>
  <tid>1</tid>
  <kind>UninitCondition</kind>
  <what>Conditional jump or move depends on uninitialised value(s)</what>
  <stack>
    <frame>
      <ip>0x4D39706</ip>
      <obj>/home/akhila/fuzzer_packages/fuzzedpackages/AGread/src/AGread.so</obj>
      <fn>operator[]</fn>
      <dir>/home/akhila/R/x86_64-pc-linux-gnu-library/4.0/Rcpp/include/Rcpp/sugar/block</dir>
      <file>Vectorized_Math.h</file>
      <line>38</line>
    </frame>
    <frame>
      <ip>0x4D39706</ip>
      <obj>/home/akhila/fuzzer_packages/fuzzedpackages/AGread/src/AGread.so</obj>
      <fn>import_expression&lt;Rcpp::sugar::Vectorized&lt;sqrt, true, Rcpp::Vector&lt;14, Rcpp::PreserveStorage&gt; &gt; &gt;</fn>
      <dir>/home/akhila/R/x86_64-pc-linux-gnu-library/4.0/Rcpp/include/Rcpp/vector</dir>
      <file>Vector.h</file>
      <line>1085</line>
    </frame>
    <frame>
      <ip>0x4D39706</ip>
      <obj>/home/akhila/fuzzer_packages/fuzzedpackages/AGread/src/AGread.so</obj>
      <fn>assign_sugar_expression&lt;Rcpp::sugar::Vectorized&lt;sqrt, true, Rcpp::Vector&lt;14, Rcpp::PreserveStorage&gt; &gt; &gt;</fn>
      <dir>/home/akhila/R/x86_64-pc-linux-gnu-library/4.0/Rcpp/include/Rcpp/vector</dir>
      <file>Vector.h</file>
      <line>1042</line>
    </frame>
    <frame>
      <ip>0x4D39706</ip>
      <obj>/home/akhila/fuzzer_packages/fuzzedpackages/AGread/src/AGread.so</obj>
      <fn>assign_object&lt;Rcpp::sugar::Vectorized&lt;sqrt, true, Rcpp::Vector&lt;14, Rcpp::PreserveStorage&gt; &gt; &gt;</fn>
      <dir>/home/akhila/R/x86_64-pc-linux-gnu-library/4.0/Rcpp/include/Rcpp/vector</dir>
      <file>Vector.h</file>
      <line>1054</line>
    </frame>
    <frame>
      <ip>0x4D39706</ip>
      <obj>/home/akhila/fuzzer_packages/fuzzedpackages/AGread/src/AGread.so</obj>
      <fn>operator=&lt;Rcpp::sugar::Vectorized&lt;sqrt, true, Rcpp::Vector&lt;14, Rcpp::PreserveStorage&gt; &gt; &gt;</fn>
      <dir>/home/akhila/R/x86_64-pc-linux-gnu-library/4.0/Rcpp/include/Rcpp/vector</dir>
      <file>Vector.h</file>
      <line>248</line>
    </frame>
    <frame>
      <ip>0x4D39706</ip>
      <obj>/home/akhila/fuzzer_packages/fuzzedpackages/AGread/src/AGread.so</obj>
      <fn>get_VM_C(Rcpp::Vector&lt;14, Rcpp::PreserveStorage&gt;, Rcpp::Vector&lt;14, Rcpp::PreserveStorage&gt;, Rcpp::Vector&lt;14, Rcpp::PreserveStorage&gt;)</fn>
      <dir>/home/akhila/fuzzer_packages/fuzzedpackages/AGread/src</dir>
      <file>get_VM_C.cpp</file>
      <line>26</line>
    </frame>
    <frame>
      <ip>0x40A0F7</ip>
      <obj>/home/akhila/fuzzer_packages/fuzzedpackages/AGread/inst/testfiles/get_VM_C/get_VM_C_DeepState_TestHarness</obj>
      <fn>DeepState_Test_AGread_deepstate_test_get_VM_C_test()</fn>
      <dir>/home/akhila/fuzzer_packages/fuzzedpackages/AGread/inst/testfiles/get_VM_C</dir>
      <file>get_VM_C_DeepState_TestHarness.cpp</file>
      <line>30</line>
    </frame>
    <frame>
      <ip>0x409B58</ip>
      <obj>/home/akhila/fuzzer_packages/fuzzedpackages/AGread/inst/testfiles/get_VM_C/get_VM_C_DeepState_TestHarness</obj>
      <fn>DeepState_Run_AGread_deepstate_test_get_VM_C_test()</fn>
      <dir>/home/akhila/fuzzer_packages/fuzzedpackages/AGread/inst/testfiles/get_VM_C</dir>
      <file>get_VM_C_DeepState_TestHarness.cpp</file>
      <line>13</line>
    </frame>
    <frame>
      <ip>0x41CF68</ip>
      <obj>/home/akhila/fuzzer_packages/fuzzedpackages/AGread/inst/testfiles/get_VM_C/get_VM_C_DeepState_TestHarness</obj>
      <fn>DeepState_RunTest.isra.0</fn>
    </frame>
    <frame>
      <ip>0x41D209</ip>
      <obj>/home/akhila/fuzzer_packages/fuzzedpackages/AGread/inst/testfiles/get_VM_C/get_VM_C_DeepState_TestHarness</obj>
      <fn>DeepState_ForkAndRunTest</fn>
    </frame>
    <frame>
      <ip>0x41D2E4</ip>
      <obj>/home/akhila/fuzzer_packages/fuzzedpackages/AGread/inst/testfiles/get_VM_C/get_VM_C_DeepState_TestHarness</obj>
      <fn>DeepState_RunSavedTestCase</fn>
    </frame>
    <frame>
      <ip>0x407665</ip>
      <obj>/home/akhila/fuzzer_packages/fuzzedpackages/AGread/inst/testfiles/get_VM_C/get_VM_C_DeepState_TestHarness</obj>
      <fn>main</fn>
    </frame>
  </stack>
</error>


<status>
  <state>FINISHED</state>
  <time>00:00:00:07.288 </time>
</status>

<errorcounts>
  <pair>
    <count>3</count>
    <unique>0x1</unique>
  </pair>
  <pair>
    <count>1</count>
    <unique>0x5</unique>
  </pair>
  <pair>
    <count>2</count>
    <unique>0x0</unique>
  </pair>
  <pair>
    <count>1</count>
    <unique>0x3</unique>
  </pair>
</errorcounts>

<suppcounts>
</suppcounts>

</valgrindoutput>


<status>
  <state>FINISHED</state>
  <time>00:00:00:07.766 </time>
</status>

<errorcounts>
</errorcounts>

<suppcounts>
</suppcounts>

</valgrindoutput>

