// AUTOMATICALLY GENERATED BY RCPPDEEPSTATE PLEASE DO NOT EDIT BY HAND, INSTEAD EDIT
// stat_poisson_cpp_DeepState_TestHarness_generation.cpp and stat_poisson_cpp_DeepState_TestHarness_checks.cpp

#include <fstream>
#include <RInside.h>
#include <iostream>
#include <RcppDeepState.h>
#include <qs.h>
#include <DeepState.hpp>

NumericVector stat_poisson_cpp(NumericVector yin, NumericVector yout, NumericVector ein, NumericVector eout, double a, NumericVector shape);

TEST(smerc_deepstate_test,stat_poisson_cpp_test){
  RInside R;
  std::cout << "input starts" << std::endl;
  NumericVector yin  = RcppDeepState_NumericVector();
  qs::c_qsave(yin,"/home/akhila/fuzzer_packages/fuzzedpackages/smerc/inst/testfiles/stat_poisson_cpp/inputs/yin.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "yin values: "<< yin << std::endl;
  NumericVector yout  = RcppDeepState_NumericVector();
  qs::c_qsave(yout,"/home/akhila/fuzzer_packages/fuzzedpackages/smerc/inst/testfiles/stat_poisson_cpp/inputs/yout.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "yout values: "<< yout << std::endl;
  NumericVector ein  = RcppDeepState_NumericVector();
  qs::c_qsave(ein,"/home/akhila/fuzzer_packages/fuzzedpackages/smerc/inst/testfiles/stat_poisson_cpp/inputs/ein.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "ein values: "<< ein << std::endl;
  NumericVector eout  = RcppDeepState_NumericVector();
  qs::c_qsave(eout,"/home/akhila/fuzzer_packages/fuzzedpackages/smerc/inst/testfiles/stat_poisson_cpp/inputs/eout.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "eout values: "<< eout << std::endl;
  NumericVector a(1);
  a[0]  = RcppDeepState_double();
  qs::c_qsave(a,"/home/akhila/fuzzer_packages/fuzzedpackages/smerc/inst/testfiles/stat_poisson_cpp/inputs/a.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "a values: "<< a << std::endl;
  NumericVector shape  = RcppDeepState_NumericVector();
  qs::c_qsave(shape,"/home/akhila/fuzzer_packages/fuzzedpackages/smerc/inst/testfiles/stat_poisson_cpp/inputs/shape.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "shape values: "<< shape << std::endl;
  std::cout << "input ends" << std::endl;
  try{
    stat_poisson_cpp(yin,yout,ein,eout,a[0],shape);
  }
  catch(Rcpp::exception& e){
    std::cout<<"Exception Handled"<<std::endl;
  }
}
