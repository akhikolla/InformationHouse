// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <Rcpp.h>

using namespace Rcpp;

// haversine
Rcpp::NumericVector haversine(Rcpp::NumericVector lat1, Rcpp::NumericVector lon1, Rcpp::NumericVector lat2, Rcpp::NumericVector lon2);
RcppExport SEXP _hans_haversine(SEXP lat1SEXP, SEXP lon1SEXP, SEXP lat2SEXP, SEXP lon2SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< Rcpp::NumericVector >::type lat1(lat1SEXP);
    Rcpp::traits::input_parameter< Rcpp::NumericVector >::type lon1(lon1SEXP);
    Rcpp::traits::input_parameter< Rcpp::NumericVector >::type lat2(lat2SEXP);
    Rcpp::traits::input_parameter< Rcpp::NumericVector >::type lon2(lon2SEXP);
    rcpp_result_gen = Rcpp::wrap(haversine(lat1, lon1, lat2, lon2));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_hans_haversine", (DL_FUNC) &_hans_haversine, 4},
    {NULL, NULL, 0}
};

RcppExport void R_init_hans(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
