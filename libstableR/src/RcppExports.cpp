// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <RcppGSL.h>
#include <Rcpp.h>

using namespace Rcpp;

// stable_pdf
NumericVector stable_pdf(NumericVector x, NumericVector pars, int parametrization, double tol);
RcppExport SEXP _libstableR_stable_pdf(SEXP xSEXP, SEXP parsSEXP, SEXP parametrizationSEXP, SEXP tolSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type x(xSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type pars(parsSEXP);
    Rcpp::traits::input_parameter< int >::type parametrization(parametrizationSEXP);
    Rcpp::traits::input_parameter< double >::type tol(tolSEXP);
    rcpp_result_gen = Rcpp::wrap(stable_pdf(x, pars, parametrization, tol));
    return rcpp_result_gen;
END_RCPP
}
// stable_cdf
NumericVector stable_cdf(NumericVector x, NumericVector pars, int parametrization, double tol);
RcppExport SEXP _libstableR_stable_cdf(SEXP xSEXP, SEXP parsSEXP, SEXP parametrizationSEXP, SEXP tolSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type x(xSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type pars(parsSEXP);
    Rcpp::traits::input_parameter< int >::type parametrization(parametrizationSEXP);
    Rcpp::traits::input_parameter< double >::type tol(tolSEXP);
    rcpp_result_gen = Rcpp::wrap(stable_cdf(x, pars, parametrization, tol));
    return rcpp_result_gen;
END_RCPP
}
// stable_q
NumericVector stable_q(NumericVector p, NumericVector pars, int parametrization, double tol);
RcppExport SEXP _libstableR_stable_q(SEXP pSEXP, SEXP parsSEXP, SEXP parametrizationSEXP, SEXP tolSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type p(pSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type pars(parsSEXP);
    Rcpp::traits::input_parameter< int >::type parametrization(parametrizationSEXP);
    Rcpp::traits::input_parameter< double >::type tol(tolSEXP);
    rcpp_result_gen = Rcpp::wrap(stable_q(p, pars, parametrization, tol));
    return rcpp_result_gen;
END_RCPP
}
// stable_rnd
NumericVector stable_rnd(int N, NumericVector pars, int parametrization);
RcppExport SEXP _libstableR_stable_rnd(SEXP NSEXP, SEXP parsSEXP, SEXP parametrizationSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< int >::type N(NSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type pars(parsSEXP);
    Rcpp::traits::input_parameter< int >::type parametrization(parametrizationSEXP);
    rcpp_result_gen = Rcpp::wrap(stable_rnd(N, pars, parametrization));
    return rcpp_result_gen;
END_RCPP
}
// stable_fit_init
NumericVector stable_fit_init(NumericVector rnd, int parametrization);
RcppExport SEXP _libstableR_stable_fit_init(SEXP rndSEXP, SEXP parametrizationSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type rnd(rndSEXP);
    Rcpp::traits::input_parameter< int >::type parametrization(parametrizationSEXP);
    rcpp_result_gen = Rcpp::wrap(stable_fit_init(rnd, parametrization));
    return rcpp_result_gen;
END_RCPP
}
// stable_fit_koutrouvelis
NumericVector stable_fit_koutrouvelis(NumericVector rnd, NumericVector pars_init, int parametrization);
RcppExport SEXP _libstableR_stable_fit_koutrouvelis(SEXP rndSEXP, SEXP pars_initSEXP, SEXP parametrizationSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type rnd(rndSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type pars_init(pars_initSEXP);
    Rcpp::traits::input_parameter< int >::type parametrization(parametrizationSEXP);
    rcpp_result_gen = Rcpp::wrap(stable_fit_koutrouvelis(rnd, pars_init, parametrization));
    return rcpp_result_gen;
END_RCPP
}
// stable_fit_mle
NumericVector stable_fit_mle(NumericVector rnd, NumericVector pars_init, int parametrization);
RcppExport SEXP _libstableR_stable_fit_mle(SEXP rndSEXP, SEXP pars_initSEXP, SEXP parametrizationSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type rnd(rndSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type pars_init(pars_initSEXP);
    Rcpp::traits::input_parameter< int >::type parametrization(parametrizationSEXP);
    rcpp_result_gen = Rcpp::wrap(stable_fit_mle(rnd, pars_init, parametrization));
    return rcpp_result_gen;
END_RCPP
}
// stable_fit_mle2d
NumericVector stable_fit_mle2d(NumericVector rnd, NumericVector pars_init, int parametrization);
RcppExport SEXP _libstableR_stable_fit_mle2d(SEXP rndSEXP, SEXP pars_initSEXP, SEXP parametrizationSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type rnd(rndSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type pars_init(pars_initSEXP);
    Rcpp::traits::input_parameter< int >::type parametrization(parametrizationSEXP);
    rcpp_result_gen = Rcpp::wrap(stable_fit_mle2d(rnd, pars_init, parametrization));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_libstableR_stable_pdf", (DL_FUNC) &_libstableR_stable_pdf, 4},
    {"_libstableR_stable_cdf", (DL_FUNC) &_libstableR_stable_cdf, 4},
    {"_libstableR_stable_q", (DL_FUNC) &_libstableR_stable_q, 4},
    {"_libstableR_stable_rnd", (DL_FUNC) &_libstableR_stable_rnd, 3},
    {"_libstableR_stable_fit_init", (DL_FUNC) &_libstableR_stable_fit_init, 2},
    {"_libstableR_stable_fit_koutrouvelis", (DL_FUNC) &_libstableR_stable_fit_koutrouvelis, 3},
    {"_libstableR_stable_fit_mle", (DL_FUNC) &_libstableR_stable_fit_mle, 3},
    {"_libstableR_stable_fit_mle2d", (DL_FUNC) &_libstableR_stable_fit_mle2d, 3},
    {NULL, NULL, 0}
};

RcppExport void R_init_libstableR(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
