// AUTOMATICALLY GENERATED BY RCPPDEEPSTATE PLEASE DO NOT EDIT BY HAND, INSTEAD EDIT
// MGTriC2_DeepState_TestHarness_generation.cpp and MGTriC2_DeepState_TestHarness_checks.cpp

#include <fstream>
#include <RInside.h>
#include <iostream>
#include <RcppDeepState.h>
#include <qs.h>
#include <DeepState.hpp>

NumericVector MGTriC2(NumericVector t, NumericVector min, NumericVector max, NumericVector mode);

TEST(triangulr_deepstate_test,MGTriC2_test){
  RInside R;
  std::cout << "input starts" << std::endl;
  NumericVector t  = RcppDeepState_NumericVector();
  qs::c_qsave(t,"/home/akhila/fuzzer_packages/fuzzedpackages/triangulr/inst/testfiles/MGTriC2/inputs/t.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "t values: "<< t << std::endl;
  NumericVector min  = RcppDeepState_NumericVector();
  qs::c_qsave(min,"/home/akhila/fuzzer_packages/fuzzedpackages/triangulr/inst/testfiles/MGTriC2/inputs/min.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "min values: "<< min << std::endl;
  NumericVector max  = RcppDeepState_NumericVector();
  qs::c_qsave(max,"/home/akhila/fuzzer_packages/fuzzedpackages/triangulr/inst/testfiles/MGTriC2/inputs/max.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "max values: "<< max << std::endl;
  NumericVector mode  = RcppDeepState_NumericVector();
  qs::c_qsave(mode,"/home/akhila/fuzzer_packages/fuzzedpackages/triangulr/inst/testfiles/MGTriC2/inputs/mode.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "mode values: "<< mode << std::endl;
  std::cout << "input ends" << std::endl;
  try{
    MGTriC2(t,min,max,mode);
  }
  catch(Rcpp::exception& e){
    std::cout<<"Exception Handled"<<std::endl;
  }
}
