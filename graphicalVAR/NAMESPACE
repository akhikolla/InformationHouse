useDynLib(graphicalVAR, .registration = TRUE)
export(simMLgvar)
export(mlGraphicalVAR)
export(graphicalVAR)
export(graphicalVARsim)
importFrom(Rcpp, evalCpp)
importFrom(glasso, glasso)
importFrom(glmnet, glmnet)
importFrom(mvtnorm, rmvnorm)
importFrom(qgraph, qgraph)
importFrom(qgraph, EBICglasso)
importFrom(qgraph, averageLayout)
importFrom(Matrix, forceSymmetric)
importFrom(qgraph, getWmat)
S3method(plot, graphicalVAR)
S3method(plot, gVARmodel)
S3method(print, graphicalVAR)
S3method(summary, graphicalVAR)
import(dplyr)
importFrom(igraph, get.adjacency)
importFrom(igraph, watts.strogatz.game)
importFrom(igraph, watts.strogatz.game)
export(randomGVARmodel)
#export(VARglm)
#importFrom(sn, rmsn)

importFrom("graphics", "layout", "par", "text")
importFrom("methods", "is")
importFrom("stats", "BIC", "coef", "cov2cor", "glm", "runif", "sd")
importFrom("utils", "setTxtProgressBar", "txtProgressBar")

  importFrom("stats", "cov")
  importFrom("utils", "capture.output")
  