<?xml version="1.0"?>

<valgrindoutput>

<protocolversion>4</protocolversion>
<protocoltool>memcheck</protocoltool>

<preamble>
  <line>Memcheck, a memory error detector</line>
  <line>Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.</line>
  <line>Using Valgrind-3.15.0 and LibVEX; rerun with -h for copyright info</line>
  <line>Command: ./cross_var_Cpp_DeepState_TestHarness --input_test_file /home/akhila/fuzzer_packages/fuzzedpackages/nandb/inst/testfiles/cross_var_Cpp/cross_var_Cpp_output/e3c3384d6207bf3334a1710c01bd68b4b77ffcc6.pass</line>
</preamble>

<pid>627174</pid>
<ppid>627173</ppid>
<tool>memcheck</tool>

<args>
  <vargv>
    <exe>/usr/bin/valgrind.bin</exe>
    <arg>--xml=yes</arg>
    <arg>--xml-file=/home/akhila/fuzzer_packages/fuzzedpackages/nandb/inst/testfiles/cross_var_Cpp/cross_var_Cpp_output/log_e3c3384d6207bf3334a1710c01bd68b4b77ffcc6/valgrind_log</arg>
    <arg>--tool=memcheck</arg>
    <arg>--leak-check=yes</arg>
  </vargv>
  <argv>
    <exe>./cross_var_Cpp_DeepState_TestHarness</exe>
    <arg>--input_test_file</arg>
    <arg>/home/akhila/fuzzer_packages/fuzzedpackages/nandb/inst/testfiles/cross_var_Cpp/cross_var_Cpp_output/e3c3384d6207bf3334a1710c01bd68b4b77ffcc6.pass</arg>
  </argv>
</args>

<status>
  <state>RUNNING</state>
  <time>00:00:00:00.023 </time>
</status>

<error>
  <unique>0x0</unique>
  <tid>1</tid>
  <kind>UninitCondition</kind>
  <what>Conditional jump or move depends on uninitialised value(s)</what>
  <stack>
    <frame>
      <ip>0x4D2DA08</ip>
      <obj>/home/akhila/fuzzer_packages/fuzzedpackages/nandb/src/nandb.so</obj>
      <fn>get</fn>
      <dir>/home/akhila/R/x86_64-pc-linux-gnu-library/4.0/Rcpp/include/Rcpp/sugar/functions</dir>
      <file>mean.h</file>
      <line>41</line>
    </frame>
    <frame>
      <ip>0x4D2DA08</ip>
      <obj>/home/akhila/fuzzer_packages/fuzzedpackages/nandb/src/nandb.so</obj>
      <fn>operator double</fn>
      <dir>/home/akhila/R/x86_64-pc-linux-gnu-library/4.0/Rcpp/include/Rcpp/sugar/functions</dir>
      <file>Lazy.h</file>
      <line>31</line>
    </frame>
    <frame>
      <ip>0x4D2DA08</ip>
      <obj>/home/akhila/fuzzer_packages/fuzzedpackages/nandb/src/nandb.so</obj>
      <fn>cross_var_Cpp(Rcpp::Vector&lt;14, Rcpp::PreserveStorage&gt;, Rcpp::Vector&lt;14, Rcpp::PreserveStorage&gt;)</fn>
      <dir>/home/akhila/fuzzer_packages/fuzzedpackages/nandb/src</dir>
      <file>cross_var.cpp</file>
      <line>6</line>
    </frame>
    <frame>
      <ip>0x409F35</ip>
      <obj>/home/akhila/fuzzer_packages/fuzzedpackages/nandb/inst/testfiles/cross_var_Cpp/cross_var_Cpp_DeepState_TestHarness</obj>
      <fn>DeepState_Test_nandb_deepstate_test_cross_var_Cpp_test()</fn>
      <dir>/home/akhila/fuzzer_packages/fuzzedpackages/nandb/inst/testfiles/cross_var_Cpp</dir>
      <file>cross_var_Cpp_DeepState_TestHarness.cpp</file>
      <line>26</line>
    </frame>
    <frame>
      <ip>0x409B58</ip>
      <obj>/home/akhila/fuzzer_packages/fuzzedpackages/nandb/inst/testfiles/cross_var_Cpp/cross_var_Cpp_DeepState_TestHarness</obj>
      <fn>DeepState_Run_nandb_deepstate_test_cross_var_Cpp_test()</fn>
      <dir>/home/akhila/fuzzer_packages/fuzzedpackages/nandb/inst/testfiles/cross_var_Cpp</dir>
      <file>cross_var_Cpp_DeepState_TestHarness.cpp</file>
      <line>13</line>
    </frame>
    <frame>
      <ip>0x41CCD8</ip>
      <obj>/home/akhila/fuzzer_packages/fuzzedpackages/nandb/inst/testfiles/cross_var_Cpp/cross_var_Cpp_DeepState_TestHarness</obj>
      <fn>DeepState_RunTest.isra.0</fn>
    </frame>
    <frame>
      <ip>0x41CF79</ip>
      <obj>/home/akhila/fuzzer_packages/fuzzedpackages/nandb/inst/testfiles/cross_var_Cpp/cross_var_Cpp_DeepState_TestHarness</obj>
      <fn>DeepState_ForkAndRunTest</fn>
    </frame>
    <frame>
      <ip>0x41D054</ip>
      <obj>/home/akhila/fuzzer_packages/fuzzedpackages/nandb/inst/testfiles/cross_var_Cpp/cross_var_Cpp_DeepState_TestHarness</obj>
      <fn>DeepState_RunSavedTestCase</fn>
    </frame>
    <frame>
      <ip>0x407665</ip>
      <obj>/home/akhila/fuzzer_packages/fuzzedpackages/nandb/inst/testfiles/cross_var_Cpp/cross_var_Cpp_DeepState_TestHarness</obj>
      <fn>main</fn>
    </frame>
  </stack>
</error>


<status>
  <state>FINISHED</state>
  <time>00:00:00:07.225 </time>
</status>

<errorcounts>
  <pair>
    <count>1</count>
    <unique>0x0</unique>
  </pair>
</errorcounts>

<suppcounts>
</suppcounts>

</valgrindoutput>


<status>
  <state>FINISHED</state>
  <time>00:00:00:07.684 </time>
</status>

<errorcounts>
</errorcounts>

<suppcounts>
</suppcounts>

</valgrindoutput>

