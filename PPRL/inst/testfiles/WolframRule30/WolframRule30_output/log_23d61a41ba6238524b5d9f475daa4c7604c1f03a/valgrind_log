<?xml version="1.0"?>

<valgrindoutput>

<protocolversion>4</protocolversion>
<protocoltool>memcheck</protocoltool>

<preamble>
  <line>Memcheck, a memory error detector</line>
  <line>Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.</line>
  <line>Using Valgrind-3.15.0 and LibVEX; rerun with -h for copyright info</line>
  <line>Command: ./WolframRule30_DeepState_TestHarness --input_test_file /home/akhila/fuzzer_packages/fuzzedpackages/PPRL/inst/testfiles/WolframRule30/WolframRule30_output/23d61a41ba6238524b5d9f475daa4c7604c1f03a.crash</line>
</preamble>

<pid>464121</pid>
<ppid>464120</ppid>
<tool>memcheck</tool>

<args>
  <vargv>
    <exe>/usr/bin/valgrind.bin</exe>
    <arg>--xml=yes</arg>
    <arg>--xml-file=/home/akhila/fuzzer_packages/fuzzedpackages/PPRL/inst/testfiles/WolframRule30/WolframRule30_output/log_23d61a41ba6238524b5d9f475daa4c7604c1f03a/valgrind_log</arg>
    <arg>--tool=memcheck</arg>
    <arg>--leak-check=yes</arg>
  </vargv>
  <argv>
    <exe>./WolframRule30_DeepState_TestHarness</exe>
    <arg>--input_test_file</arg>
    <arg>/home/akhila/fuzzer_packages/fuzzedpackages/PPRL/inst/testfiles/WolframRule30/WolframRule30_output/23d61a41ba6238524b5d9f475daa4c7604c1f03a.crash</arg>
  </argv>
</args>

<status>
  <state>RUNNING</state>
  <time>00:00:00:00.024 </time>
</status>

<error>
  <unique>0x0</unique>
  <tid>1</tid>
  <kind>InvalidRead</kind>
  <what>Invalid read of size 8</what>
  <stack>
    <frame>
      <ip>0x4D9AFE2</ip>
      <obj>/home/akhila/fuzzer_packages/fuzzedpackages/PPRL/src/PPRL.so</obj>
      <fn>strcpy</fn>
      <dir>/usr/include/x86_64-linux-gnu/bits</dir>
      <file>string_fortified.h</file>
      <line>90</line>
    </frame>
    <frame>
      <ip>0x4D9AFE2</ip>
      <obj>/home/akhila/fuzzer_packages/fuzzedpackages/PPRL/src/PPRL.so</obj>
      <fn>WolframRule30(Rcpp::Vector&lt;16, Rcpp::PreserveStorage&gt;, Rcpp::Vector&lt;16, Rcpp::PreserveStorage&gt;, int, int)</fn>
      <dir>/home/akhila/fuzzer_packages/fuzzedpackages/PPRL/src</dir>
      <file>WolframRule30.cpp</file>
      <line>29</line>
    </frame>
    <frame>
      <ip>0x40A353</ip>
      <obj>/home/akhila/fuzzer_packages/fuzzedpackages/PPRL/inst/testfiles/WolframRule30/WolframRule30_DeepState_TestHarness</obj>
      <fn>DeepState_Test_PPRL_deepstate_test_WolframRule30_test()</fn>
      <dir>/home/akhila/fuzzer_packages/fuzzedpackages/PPRL/inst/testfiles/WolframRule30</dir>
      <file>WolframRule30_DeepState_TestHarness.cpp</file>
      <line>36</line>
    </frame>
    <frame>
      <ip>0x409B48</ip>
      <obj>/home/akhila/fuzzer_packages/fuzzedpackages/PPRL/inst/testfiles/WolframRule30/WolframRule30_DeepState_TestHarness</obj>
      <fn>DeepState_Run_PPRL_deepstate_test_WolframRule30_test()</fn>
      <dir>/home/akhila/fuzzer_packages/fuzzedpackages/PPRL/inst/testfiles/WolframRule30</dir>
      <file>WolframRule30_DeepState_TestHarness.cpp</file>
      <line>13</line>
    </frame>
    <frame>
      <ip>0x41D6D8</ip>
      <obj>/home/akhila/fuzzer_packages/fuzzedpackages/PPRL/inst/testfiles/WolframRule30/WolframRule30_DeepState_TestHarness</obj>
      <fn>DeepState_RunTest.isra.0</fn>
    </frame>
    <frame>
      <ip>0x41D979</ip>
      <obj>/home/akhila/fuzzer_packages/fuzzedpackages/PPRL/inst/testfiles/WolframRule30/WolframRule30_DeepState_TestHarness</obj>
      <fn>DeepState_ForkAndRunTest</fn>
    </frame>
    <frame>
      <ip>0x41DA54</ip>
      <obj>/home/akhila/fuzzer_packages/fuzzedpackages/PPRL/inst/testfiles/WolframRule30/WolframRule30_DeepState_TestHarness</obj>
      <fn>DeepState_RunSavedTestCase</fn>
    </frame>
    <frame>
      <ip>0x407655</ip>
      <obj>/home/akhila/fuzzer_packages/fuzzedpackages/PPRL/inst/testfiles/WolframRule30/WolframRule30_DeepState_TestHarness</obj>
      <fn>main</fn>
    </frame>
  </stack>
  <auxwhat>Address 0xa7de090 is 0 bytes after a block of size 2,080 alloc'd</auxwhat>
  <stack>
    <frame>
      <ip>0x483BE63</ip>
      <obj>/usr/lib/x86_64-linux-gnu/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4D9AD47</ip>
      <obj>/home/akhila/fuzzer_packages/fuzzedpackages/PPRL/src/PPRL.so</obj>
      <fn>allocate</fn>
      <dir>/usr/include/c++/9/ext</dir>
      <file>new_allocator.h</file>
      <line>114</line>
    </frame>
    <frame>
      <ip>0x4D9AD47</ip>
      <obj>/home/akhila/fuzzer_packages/fuzzedpackages/PPRL/src/PPRL.so</obj>
      <fn>allocate</fn>
      <dir>/usr/include/c++/9/bits</dir>
      <file>alloc_traits.h</file>
      <line>444</line>
    </frame>
    <frame>
      <ip>0x4D9AD47</ip>
      <obj>/home/akhila/fuzzer_packages/fuzzedpackages/PPRL/src/PPRL.so</obj>
      <fn>_M_allocate</fn>
      <dir>/usr/include/c++/9/bits</dir>
      <file>stl_vector.h</file>
      <line>343</line>
    </frame>
    <frame>
      <ip>0x4D9AD47</ip>
      <obj>/home/akhila/fuzzer_packages/fuzzedpackages/PPRL/src/PPRL.so</obj>
      <fn>_M_create_storage</fn>
      <dir>/usr/include/c++/9/bits</dir>
      <file>stl_vector.h</file>
      <line>358</line>
    </frame>
    <frame>
      <ip>0x4D9AD47</ip>
      <obj>/home/akhila/fuzzer_packages/fuzzedpackages/PPRL/src/PPRL.so</obj>
      <fn>_Vector_base</fn>
      <dir>/usr/include/c++/9/bits</dir>
      <file>stl_vector.h</file>
      <line>302</line>
    </frame>
    <frame>
      <ip>0x4D9AD47</ip>
      <obj>/home/akhila/fuzzer_packages/fuzzedpackages/PPRL/src/PPRL.so</obj>
      <fn>vector</fn>
      <dir>/usr/include/c++/9/bits</dir>
      <file>stl_vector.h</file>
      <line>508</line>
    </frame>
    <frame>
      <ip>0x4D9AD47</ip>
      <obj>/home/akhila/fuzzer_packages/fuzzedpackages/PPRL/src/PPRL.so</obj>
      <fn>get</fn>
      <dir>/home/akhila/R/x86_64-pc-linux-gnu-library/4.0/Rcpp/include/Rcpp/internal</dir>
      <file>Exporter.h</file>
      <line>46</line>
    </frame>
    <frame>
      <ip>0x4D9AD47</ip>
      <obj>/home/akhila/fuzzer_packages/fuzzedpackages/PPRL/src/PPRL.so</obj>
      <fn>as&lt;std::vector&lt;std::__cxx11::basic_string&lt;char&gt; &gt; &gt;</fn>
      <dir>/home/akhila/R/x86_64-pc-linux-gnu-library/4.0/Rcpp/include/Rcpp</dir>
      <file>as.h</file>
      <line>89</line>
    </frame>
    <frame>
      <ip>0x4D9AD47</ip>
      <obj>/home/akhila/fuzzer_packages/fuzzedpackages/PPRL/src/PPRL.so</obj>
      <fn>as&lt;std::vector&lt;std::__cxx11::basic_string&lt;char&gt; &gt; &gt;</fn>
      <dir>/home/akhila/R/x86_64-pc-linux-gnu-library/4.0/Rcpp/include/Rcpp</dir>
      <file>as.h</file>
      <line>152</line>
    </frame>
    <frame>
      <ip>0x4D9AD47</ip>
      <obj>/home/akhila/fuzzer_packages/fuzzedpackages/PPRL/src/PPRL.so</obj>
      <fn>WolframRule30(Rcpp::Vector&lt;16, Rcpp::PreserveStorage&gt;, Rcpp::Vector&lt;16, Rcpp::PreserveStorage&gt;, int, int)</fn>
      <dir>/home/akhila/fuzzer_packages/fuzzedpackages/PPRL/src</dir>
      <file>WolframRule30.cpp</file>
      <line>19</line>
    </frame>
    <frame>
      <ip>0x40A353</ip>
      <obj>/home/akhila/fuzzer_packages/fuzzedpackages/PPRL/inst/testfiles/WolframRule30/WolframRule30_DeepState_TestHarness</obj>
      <fn>DeepState_Test_PPRL_deepstate_test_WolframRule30_test()</fn>
      <dir>/home/akhila/fuzzer_packages/fuzzedpackages/PPRL/inst/testfiles/WolframRule30</dir>
      <file>WolframRule30_DeepState_TestHarness.cpp</file>
      <line>36</line>
    </frame>
    <frame>
      <ip>0x409B48</ip>
      <obj>/home/akhila/fuzzer_packages/fuzzedpackages/PPRL/inst/testfiles/WolframRule30/WolframRule30_DeepState_TestHarness</obj>
      <fn>DeepState_Run_PPRL_deepstate_test_WolframRule30_test()</fn>
      <dir>/home/akhila/fuzzer_packages/fuzzedpackages/PPRL/inst/testfiles/WolframRule30</dir>
      <file>WolframRule30_DeepState_TestHarness.cpp</file>
      <line>13</line>
    </frame>
    <frame>
      <ip>0x41D6D8</ip>
      <obj>/home/akhila/fuzzer_packages/fuzzedpackages/PPRL/inst/testfiles/WolframRule30/WolframRule30_DeepState_TestHarness</obj>
      <fn>DeepState_RunTest.isra.0</fn>
    </frame>
    <frame>
      <ip>0x41D979</ip>
      <obj>/home/akhila/fuzzer_packages/fuzzedpackages/PPRL/inst/testfiles/WolframRule30/WolframRule30_DeepState_TestHarness</obj>
      <fn>DeepState_ForkAndRunTest</fn>
    </frame>
    <frame>
      <ip>0x41DA54</ip>
      <obj>/home/akhila/fuzzer_packages/fuzzedpackages/PPRL/inst/testfiles/WolframRule30/WolframRule30_DeepState_TestHarness</obj>
      <fn>DeepState_RunSavedTestCase</fn>
    </frame>
    <frame>
      <ip>0x407655</ip>
      <obj>/home/akhila/fuzzer_packages/fuzzedpackages/PPRL/inst/testfiles/WolframRule30/WolframRule30_DeepState_TestHarness</obj>
      <fn>main</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x1</unique>
  <tid>1</tid>
  <kind>InvalidRead</kind>
  <what>Invalid read of size 1</what>
  <stack>
    <frame>
      <ip>0x483F094</ip>
      <obj>/usr/lib/x86_64-linux-gnu/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>strcpy</fn>
    </frame>
    <frame>
      <ip>0x4D9AFEA</ip>
      <obj>/home/akhila/fuzzer_packages/fuzzedpackages/PPRL/src/PPRL.so</obj>
      <fn>strcpy</fn>
      <dir>/usr/include/x86_64-linux-gnu/bits</dir>
      <file>string_fortified.h</file>
      <line>90</line>
    </frame>
    <frame>
      <ip>0x4D9AFEA</ip>
      <obj>/home/akhila/fuzzer_packages/fuzzedpackages/PPRL/src/PPRL.so</obj>
      <fn>WolframRule30(Rcpp::Vector&lt;16, Rcpp::PreserveStorage&gt;, Rcpp::Vector&lt;16, Rcpp::PreserveStorage&gt;, int, int)</fn>
      <dir>/home/akhila/fuzzer_packages/fuzzedpackages/PPRL/src</dir>
      <file>WolframRule30.cpp</file>
      <line>29</line>
    </frame>
    <frame>
      <ip>0x40A353</ip>
      <obj>/home/akhila/fuzzer_packages/fuzzedpackages/PPRL/inst/testfiles/WolframRule30/WolframRule30_DeepState_TestHarness</obj>
      <fn>DeepState_Test_PPRL_deepstate_test_WolframRule30_test()</fn>
      <dir>/home/akhila/fuzzer_packages/fuzzedpackages/PPRL/inst/testfiles/WolframRule30</dir>
      <file>WolframRule30_DeepState_TestHarness.cpp</file>
      <line>36</line>
    </frame>
    <frame>
      <ip>0x409B48</ip>
      <obj>/home/akhila/fuzzer_packages/fuzzedpackages/PPRL/inst/testfiles/WolframRule30/WolframRule30_DeepState_TestHarness</obj>
      <fn>DeepState_Run_PPRL_deepstate_test_WolframRule30_test()</fn>
      <dir>/home/akhila/fuzzer_packages/fuzzedpackages/PPRL/inst/testfiles/WolframRule30</dir>
      <file>WolframRule30_DeepState_TestHarness.cpp</file>
      <line>13</line>
    </frame>
    <frame>
      <ip>0x41D6D8</ip>
      <obj>/home/akhila/fuzzer_packages/fuzzedpackages/PPRL/inst/testfiles/WolframRule30/WolframRule30_DeepState_TestHarness</obj>
      <fn>DeepState_RunTest.isra.0</fn>
    </frame>
    <frame>
      <ip>0x41D979</ip>
      <obj>/home/akhila/fuzzer_packages/fuzzedpackages/PPRL/inst/testfiles/WolframRule30/WolframRule30_DeepState_TestHarness</obj>
      <fn>DeepState_ForkAndRunTest</fn>
    </frame>
    <frame>
      <ip>0x41DA54</ip>
      <obj>/home/akhila/fuzzer_packages/fuzzedpackages/PPRL/inst/testfiles/WolframRule30/WolframRule30_DeepState_TestHarness</obj>
      <fn>DeepState_RunSavedTestCase</fn>
    </frame>
    <frame>
      <ip>0x407655</ip>
      <obj>/home/akhila/fuzzer_packages/fuzzedpackages/PPRL/inst/testfiles/WolframRule30/WolframRule30_DeepState_TestHarness</obj>
      <fn>main</fn>
    </frame>
  </stack>
  <auxwhat>Address 0x1200000011 is not stack'd, malloc'd or (recently) free'd</auxwhat>
</error>

<fatal_signal>
  <tid>1</tid>
  <signo>11</signo>
  <signame>SIGSEGV</signame>
  <sicode>1</sicode>
  <event>Access not within mapped region</event>
  <siaddr>0x1200000011</siaddr>
  <stack>
    <frame>
      <ip>0x483F094</ip>
      <obj>/usr/lib/x86_64-linux-gnu/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>strcpy</fn>
    </frame>
    <frame>
      <ip>0x4D9AFEA</ip>
      <obj>/home/akhila/fuzzer_packages/fuzzedpackages/PPRL/src/PPRL.so</obj>
      <fn>strcpy</fn>
      <dir>/usr/include/x86_64-linux-gnu/bits</dir>
      <file>string_fortified.h</file>
      <line>90</line>
    </frame>
    <frame>
      <ip>0x4D9AFEA</ip>
      <obj>/home/akhila/fuzzer_packages/fuzzedpackages/PPRL/src/PPRL.so</obj>
      <fn>WolframRule30(Rcpp::Vector&lt;16, Rcpp::PreserveStorage&gt;, Rcpp::Vector&lt;16, Rcpp::PreserveStorage&gt;, int, int)</fn>
      <dir>/home/akhila/fuzzer_packages/fuzzedpackages/PPRL/src</dir>
      <file>WolframRule30.cpp</file>
      <line>29</line>
    </frame>
    <frame>
      <ip>0x40A353</ip>
      <obj>/home/akhila/fuzzer_packages/fuzzedpackages/PPRL/inst/testfiles/WolframRule30/WolframRule30_DeepState_TestHarness</obj>
      <fn>DeepState_Test_PPRL_deepstate_test_WolframRule30_test()</fn>
      <dir>/home/akhila/fuzzer_packages/fuzzedpackages/PPRL/inst/testfiles/WolframRule30</dir>
      <file>WolframRule30_DeepState_TestHarness.cpp</file>
      <line>36</line>
    </frame>
    <frame>
      <ip>0x409B48</ip>
      <obj>/home/akhila/fuzzer_packages/fuzzedpackages/PPRL/inst/testfiles/WolframRule30/WolframRule30_DeepState_TestHarness</obj>
      <fn>DeepState_Run_PPRL_deepstate_test_WolframRule30_test()</fn>
      <dir>/home/akhila/fuzzer_packages/fuzzedpackages/PPRL/inst/testfiles/WolframRule30</dir>
      <file>WolframRule30_DeepState_TestHarness.cpp</file>
      <line>13</line>
    </frame>
    <frame>
      <ip>0x41D6D8</ip>
      <obj>/home/akhila/fuzzer_packages/fuzzedpackages/PPRL/inst/testfiles/WolframRule30/WolframRule30_DeepState_TestHarness</obj>
      <fn>DeepState_RunTest.isra.0</fn>
    </frame>
    <frame>
      <ip>0x41D979</ip>
      <obj>/home/akhila/fuzzer_packages/fuzzedpackages/PPRL/inst/testfiles/WolframRule30/WolframRule30_DeepState_TestHarness</obj>
      <fn>DeepState_ForkAndRunTest</fn>
    </frame>
    <frame>
      <ip>0x41DA54</ip>
      <obj>/home/akhila/fuzzer_packages/fuzzedpackages/PPRL/inst/testfiles/WolframRule30/WolframRule30_DeepState_TestHarness</obj>
      <fn>DeepState_RunSavedTestCase</fn>
    </frame>
    <frame>
      <ip>0x407655</ip>
      <obj>/home/akhila/fuzzer_packages/fuzzedpackages/PPRL/inst/testfiles/WolframRule30/WolframRule30_DeepState_TestHarness</obj>
      <fn>main</fn>
    </frame>
  </stack>
</fatal_signal>


<status>
  <state>FINISHED</state>
  <time>00:01:00:23.620 </time>
</status>

<error>
  <unique>0x77</unique>
  <tid>1</tid>
  <kind>Leak_DefinitelyLost</kind>
  <xwhat>
    <text>88 bytes in 1 blocks are definitely lost in loss record 118 of 1,376</text>
    <leakedbytes>88</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x483BE63</ip>
      <obj>/usr/lib/x86_64-linux-gnu/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4D9AD96</ip>
      <obj>/home/akhila/fuzzer_packages/fuzzedpackages/PPRL/src/PPRL.so</obj>
      <fn>WolframRule30(Rcpp::Vector&lt;16, Rcpp::PreserveStorage&gt;, Rcpp::Vector&lt;16, Rcpp::PreserveStorage&gt;, int, int)</fn>
      <dir>/home/akhila/fuzzer_packages/fuzzedpackages/PPRL/src</dir>
      <file>WolframRule30.cpp</file>
      <line>21</line>
    </frame>
    <frame>
      <ip>0x40A353</ip>
      <obj>/home/akhila/fuzzer_packages/fuzzedpackages/PPRL/inst/testfiles/WolframRule30/WolframRule30_DeepState_TestHarness</obj>
      <fn>DeepState_Test_PPRL_deepstate_test_WolframRule30_test()</fn>
      <dir>/home/akhila/fuzzer_packages/fuzzedpackages/PPRL/inst/testfiles/WolframRule30</dir>
      <file>WolframRule30_DeepState_TestHarness.cpp</file>
      <line>36</line>
    </frame>
    <frame>
      <ip>0x409B48</ip>
      <obj>/home/akhila/fuzzer_packages/fuzzedpackages/PPRL/inst/testfiles/WolframRule30/WolframRule30_DeepState_TestHarness</obj>
      <fn>DeepState_Run_PPRL_deepstate_test_WolframRule30_test()</fn>
      <dir>/home/akhila/fuzzer_packages/fuzzedpackages/PPRL/inst/testfiles/WolframRule30</dir>
      <file>WolframRule30_DeepState_TestHarness.cpp</file>
      <line>13</line>
    </frame>
    <frame>
      <ip>0x41D6D8</ip>
      <obj>/home/akhila/fuzzer_packages/fuzzedpackages/PPRL/inst/testfiles/WolframRule30/WolframRule30_DeepState_TestHarness</obj>
      <fn>DeepState_RunTest.isra.0</fn>
    </frame>
    <frame>
      <ip>0x41D979</ip>
      <obj>/home/akhila/fuzzer_packages/fuzzedpackages/PPRL/inst/testfiles/WolframRule30/WolframRule30_DeepState_TestHarness</obj>
      <fn>DeepState_ForkAndRunTest</fn>
    </frame>
    <frame>
      <ip>0x41DA54</ip>
      <obj>/home/akhila/fuzzer_packages/fuzzedpackages/PPRL/inst/testfiles/WolframRule30/WolframRule30_DeepState_TestHarness</obj>
      <fn>DeepState_RunSavedTestCase</fn>
    </frame>
    <frame>
      <ip>0x407655</ip>
      <obj>/home/akhila/fuzzer_packages/fuzzedpackages/PPRL/inst/testfiles/WolframRule30/WolframRule30_DeepState_TestHarness</obj>
      <fn>main</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x55e</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>190,943,336 bytes in 1 blocks are possibly lost in loss record 1,373 of 1,376</text>
    <leakedbytes>190943336</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x483C583</ip>
      <obj>/usr/lib/x86_64-linux-gnu/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>operator new[](unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4D9ADF1</ip>
      <obj>/home/akhila/fuzzer_packages/fuzzedpackages/PPRL/src/PPRL.so</obj>
      <fn>allocate</fn>
      <dir>/home/akhila/fuzzer_packages/fuzzedpackages/PPRL/src</dir>
      <file>CLK.h</file>
      <line>79</line>
    </frame>
    <frame>
      <ip>0x4D9ADF1</ip>
      <obj>/home/akhila/fuzzer_packages/fuzzedpackages/PPRL/src/PPRL.so</obj>
      <fn>CLK</fn>
      <dir>/home/akhila/fuzzer_packages/fuzzedpackages/PPRL/src</dir>
      <file>CLK.h</file>
      <line>142</line>
    </frame>
    <frame>
      <ip>0x4D9ADF1</ip>
      <obj>/home/akhila/fuzzer_packages/fuzzedpackages/PPRL/src/PPRL.so</obj>
      <fn>WolframRule30(Rcpp::Vector&lt;16, Rcpp::PreserveStorage&gt;, Rcpp::Vector&lt;16, Rcpp::PreserveStorage&gt;, int, int)</fn>
      <dir>/home/akhila/fuzzer_packages/fuzzedpackages/PPRL/src</dir>
      <file>WolframRule30.cpp</file>
      <line>21</line>
    </frame>
    <frame>
      <ip>0x40A353</ip>
      <obj>/home/akhila/fuzzer_packages/fuzzedpackages/PPRL/inst/testfiles/WolframRule30/WolframRule30_DeepState_TestHarness</obj>
      <fn>DeepState_Test_PPRL_deepstate_test_WolframRule30_test()</fn>
      <dir>/home/akhila/fuzzer_packages/fuzzedpackages/PPRL/inst/testfiles/WolframRule30</dir>
      <file>WolframRule30_DeepState_TestHarness.cpp</file>
      <line>36</line>
    </frame>
    <frame>
      <ip>0x409B48</ip>
      <obj>/home/akhila/fuzzer_packages/fuzzedpackages/PPRL/inst/testfiles/WolframRule30/WolframRule30_DeepState_TestHarness</obj>
      <fn>DeepState_Run_PPRL_deepstate_test_WolframRule30_test()</fn>
      <dir>/home/akhila/fuzzer_packages/fuzzedpackages/PPRL/inst/testfiles/WolframRule30</dir>
      <file>WolframRule30_DeepState_TestHarness.cpp</file>
      <line>13</line>
    </frame>
    <frame>
      <ip>0x41D6D8</ip>
      <obj>/home/akhila/fuzzer_packages/fuzzedpackages/PPRL/inst/testfiles/WolframRule30/WolframRule30_DeepState_TestHarness</obj>
      <fn>DeepState_RunTest.isra.0</fn>
    </frame>
    <frame>
      <ip>0x41D979</ip>
      <obj>/home/akhila/fuzzer_packages/fuzzedpackages/PPRL/inst/testfiles/WolframRule30/WolframRule30_DeepState_TestHarness</obj>
      <fn>DeepState_ForkAndRunTest</fn>
    </frame>
    <frame>
      <ip>0x41DA54</ip>
      <obj>/home/akhila/fuzzer_packages/fuzzedpackages/PPRL/inst/testfiles/WolframRule30/WolframRule30_DeepState_TestHarness</obj>
      <fn>DeepState_RunSavedTestCase</fn>
    </frame>
    <frame>
      <ip>0x407655</ip>
      <obj>/home/akhila/fuzzer_packages/fuzzedpackages/PPRL/inst/testfiles/WolframRule30/WolframRule30_DeepState_TestHarness</obj>
      <fn>main</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x55f</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>1,527,546,684 bytes in 1 blocks are possibly lost in loss record 1,374 of 1,376</text>
    <leakedbytes>1527546684</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x483C583</ip>
      <obj>/usr/lib/x86_64-linux-gnu/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>operator new[](unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4D9AF27</ip>
      <obj>/home/akhila/fuzzer_packages/fuzzedpackages/PPRL/src/PPRL.so</obj>
      <fn>WolframRule30(Rcpp::Vector&lt;16, Rcpp::PreserveStorage&gt;, Rcpp::Vector&lt;16, Rcpp::PreserveStorage&gt;, int, int)</fn>
      <dir>/home/akhila/fuzzer_packages/fuzzedpackages/PPRL/src</dir>
      <file>WolframRule30.cpp</file>
      <line>23</line>
    </frame>
    <frame>
      <ip>0x40A353</ip>
      <obj>/home/akhila/fuzzer_packages/fuzzedpackages/PPRL/inst/testfiles/WolframRule30/WolframRule30_DeepState_TestHarness</obj>
      <fn>DeepState_Test_PPRL_deepstate_test_WolframRule30_test()</fn>
      <dir>/home/akhila/fuzzer_packages/fuzzedpackages/PPRL/inst/testfiles/WolframRule30</dir>
      <file>WolframRule30_DeepState_TestHarness.cpp</file>
      <line>36</line>
    </frame>
    <frame>
      <ip>0x409B48</ip>
      <obj>/home/akhila/fuzzer_packages/fuzzedpackages/PPRL/inst/testfiles/WolframRule30/WolframRule30_DeepState_TestHarness</obj>
      <fn>DeepState_Run_PPRL_deepstate_test_WolframRule30_test()</fn>
      <dir>/home/akhila/fuzzer_packages/fuzzedpackages/PPRL/inst/testfiles/WolframRule30</dir>
      <file>WolframRule30_DeepState_TestHarness.cpp</file>
      <line>13</line>
    </frame>
    <frame>
      <ip>0x41D6D8</ip>
      <obj>/home/akhila/fuzzer_packages/fuzzedpackages/PPRL/inst/testfiles/WolframRule30/WolframRule30_DeepState_TestHarness</obj>
      <fn>DeepState_RunTest.isra.0</fn>
    </frame>
    <frame>
      <ip>0x41D979</ip>
      <obj>/home/akhila/fuzzer_packages/fuzzedpackages/PPRL/inst/testfiles/WolframRule30/WolframRule30_DeepState_TestHarness</obj>
      <fn>DeepState_ForkAndRunTest</fn>
    </frame>
    <frame>
      <ip>0x41DA54</ip>
      <obj>/home/akhila/fuzzer_packages/fuzzedpackages/PPRL/inst/testfiles/WolframRule30/WolframRule30_DeepState_TestHarness</obj>
      <fn>DeepState_RunSavedTestCase</fn>
    </frame>
    <frame>
      <ip>0x407655</ip>
      <obj>/home/akhila/fuzzer_packages/fuzzedpackages/PPRL/inst/testfiles/WolframRule30/WolframRule30_DeepState_TestHarness</obj>
      <fn>main</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x560</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>1,527,546,684 bytes in 1 blocks are possibly lost in loss record 1,375 of 1,376</text>
    <leakedbytes>1527546684</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x483C583</ip>
      <obj>/usr/lib/x86_64-linux-gnu/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>operator new[](unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4D9AF32</ip>
      <obj>/home/akhila/fuzzer_packages/fuzzedpackages/PPRL/src/PPRL.so</obj>
      <fn>WolframRule30(Rcpp::Vector&lt;16, Rcpp::PreserveStorage&gt;, Rcpp::Vector&lt;16, Rcpp::PreserveStorage&gt;, int, int)</fn>
      <dir>/home/akhila/fuzzer_packages/fuzzedpackages/PPRL/src</dir>
      <file>WolframRule30.cpp</file>
      <line>24</line>
    </frame>
    <frame>
      <ip>0x40A353</ip>
      <obj>/home/akhila/fuzzer_packages/fuzzedpackages/PPRL/inst/testfiles/WolframRule30/WolframRule30_DeepState_TestHarness</obj>
      <fn>DeepState_Test_PPRL_deepstate_test_WolframRule30_test()</fn>
      <dir>/home/akhila/fuzzer_packages/fuzzedpackages/PPRL/inst/testfiles/WolframRule30</dir>
      <file>WolframRule30_DeepState_TestHarness.cpp</file>
      <line>36</line>
    </frame>
    <frame>
      <ip>0x409B48</ip>
      <obj>/home/akhila/fuzzer_packages/fuzzedpackages/PPRL/inst/testfiles/WolframRule30/WolframRule30_DeepState_TestHarness</obj>
      <fn>DeepState_Run_PPRL_deepstate_test_WolframRule30_test()</fn>
      <dir>/home/akhila/fuzzer_packages/fuzzedpackages/PPRL/inst/testfiles/WolframRule30</dir>
      <file>WolframRule30_DeepState_TestHarness.cpp</file>
      <line>13</line>
    </frame>
    <frame>
      <ip>0x41D6D8</ip>
      <obj>/home/akhila/fuzzer_packages/fuzzedpackages/PPRL/inst/testfiles/WolframRule30/WolframRule30_DeepState_TestHarness</obj>
      <fn>DeepState_RunTest.isra.0</fn>
    </frame>
    <frame>
      <ip>0x41D979</ip>
      <obj>/home/akhila/fuzzer_packages/fuzzedpackages/PPRL/inst/testfiles/WolframRule30/WolframRule30_DeepState_TestHarness</obj>
      <fn>DeepState_ForkAndRunTest</fn>
    </frame>
    <frame>
      <ip>0x41DA54</ip>
      <obj>/home/akhila/fuzzer_packages/fuzzedpackages/PPRL/inst/testfiles/WolframRule30/WolframRule30_DeepState_TestHarness</obj>
      <fn>DeepState_RunSavedTestCase</fn>
    </frame>
    <frame>
      <ip>0x407655</ip>
      <obj>/home/akhila/fuzzer_packages/fuzzedpackages/PPRL/inst/testfiles/WolframRule30/WolframRule30_DeepState_TestHarness</obj>
      <fn>main</fn>
    </frame>
  </stack>
</error>

<errorcounts>
  <pair>
    <count>1</count>
    <unique>0x1</unique>
  </pair>
  <pair>
    <count>1</count>
    <unique>0x0</unique>
  </pair>
</errorcounts>

<suppcounts>
</suppcounts>

</valgrindoutput>


<status>
  <state>FINISHED</state>
  <time>00:01:00:29.344 </time>
</status>

<errorcounts>
</errorcounts>

<suppcounts>
</suppcounts>

</valgrindoutput>

