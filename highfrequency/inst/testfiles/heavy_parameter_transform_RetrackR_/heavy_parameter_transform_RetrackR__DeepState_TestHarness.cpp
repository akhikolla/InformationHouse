// AUTOMATICALLY GENERATED BY RCPPDEEPSTATE PLEASE DO NOT EDIT BY HAND, INSTEAD EDIT
// heavy_parameter_transform_RetrackR__DeepState_TestHarness_generation.cpp and heavy_parameter_transform_RetrackR__DeepState_TestHarness_checks.cpp

#include <fstream>
#include <RInside.h>
#include <iostream>
#include <RcppDeepState.h>
#include <qs.h>
#include <DeepState.hpp>

List heavy_parameter_transform_RetrackR_(NumericVector parameters, int K, IntegerVector p, IntegerVector q, NumericVector means, NumericVector O, NumericVector A, NumericVector B, IntegerVector pMax1, IntegerVector qMax1);

TEST(highfrequency_deepstate_test,heavy_parameter_transform_RetrackR__test){
  RInside R;
  std::cout << "input starts" << std::endl;
  NumericVector parameters  = RcppDeepState_NumericVector();
  qs::c_qsave(parameters,"/home/akhila/fuzzer_packages/fuzzedpackages/highfrequency/inst/testfiles/heavy_parameter_transform_RetrackR_/inputs/parameters.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "parameters values: "<< parameters << std::endl;
  IntegerVector K(1);
  K[0]  = RcppDeepState_int();
  qs::c_qsave(K,"/home/akhila/fuzzer_packages/fuzzedpackages/highfrequency/inst/testfiles/heavy_parameter_transform_RetrackR_/inputs/K.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "K values: "<< K << std::endl;
  IntegerVector p  = RcppDeepState_IntegerVector();
  qs::c_qsave(p,"/home/akhila/fuzzer_packages/fuzzedpackages/highfrequency/inst/testfiles/heavy_parameter_transform_RetrackR_/inputs/p.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "p values: "<< p << std::endl;
  IntegerVector q  = RcppDeepState_IntegerVector();
  qs::c_qsave(q,"/home/akhila/fuzzer_packages/fuzzedpackages/highfrequency/inst/testfiles/heavy_parameter_transform_RetrackR_/inputs/q.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "q values: "<< q << std::endl;
  NumericVector means  = RcppDeepState_NumericVector();
  qs::c_qsave(means,"/home/akhila/fuzzer_packages/fuzzedpackages/highfrequency/inst/testfiles/heavy_parameter_transform_RetrackR_/inputs/means.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "means values: "<< means << std::endl;
  NumericVector O  = RcppDeepState_NumericVector();
  qs::c_qsave(O,"/home/akhila/fuzzer_packages/fuzzedpackages/highfrequency/inst/testfiles/heavy_parameter_transform_RetrackR_/inputs/O.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "O values: "<< O << std::endl;
  NumericVector A  = RcppDeepState_NumericVector();
  qs::c_qsave(A,"/home/akhila/fuzzer_packages/fuzzedpackages/highfrequency/inst/testfiles/heavy_parameter_transform_RetrackR_/inputs/A.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "A values: "<< A << std::endl;
  NumericVector B  = RcppDeepState_NumericVector();
  qs::c_qsave(B,"/home/akhila/fuzzer_packages/fuzzedpackages/highfrequency/inst/testfiles/heavy_parameter_transform_RetrackR_/inputs/B.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "B values: "<< B << std::endl;
  IntegerVector pMax1  = RcppDeepState_IntegerVector();
  qs::c_qsave(pMax1,"/home/akhila/fuzzer_packages/fuzzedpackages/highfrequency/inst/testfiles/heavy_parameter_transform_RetrackR_/inputs/pMax1.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "pMax1 values: "<< pMax1 << std::endl;
  IntegerVector qMax1  = RcppDeepState_IntegerVector();
  qs::c_qsave(qMax1,"/home/akhila/fuzzer_packages/fuzzedpackages/highfrequency/inst/testfiles/heavy_parameter_transform_RetrackR_/inputs/qMax1.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "qMax1 values: "<< qMax1 << std::endl;
  std::cout << "input ends" << std::endl;
  try{
    heavy_parameter_transform_RetrackR_(parameters,K[0],p,q,means,O,A,B,pMax1,qMax1);
  }
  catch(Rcpp::exception& e){
    std::cout<<"Exception Handled"<<std::endl;
  }
}
