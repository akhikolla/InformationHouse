// AUTOMATICALLY GENERATED BY RCPPDEEPSTATE PLEASE DO NOT EDIT BY HAND, INSTEAD EDIT
// mnlfa_rcpp_mstep_trait_unidim_DeepState_TestHarness_generation.cpp and mnlfa_rcpp_mstep_trait_unidim_DeepState_TestHarness_checks.cpp

#include <fstream>
#include <RInside.h>
#include <iostream>
#include <RcppDeepState.h>
#include <qs.h>
#include <DeepState.hpp>

double mnlfa_rcpp_mstep_trait_unidim(Rcpp::NumericMatrix theta, Rcpp::NumericMatrix mu_p, Rcpp::NumericMatrix sigma_p, Rcpp::NumericMatrix post);

TEST(mnlfa_deepstate_test,mnlfa_rcpp_mstep_trait_unidim_test){
  RInside R;
  std::cout << "input starts" << std::endl;
  NumericMatrix theta  = RcppDeepState_NumericMatrix();
  qs::c_qsave(theta,"/home/akhila/fuzzer_packages/fuzzedpackages/mnlfa/inst/testfiles/mnlfa_rcpp_mstep_trait_unidim/inputs/theta.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "theta values: "<< theta << std::endl;
  NumericMatrix mu_p  = RcppDeepState_NumericMatrix();
  qs::c_qsave(mu_p,"/home/akhila/fuzzer_packages/fuzzedpackages/mnlfa/inst/testfiles/mnlfa_rcpp_mstep_trait_unidim/inputs/mu_p.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "mu_p values: "<< mu_p << std::endl;
  NumericMatrix sigma_p  = RcppDeepState_NumericMatrix();
  qs::c_qsave(sigma_p,"/home/akhila/fuzzer_packages/fuzzedpackages/mnlfa/inst/testfiles/mnlfa_rcpp_mstep_trait_unidim/inputs/sigma_p.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "sigma_p values: "<< sigma_p << std::endl;
  NumericMatrix post  = RcppDeepState_NumericMatrix();
  qs::c_qsave(post,"/home/akhila/fuzzer_packages/fuzzedpackages/mnlfa/inst/testfiles/mnlfa_rcpp_mstep_trait_unidim/inputs/post.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "post values: "<< post << std::endl;
  std::cout << "input ends" << std::endl;
  try{
    mnlfa_rcpp_mstep_trait_unidim(theta,mu_p,sigma_p,post);
  }
  catch(Rcpp::exception& e){
    std::cout<<"Exception Handled"<<std::endl;
  }
}
