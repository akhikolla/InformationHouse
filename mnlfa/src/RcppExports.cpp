// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <RcppArmadillo.h>
#include <Rcpp.h>

using namespace Rcpp;

// mnlfa_rcpp_plogis
double mnlfa_rcpp_plogis(double x);
RcppExport SEXP _mnlfa_mnlfa_rcpp_plogis(SEXP xSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< double >::type x(xSEXP);
    rcpp_result_gen = Rcpp::wrap(mnlfa_rcpp_plogis(x));
    return rcpp_result_gen;
END_RCPP
}
// mnlfa_rcpp_calc_probs_2pl
Rcpp::NumericMatrix mnlfa_rcpp_calc_probs_2pl(Rcpp::NumericMatrix a, Rcpp::NumericMatrix b, Rcpp::NumericMatrix theta, Rcpp::IntegerVector y, Rcpp::LogicalVector y_resp);
RcppExport SEXP _mnlfa_mnlfa_rcpp_calc_probs_2pl(SEXP aSEXP, SEXP bSEXP, SEXP thetaSEXP, SEXP ySEXP, SEXP y_respSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< Rcpp::NumericMatrix >::type a(aSEXP);
    Rcpp::traits::input_parameter< Rcpp::NumericMatrix >::type b(bSEXP);
    Rcpp::traits::input_parameter< Rcpp::NumericMatrix >::type theta(thetaSEXP);
    Rcpp::traits::input_parameter< Rcpp::IntegerVector >::type y(ySEXP);
    Rcpp::traits::input_parameter< Rcpp::LogicalVector >::type y_resp(y_respSEXP);
    rcpp_result_gen = Rcpp::wrap(mnlfa_rcpp_calc_probs_2pl(a, b, theta, y, y_resp));
    return rcpp_result_gen;
END_RCPP
}
// mnlfa_rcpp_mstep_trait_unidim
double mnlfa_rcpp_mstep_trait_unidim(Rcpp::NumericMatrix theta, Rcpp::NumericMatrix mu_p, Rcpp::NumericMatrix sigma_p, Rcpp::NumericMatrix post);
RcppExport SEXP _mnlfa_mnlfa_rcpp_mstep_trait_unidim(SEXP thetaSEXP, SEXP mu_pSEXP, SEXP sigma_pSEXP, SEXP postSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< Rcpp::NumericMatrix >::type theta(thetaSEXP);
    Rcpp::traits::input_parameter< Rcpp::NumericMatrix >::type mu_p(mu_pSEXP);
    Rcpp::traits::input_parameter< Rcpp::NumericMatrix >::type sigma_p(sigma_pSEXP);
    Rcpp::traits::input_parameter< Rcpp::NumericMatrix >::type post(postSEXP);
    rcpp_result_gen = Rcpp::wrap(mnlfa_rcpp_mstep_trait_unidim(theta, mu_p, sigma_p, post));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_mnlfa_mnlfa_rcpp_plogis", (DL_FUNC) &_mnlfa_mnlfa_rcpp_plogis, 1},
    {"_mnlfa_mnlfa_rcpp_calc_probs_2pl", (DL_FUNC) &_mnlfa_mnlfa_rcpp_calc_probs_2pl, 5},
    {"_mnlfa_mnlfa_rcpp_mstep_trait_unidim", (DL_FUNC) &_mnlfa_mnlfa_rcpp_mstep_trait_unidim, 4},
    {NULL, NULL, 0}
};

RcppExport void R_init_mnlfa(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
