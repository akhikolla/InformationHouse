// AUTOMATICALLY GENERATED BY RCPPDEEPSTATE PLEASE DO NOT EDIT BY HAND, INSTEAD EDIT
// const_costs_logistic_DeepState_TestHarness_generation.cpp and const_costs_logistic_DeepState_TestHarness_checks.cpp

#include <fstream>
#include <RInside.h>
#include <iostream>
#include <RcppDeepState.h>
#include <qs.h>
#include <DeepState.hpp>

NumericMatrix const_costs_logistic(NumericVector y, NumericVector w, const int min_seg, IntegerVector indices);

TEST(RcppDynProg_deepstate_test,const_costs_logistic_test){
  RInside R;
  std::cout << "input starts" << std::endl;
  NumericVector y  = RcppDeepState_NumericVector();
  qs::c_qsave(y,"/home/akhila/fuzzer_packages/fuzzedpackages/RcppDynProg/inst/testfiles/const_costs_logistic/inputs/y.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "y values: "<< y << std::endl;
  NumericVector w  = RcppDeepState_NumericVector();
  qs::c_qsave(w,"/home/akhila/fuzzer_packages/fuzzedpackages/RcppDynProg/inst/testfiles/const_costs_logistic/inputs/w.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "w values: "<< w << std::endl;
  IntegerVector min_seg(1);
  min_seg[0]  = RcppDeepState_int();
  qs::c_qsave(min_seg,"/home/akhila/fuzzer_packages/fuzzedpackages/RcppDynProg/inst/testfiles/const_costs_logistic/inputs/min_seg.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "min_seg values: "<< min_seg << std::endl;
  IntegerVector indices  = RcppDeepState_IntegerVector();
  qs::c_qsave(indices,"/home/akhila/fuzzer_packages/fuzzedpackages/RcppDynProg/inst/testfiles/const_costs_logistic/inputs/indices.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "indices values: "<< indices << std::endl;
  std::cout << "input ends" << std::endl;
  try{
    const_costs_logistic(y,w,min_seg[0],indices);
  }
  catch(Rcpp::exception& e){
    std::cout<<"Exception Handled"<<std::endl;
  }
}
