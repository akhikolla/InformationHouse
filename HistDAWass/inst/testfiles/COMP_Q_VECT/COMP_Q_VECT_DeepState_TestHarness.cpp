// AUTOMATICALLY GENERATED BY RCPPDEEPSTATE PLEASE DO NOT EDIT BY HAND, INSTEAD EDIT
// COMP_Q_VECT_DeepState_TestHarness_generation.cpp and COMP_Q_VECT_DeepState_TestHarness_checks.cpp

#include <fstream>
#include <RInside.h>
#include <iostream>
#include <RcppDeepState.h>
#include <qs.h>
#include <DeepState.hpp>

NumericVector COMP_Q_VECT(NumericVector x, NumericVector p, NumericVector vp);

TEST(HistDAWass_deepstate_test,COMP_Q_VECT_test){
  RInside R;
  std::cout << "input starts" << std::endl;
  NumericVector x  = RcppDeepState_NumericVector();
  qs::c_qsave(x,"/home/akhila/fuzzer_packages/fuzzedpackages/HistDAWass/inst/testfiles/COMP_Q_VECT/inputs/x.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "x values: "<< x << std::endl;
  NumericVector p  = RcppDeepState_NumericVector();
  qs::c_qsave(p,"/home/akhila/fuzzer_packages/fuzzedpackages/HistDAWass/inst/testfiles/COMP_Q_VECT/inputs/p.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "p values: "<< p << std::endl;
  NumericVector vp  = RcppDeepState_NumericVector();
  qs::c_qsave(vp,"/home/akhila/fuzzer_packages/fuzzedpackages/HistDAWass/inst/testfiles/COMP_Q_VECT/inputs/vp.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "vp values: "<< vp << std::endl;
  std::cout << "input ends" << std::endl;
  try{
    COMP_Q_VECT(x,p,vp);
  }
  catch(Rcpp::exception& e){
    std::cout<<"Exception Handled"<<std::endl;
  }
}
