// AUTOMATICALLY GENERATED BY RCPPDEEPSTATE PLEASE DO NOT EDIT BY HAND, INSTEAD EDIT
// c_STEP_2_2_WEIGHTS_ADA_KMEANS_DeepState_TestHarness_generation.cpp and c_STEP_2_2_WEIGHTS_ADA_KMEANS_DeepState_TestHarness_checks.cpp

#include <fstream>
#include <RInside.h>
#include <iostream>
#include <RcppDeepState.h>
#include <qs.h>
#include <DeepState.hpp>

NumericMatrix c_STEP_2_2_WEIGHTS_ADA_KMEANS(NumericMatrix D1, NumericMatrix D2, int PROSUM, int schema, double theta);

TEST(HistDAWass_deepstate_test,c_STEP_2_2_WEIGHTS_ADA_KMEANS_test){
  RInside R;
  std::cout << "input starts" << std::endl;
  NumericMatrix D1  = RcppDeepState_NumericMatrix();
  qs::c_qsave(D1,"/home/akhila/fuzzer_packages/fuzzedpackages/HistDAWass/inst/testfiles/c_STEP_2_2_WEIGHTS_ADA_KMEANS/inputs/D1.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "D1 values: "<< D1 << std::endl;
  NumericMatrix D2  = RcppDeepState_NumericMatrix();
  qs::c_qsave(D2,"/home/akhila/fuzzer_packages/fuzzedpackages/HistDAWass/inst/testfiles/c_STEP_2_2_WEIGHTS_ADA_KMEANS/inputs/D2.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "D2 values: "<< D2 << std::endl;
  IntegerVector PROSUM(1);
  PROSUM[0]  = RcppDeepState_int();
  qs::c_qsave(PROSUM,"/home/akhila/fuzzer_packages/fuzzedpackages/HistDAWass/inst/testfiles/c_STEP_2_2_WEIGHTS_ADA_KMEANS/inputs/PROSUM.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "PROSUM values: "<< PROSUM << std::endl;
  IntegerVector schema(1);
  schema[0]  = RcppDeepState_int();
  qs::c_qsave(schema,"/home/akhila/fuzzer_packages/fuzzedpackages/HistDAWass/inst/testfiles/c_STEP_2_2_WEIGHTS_ADA_KMEANS/inputs/schema.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "schema values: "<< schema << std::endl;
  NumericVector theta(1);
  theta[0]  = RcppDeepState_double();
  qs::c_qsave(theta,"/home/akhila/fuzzer_packages/fuzzedpackages/HistDAWass/inst/testfiles/c_STEP_2_2_WEIGHTS_ADA_KMEANS/inputs/theta.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "theta values: "<< theta << std::endl;
  std::cout << "input ends" << std::endl;
  try{
    c_STEP_2_2_WEIGHTS_ADA_KMEANS(D1,D2,PROSUM[0],schema[0],theta[0]);
  }
  catch(Rcpp::exception& e){
    std::cout<<"Exception Handled"<<std::endl;
  }
}
