// AUTOMATICALLY GENERATED BY RCPPDEEPSTATE PLEASE DO NOT EDIT BY HAND, INSTEAD EDIT
// shuffle_vec_DeepState_TestHarness_generation.cpp and shuffle_vec_DeepState_TestHarness_checks.cpp

#include <fstream>
#include <RInside.h>
#include <iostream>
#include <RcppDeepState.h>
#include <qs.h>
#include <DeepState.hpp>

IntegerVector shuffle_vec(int min, int max);

TEST(steps_deepstate_test,shuffle_vec_test){
  RInside R;
  std::cout << "input starts" << std::endl;
  IntegerVector min(1);
  min[0]  = RcppDeepState_int();
  qs::c_qsave(min,"/home/akhila/fuzzer_packages/fuzzedpackages/steps/inst/testfiles/shuffle_vec/inputs/min.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "min values: "<< min << std::endl;
  IntegerVector max(1);
  max[0]  = RcppDeepState_int();
  qs::c_qsave(max,"/home/akhila/fuzzer_packages/fuzzedpackages/steps/inst/testfiles/shuffle_vec/inputs/max.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "max values: "<< max << std::endl;
  std::cout << "input ends" << std::endl;
  try{
    shuffle_vec(min[0],max[0]);
  }
  catch(Rcpp::exception& e){
    std::cout<<"Exception Handled"<<std::endl;
  }
}
