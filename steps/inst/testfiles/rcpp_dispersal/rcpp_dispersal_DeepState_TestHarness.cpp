// AUTOMATICALLY GENERATED BY RCPPDEEPSTATE PLEASE DO NOT EDIT BY HAND, INSTEAD EDIT
// rcpp_dispersal_DeepState_TestHarness_generation.cpp and rcpp_dispersal_DeepState_TestHarness_checks.cpp

#include <fstream>
#include <RInside.h>
#include <iostream>
#include <RcppDeepState.h>
#include <qs.h>
#include <DeepState.hpp>

List rcpp_dispersal(NumericMatrix starting_population_state, NumericMatrix potential_carrying_capacity, NumericMatrix permeability_map, int max_cells, double dispersal_proportion);

TEST(steps_deepstate_test,rcpp_dispersal_test){
  RInside R;
  std::cout << "input starts" << std::endl;
  NumericMatrix starting_population_state  = RcppDeepState_NumericMatrix();
  qs::c_qsave(starting_population_state,"/home/akhila/fuzzer_packages/fuzzedpackages/steps/inst/testfiles/rcpp_dispersal/inputs/starting_population_state.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "starting_population_state values: "<< starting_population_state << std::endl;
  NumericMatrix potential_carrying_capacity  = RcppDeepState_NumericMatrix();
  qs::c_qsave(potential_carrying_capacity,"/home/akhila/fuzzer_packages/fuzzedpackages/steps/inst/testfiles/rcpp_dispersal/inputs/potential_carrying_capacity.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "potential_carrying_capacity values: "<< potential_carrying_capacity << std::endl;
  NumericMatrix permeability_map  = RcppDeepState_NumericMatrix();
  qs::c_qsave(permeability_map,"/home/akhila/fuzzer_packages/fuzzedpackages/steps/inst/testfiles/rcpp_dispersal/inputs/permeability_map.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "permeability_map values: "<< permeability_map << std::endl;
  IntegerVector max_cells(1);
  max_cells[0]  = RcppDeepState_int();
  qs::c_qsave(max_cells,"/home/akhila/fuzzer_packages/fuzzedpackages/steps/inst/testfiles/rcpp_dispersal/inputs/max_cells.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "max_cells values: "<< max_cells << std::endl;
  NumericVector dispersal_proportion(1);
  dispersal_proportion[0]  = RcppDeepState_double();
  qs::c_qsave(dispersal_proportion,"/home/akhila/fuzzer_packages/fuzzedpackages/steps/inst/testfiles/rcpp_dispersal/inputs/dispersal_proportion.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "dispersal_proportion values: "<< dispersal_proportion << std::endl;
  std::cout << "input ends" << std::endl;
  try{
    rcpp_dispersal(starting_population_state,potential_carrying_capacity,permeability_map,max_cells[0],dispersal_proportion[0]);
  }
  catch(Rcpp::exception& e){
    std::cout<<"Exception Handled"<<std::endl;
  }
}
