// AUTOMATICALLY GENERATED BY RCPPDEEPSTATE PLEASE DO NOT EDIT BY HAND, INSTEAD EDIT
// convolute_semiMarkov_DeepState_TestHarness_generation.cpp and convolute_semiMarkov_DeepState_TestHarness_checks.cpp

#include <fstream>
#include <RInside.h>
#include <iostream>
#include <RcppDeepState.h>
#include <qs.h>
#include <DeepState.hpp>

NumericVector convolute_semiMarkov(NumericVector time_vector, NumericVector integrand_1, NumericVector integrand_2);

TEST(ebmstate_deepstate_test,convolute_semiMarkov_test){
  RInside R;
  std::cout << "input starts" << std::endl;
  NumericVector time_vector  = RcppDeepState_NumericVector();
  qs::c_qsave(time_vector,"/home/akhila/fuzzer_packages/fuzzedpackages/ebmstate/inst/testfiles/convolute_semiMarkov/inputs/time_vector.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "time_vector values: "<< time_vector << std::endl;
  NumericVector integrand_1  = RcppDeepState_NumericVector();
  qs::c_qsave(integrand_1,"/home/akhila/fuzzer_packages/fuzzedpackages/ebmstate/inst/testfiles/convolute_semiMarkov/inputs/integrand_1.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "integrand_1 values: "<< integrand_1 << std::endl;
  NumericVector integrand_2  = RcppDeepState_NumericVector();
  qs::c_qsave(integrand_2,"/home/akhila/fuzzer_packages/fuzzedpackages/ebmstate/inst/testfiles/convolute_semiMarkov/inputs/integrand_2.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "integrand_2 values: "<< integrand_2 << std::endl;
  std::cout << "input ends" << std::endl;
  try{
    convolute_semiMarkov(time_vector,integrand_1,integrand_2);
  }
  catch(Rcpp::exception& e){
    std::cout<<"Exception Handled"<<std::endl;
  }
}
