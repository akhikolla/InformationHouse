// AUTOMATICALLY GENERATED BY RCPPDEEPSTATE PLEASE DO NOT EDIT BY HAND, INSTEAD EDIT
// sft_calc_DeepState_TestHarness_generation.cpp and sft_calc_DeepState_TestHarness_checks.cpp

#include <fstream>
#include <RInside.h>
#include <iostream>
#include <RcppDeepState.h>
#include <qs.h>
#include <DeepState.hpp>

NumericVector sft_calc(double Ft, double Fn, double K, double Tr, double alpha);

TEST(forestControl_deepstate_test,sft_calc_test){
  RInside R;
  std::cout << "input starts" << std::endl;
  NumericVector Ft(1);
  Ft[0]  = RcppDeepState_double();
  qs::c_qsave(Ft,"/home/akhila/fuzzer_packages/fuzzedpackages/forestControl/inst/testfiles/sft_calc/inputs/Ft.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "Ft values: "<< Ft << std::endl;
  NumericVector Fn(1);
  Fn[0]  = RcppDeepState_double();
  qs::c_qsave(Fn,"/home/akhila/fuzzer_packages/fuzzedpackages/forestControl/inst/testfiles/sft_calc/inputs/Fn.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "Fn values: "<< Fn << std::endl;
  NumericVector K(1);
  K[0]  = RcppDeepState_double();
  qs::c_qsave(K,"/home/akhila/fuzzer_packages/fuzzedpackages/forestControl/inst/testfiles/sft_calc/inputs/K.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "K values: "<< K << std::endl;
  NumericVector Tr(1);
  Tr[0]  = RcppDeepState_double();
  qs::c_qsave(Tr,"/home/akhila/fuzzer_packages/fuzzedpackages/forestControl/inst/testfiles/sft_calc/inputs/Tr.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "Tr values: "<< Tr << std::endl;
  NumericVector alpha(1);
  alpha[0]  = RcppDeepState_double();
  qs::c_qsave(alpha,"/home/akhila/fuzzer_packages/fuzzedpackages/forestControl/inst/testfiles/sft_calc/inputs/alpha.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "alpha values: "<< alpha << std::endl;
  std::cout << "input ends" << std::endl;
  try{
    sft_calc(Ft[0],Fn[0],K[0],Tr[0],alpha[0]);
  }
  catch(Rcpp::exception& e){
    std::cout<<"Exception Handled"<<std::endl;
  }
}
