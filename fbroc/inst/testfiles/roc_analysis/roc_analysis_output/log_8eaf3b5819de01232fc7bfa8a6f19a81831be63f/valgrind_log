<?xml version="1.0"?>

<valgrindoutput>

<protocolversion>4</protocolversion>
<protocoltool>memcheck</protocoltool>

<preamble>
  <line>Memcheck, a memory error detector</line>
  <line>Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.</line>
  <line>Using Valgrind-3.15.0 and LibVEX; rerun with -h for copyright info</line>
  <line>Command: ./roc_analysis_DeepState_TestHarness --input_test_file /home/akhila/fuzzer_packages/fuzzedpackages/fbroc/inst/testfiles/roc_analysis/roc_analysis_output/8eaf3b5819de01232fc7bfa8a6f19a81831be63f.pass</line>
</preamble>

<pid>808862</pid>
<ppid>808861</ppid>
<tool>memcheck</tool>

<args>
  <vargv>
    <exe>/usr/bin/valgrind.bin</exe>
    <arg>--xml=yes</arg>
    <arg>--xml-file=/home/akhila/fuzzer_packages/fuzzedpackages/fbroc/inst/testfiles/roc_analysis/roc_analysis_output/log_8eaf3b5819de01232fc7bfa8a6f19a81831be63f/valgrind_log</arg>
    <arg>--tool=memcheck</arg>
    <arg>--leak-check=yes</arg>
  </vargv>
  <argv>
    <exe>./roc_analysis_DeepState_TestHarness</exe>
    <arg>--input_test_file</arg>
    <arg>/home/akhila/fuzzer_packages/fuzzedpackages/fbroc/inst/testfiles/roc_analysis/roc_analysis_output/8eaf3b5819de01232fc7bfa8a6f19a81831be63f.pass</arg>
  </argv>
</args>

<status>
  <state>RUNNING</state>
  <time>00:00:00:00.029 </time>
</status>

<error>
  <unique>0x0</unique>
  <tid>1</tid>
  <kind>UninitCondition</kind>
  <what>Conditional jump or move depends on uninitialised value(s)</what>
  <stack>
    <frame>
      <ip>0x4D42FEE</ip>
      <obj>/home/akhila/fuzzer_packages/fuzzedpackages/fbroc/src/fbroc.so</obj>
      <fn>ROC::ROC(Rcpp::Vector&lt;14, Rcpp::PreserveStorage&gt;, Rcpp::Vector&lt;13, Rcpp::PreserveStorage&gt;)</fn>
      <dir>/home/akhila/fuzzer_packages/fuzzedpackages/fbroc/src</dir>
      <file>roc.cpp</file>
      <line>281</line>
    </frame>
    <frame>
      <ip>0x4D351AA</ip>
      <obj>/home/akhila/fuzzer_packages/fuzzedpackages/fbroc/src/fbroc.so</obj>
      <fn>roc_analysis(Rcpp::Vector&lt;14, Rcpp::PreserveStorage&gt;, Rcpp::Vector&lt;13, Rcpp::PreserveStorage&gt;)</fn>
      <dir>/home/akhila/fuzzer_packages/fuzzedpackages/fbroc/src</dir>
      <file>interface.common.cpp</file>
      <line>10</line>
    </frame>
    <frame>
      <ip>0x409F3C</ip>
      <obj>/home/akhila/fuzzer_packages/fuzzedpackages/fbroc/inst/testfiles/roc_analysis/roc_analysis_DeepState_TestHarness</obj>
      <fn>DeepState_Test_fbroc_deepstate_test_roc_analysis_test()</fn>
      <dir>/home/akhila/fuzzer_packages/fuzzedpackages/fbroc/inst/testfiles/roc_analysis</dir>
      <file>roc_analysis_DeepState_TestHarness.cpp</file>
      <line>26</line>
    </frame>
    <frame>
      <ip>0x409B58</ip>
      <obj>/home/akhila/fuzzer_packages/fuzzedpackages/fbroc/inst/testfiles/roc_analysis/roc_analysis_DeepState_TestHarness</obj>
      <fn>DeepState_Run_fbroc_deepstate_test_roc_analysis_test()</fn>
      <dir>/home/akhila/fuzzer_packages/fuzzedpackages/fbroc/inst/testfiles/roc_analysis</dir>
      <file>roc_analysis_DeepState_TestHarness.cpp</file>
      <line>13</line>
    </frame>
    <frame>
      <ip>0x41CFD8</ip>
      <obj>/home/akhila/fuzzer_packages/fuzzedpackages/fbroc/inst/testfiles/roc_analysis/roc_analysis_DeepState_TestHarness</obj>
      <fn>DeepState_RunTest.isra.0</fn>
    </frame>
    <frame>
      <ip>0x41D279</ip>
      <obj>/home/akhila/fuzzer_packages/fuzzedpackages/fbroc/inst/testfiles/roc_analysis/roc_analysis_DeepState_TestHarness</obj>
      <fn>DeepState_ForkAndRunTest</fn>
    </frame>
    <frame>
      <ip>0x41D354</ip>
      <obj>/home/akhila/fuzzer_packages/fuzzedpackages/fbroc/inst/testfiles/roc_analysis/roc_analysis_DeepState_TestHarness</obj>
      <fn>DeepState_RunSavedTestCase</fn>
    </frame>
    <frame>
      <ip>0x407665</ip>
      <obj>/home/akhila/fuzzer_packages/fuzzedpackages/fbroc/inst/testfiles/roc_analysis/roc_analysis_DeepState_TestHarness</obj>
      <fn>main</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0xd</unique>
  <tid>1</tid>
  <kind>UninitCondition</kind>
  <what>Conditional jump or move depends on uninitialised value(s)</what>
  <stack>
    <frame>
      <ip>0x4D41D71</ip>
      <obj>/home/akhila/fuzzer_packages/fuzzedpackages/fbroc/src/fbroc.so</obj>
      <fn>ROC::find_thresholds(Rcpp::Vector&lt;14, Rcpp::PreserveStorage&gt;, Rcpp::Vector&lt;13, Rcpp::PreserveStorage&gt;)</fn>
      <dir>/home/akhila/fuzzer_packages/fuzzedpackages/fbroc/src</dir>
      <file>roc.cpp</file>
      <line>87</line>
    </frame>
    <frame>
      <ip>0x4D430A4</ip>
      <obj>/home/akhila/fuzzer_packages/fuzzedpackages/fbroc/src/fbroc.so</obj>
      <fn>ROC::ROC(Rcpp::Vector&lt;14, Rcpp::PreserveStorage&gt;, Rcpp::Vector&lt;13, Rcpp::PreserveStorage&gt;)</fn>
      <dir>/home/akhila/fuzzer_packages/fuzzedpackages/fbroc/src</dir>
      <file>roc.cpp</file>
      <line>284</line>
    </frame>
    <frame>
      <ip>0x4D351AA</ip>
      <obj>/home/akhila/fuzzer_packages/fuzzedpackages/fbroc/src/fbroc.so</obj>
      <fn>roc_analysis(Rcpp::Vector&lt;14, Rcpp::PreserveStorage&gt;, Rcpp::Vector&lt;13, Rcpp::PreserveStorage&gt;)</fn>
      <dir>/home/akhila/fuzzer_packages/fuzzedpackages/fbroc/src</dir>
      <file>interface.common.cpp</file>
      <line>10</line>
    </frame>
    <frame>
      <ip>0x409F3C</ip>
      <obj>/home/akhila/fuzzer_packages/fuzzedpackages/fbroc/inst/testfiles/roc_analysis/roc_analysis_DeepState_TestHarness</obj>
      <fn>DeepState_Test_fbroc_deepstate_test_roc_analysis_test()</fn>
      <dir>/home/akhila/fuzzer_packages/fuzzedpackages/fbroc/inst/testfiles/roc_analysis</dir>
      <file>roc_analysis_DeepState_TestHarness.cpp</file>
      <line>26</line>
    </frame>
    <frame>
      <ip>0x409B58</ip>
      <obj>/home/akhila/fuzzer_packages/fuzzedpackages/fbroc/inst/testfiles/roc_analysis/roc_analysis_DeepState_TestHarness</obj>
      <fn>DeepState_Run_fbroc_deepstate_test_roc_analysis_test()</fn>
      <dir>/home/akhila/fuzzer_packages/fuzzedpackages/fbroc/inst/testfiles/roc_analysis</dir>
      <file>roc_analysis_DeepState_TestHarness.cpp</file>
      <line>13</line>
    </frame>
    <frame>
      <ip>0x41CFD8</ip>
      <obj>/home/akhila/fuzzer_packages/fuzzedpackages/fbroc/inst/testfiles/roc_analysis/roc_analysis_DeepState_TestHarness</obj>
      <fn>DeepState_RunTest.isra.0</fn>
    </frame>
    <frame>
      <ip>0x41D279</ip>
      <obj>/home/akhila/fuzzer_packages/fuzzedpackages/fbroc/inst/testfiles/roc_analysis/roc_analysis_DeepState_TestHarness</obj>
      <fn>DeepState_ForkAndRunTest</fn>
    </frame>
    <frame>
      <ip>0x41D354</ip>
      <obj>/home/akhila/fuzzer_packages/fuzzedpackages/fbroc/inst/testfiles/roc_analysis/roc_analysis_DeepState_TestHarness</obj>
      <fn>DeepState_RunSavedTestCase</fn>
    </frame>
    <frame>
      <ip>0x407665</ip>
      <obj>/home/akhila/fuzzer_packages/fuzzedpackages/fbroc/inst/testfiles/roc_analysis/roc_analysis_DeepState_TestHarness</obj>
      <fn>main</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x1a</unique>
  <tid>1</tid>
  <kind>UninitCondition</kind>
  <what>Conditional jump or move depends on uninitialised value(s)</what>
  <stack>
    <frame>
      <ip>0x4D402E6</ip>
      <obj>/home/akhila/fuzzer_packages/fuzzedpackages/fbroc/src/fbroc.so</obj>
      <fn>ROC::build_pred(Rcpp::Vector&lt;14, Rcpp::PreserveStorage&gt;, Rcpp::Vector&lt;13, Rcpp::PreserveStorage&gt;)</fn>
      <dir>/home/akhila/fuzzer_packages/fuzzedpackages/fbroc/src</dir>
      <file>roc.cpp</file>
      <line>262</line>
    </frame>
    <frame>
      <ip>0x4D43166</ip>
      <obj>/home/akhila/fuzzer_packages/fuzzedpackages/fbroc/src/fbroc.so</obj>
      <fn>ROC::ROC(Rcpp::Vector&lt;14, Rcpp::PreserveStorage&gt;, Rcpp::Vector&lt;13, Rcpp::PreserveStorage&gt;)</fn>
      <dir>/home/akhila/fuzzer_packages/fuzzedpackages/fbroc/src</dir>
      <file>roc.cpp</file>
      <line>285</line>
    </frame>
    <frame>
      <ip>0x4D351AA</ip>
      <obj>/home/akhila/fuzzer_packages/fuzzedpackages/fbroc/src/fbroc.so</obj>
      <fn>roc_analysis(Rcpp::Vector&lt;14, Rcpp::PreserveStorage&gt;, Rcpp::Vector&lt;13, Rcpp::PreserveStorage&gt;)</fn>
      <dir>/home/akhila/fuzzer_packages/fuzzedpackages/fbroc/src</dir>
      <file>interface.common.cpp</file>
      <line>10</line>
    </frame>
    <frame>
      <ip>0x409F3C</ip>
      <obj>/home/akhila/fuzzer_packages/fuzzedpackages/fbroc/inst/testfiles/roc_analysis/roc_analysis_DeepState_TestHarness</obj>
      <fn>DeepState_Test_fbroc_deepstate_test_roc_analysis_test()</fn>
      <dir>/home/akhila/fuzzer_packages/fuzzedpackages/fbroc/inst/testfiles/roc_analysis</dir>
      <file>roc_analysis_DeepState_TestHarness.cpp</file>
      <line>26</line>
    </frame>
    <frame>
      <ip>0x409B58</ip>
      <obj>/home/akhila/fuzzer_packages/fuzzedpackages/fbroc/inst/testfiles/roc_analysis/roc_analysis_DeepState_TestHarness</obj>
      <fn>DeepState_Run_fbroc_deepstate_test_roc_analysis_test()</fn>
      <dir>/home/akhila/fuzzer_packages/fuzzedpackages/fbroc/inst/testfiles/roc_analysis</dir>
      <file>roc_analysis_DeepState_TestHarness.cpp</file>
      <line>13</line>
    </frame>
    <frame>
      <ip>0x41CFD8</ip>
      <obj>/home/akhila/fuzzer_packages/fuzzedpackages/fbroc/inst/testfiles/roc_analysis/roc_analysis_DeepState_TestHarness</obj>
      <fn>DeepState_RunTest.isra.0</fn>
    </frame>
    <frame>
      <ip>0x41D279</ip>
      <obj>/home/akhila/fuzzer_packages/fuzzedpackages/fbroc/inst/testfiles/roc_analysis/roc_analysis_DeepState_TestHarness</obj>
      <fn>DeepState_ForkAndRunTest</fn>
    </frame>
    <frame>
      <ip>0x41D354</ip>
      <obj>/home/akhila/fuzzer_packages/fuzzedpackages/fbroc/inst/testfiles/roc_analysis/roc_analysis_DeepState_TestHarness</obj>
      <fn>DeepState_RunSavedTestCase</fn>
    </frame>
    <frame>
      <ip>0x407665</ip>
      <obj>/home/akhila/fuzzer_packages/fuzzedpackages/fbroc/inst/testfiles/roc_analysis/roc_analysis_DeepState_TestHarness</obj>
      <fn>main</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x27</unique>
  <tid>1</tid>
  <kind>UninitCondition</kind>
  <what>Conditional jump or move depends on uninitialised value(s)</what>
  <stack>
    <frame>
      <ip>0x4D426C4</ip>
      <obj>/home/akhila/fuzzer_packages/fuzzedpackages/fbroc/src/fbroc.so</obj>
      <fn>ROC::build_index(Rcpp::Vector&lt;14, Rcpp::PreserveStorage&gt;)</fn>
      <dir>/home/akhila/fuzzer_packages/fuzzedpackages/fbroc/src</dir>
      <file>roc.cpp</file>
      <line>64</line>
    </frame>
    <frame>
      <ip>0x4D432AF</ip>
      <obj>/home/akhila/fuzzer_packages/fuzzedpackages/fbroc/src/fbroc.so</obj>
      <fn>ROC::ROC(Rcpp::Vector&lt;14, Rcpp::PreserveStorage&gt;, Rcpp::Vector&lt;13, Rcpp::PreserveStorage&gt;)</fn>
      <dir>/home/akhila/fuzzer_packages/fuzzedpackages/fbroc/src</dir>
      <file>roc.cpp</file>
      <line>288</line>
    </frame>
    <frame>
      <ip>0x4D351AA</ip>
      <obj>/home/akhila/fuzzer_packages/fuzzedpackages/fbroc/src/fbroc.so</obj>
      <fn>roc_analysis(Rcpp::Vector&lt;14, Rcpp::PreserveStorage&gt;, Rcpp::Vector&lt;13, Rcpp::PreserveStorage&gt;)</fn>
      <dir>/home/akhila/fuzzer_packages/fuzzedpackages/fbroc/src</dir>
      <file>interface.common.cpp</file>
      <line>10</line>
    </frame>
    <frame>
      <ip>0x409F3C</ip>
      <obj>/home/akhila/fuzzer_packages/fuzzedpackages/fbroc/inst/testfiles/roc_analysis/roc_analysis_DeepState_TestHarness</obj>
      <fn>DeepState_Test_fbroc_deepstate_test_roc_analysis_test()</fn>
      <dir>/home/akhila/fuzzer_packages/fuzzedpackages/fbroc/inst/testfiles/roc_analysis</dir>
      <file>roc_analysis_DeepState_TestHarness.cpp</file>
      <line>26</line>
    </frame>
    <frame>
      <ip>0x409B58</ip>
      <obj>/home/akhila/fuzzer_packages/fuzzedpackages/fbroc/inst/testfiles/roc_analysis/roc_analysis_DeepState_TestHarness</obj>
      <fn>DeepState_Run_fbroc_deepstate_test_roc_analysis_test()</fn>
      <dir>/home/akhila/fuzzer_packages/fuzzedpackages/fbroc/inst/testfiles/roc_analysis</dir>
      <file>roc_analysis_DeepState_TestHarness.cpp</file>
      <line>13</line>
    </frame>
    <frame>
      <ip>0x41CFD8</ip>
      <obj>/home/akhila/fuzzer_packages/fuzzedpackages/fbroc/inst/testfiles/roc_analysis/roc_analysis_DeepState_TestHarness</obj>
      <fn>DeepState_RunTest.isra.0</fn>
    </frame>
    <frame>
      <ip>0x41D279</ip>
      <obj>/home/akhila/fuzzer_packages/fuzzedpackages/fbroc/inst/testfiles/roc_analysis/roc_analysis_DeepState_TestHarness</obj>
      <fn>DeepState_ForkAndRunTest</fn>
    </frame>
    <frame>
      <ip>0x41D354</ip>
      <obj>/home/akhila/fuzzer_packages/fuzzedpackages/fbroc/inst/testfiles/roc_analysis/roc_analysis_DeepState_TestHarness</obj>
      <fn>DeepState_RunSavedTestCase</fn>
    </frame>
    <frame>
      <ip>0x407665</ip>
      <obj>/home/akhila/fuzzer_packages/fuzzedpackages/fbroc/inst/testfiles/roc_analysis/roc_analysis_DeepState_TestHarness</obj>
      <fn>main</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x46</unique>
  <tid>1</tid>
  <kind>InvalidRead</kind>
  <what>Invalid read of size 8</what>
  <stack>
    <frame>
      <ip>0x4D426BE</ip>
      <obj>/home/akhila/fuzzer_packages/fuzzedpackages/fbroc/src/fbroc.so</obj>
      <fn>ROC::build_index(Rcpp::Vector&lt;14, Rcpp::PreserveStorage&gt;)</fn>
      <dir>/home/akhila/fuzzer_packages/fuzzedpackages/fbroc/src</dir>
      <file>roc.cpp</file>
      <line>64</line>
    </frame>
    <frame>
      <ip>0x4D432AF</ip>
      <obj>/home/akhila/fuzzer_packages/fuzzedpackages/fbroc/src/fbroc.so</obj>
      <fn>ROC::ROC(Rcpp::Vector&lt;14, Rcpp::PreserveStorage&gt;, Rcpp::Vector&lt;13, Rcpp::PreserveStorage&gt;)</fn>
      <dir>/home/akhila/fuzzer_packages/fuzzedpackages/fbroc/src</dir>
      <file>roc.cpp</file>
      <line>288</line>
    </frame>
    <frame>
      <ip>0x4D351AA</ip>
      <obj>/home/akhila/fuzzer_packages/fuzzedpackages/fbroc/src/fbroc.so</obj>
      <fn>roc_analysis(Rcpp::Vector&lt;14, Rcpp::PreserveStorage&gt;, Rcpp::Vector&lt;13, Rcpp::PreserveStorage&gt;)</fn>
      <dir>/home/akhila/fuzzer_packages/fuzzedpackages/fbroc/src</dir>
      <file>interface.common.cpp</file>
      <line>10</line>
    </frame>
    <frame>
      <ip>0x409F3C</ip>
      <obj>/home/akhila/fuzzer_packages/fuzzedpackages/fbroc/inst/testfiles/roc_analysis/roc_analysis_DeepState_TestHarness</obj>
      <fn>DeepState_Test_fbroc_deepstate_test_roc_analysis_test()</fn>
      <dir>/home/akhila/fuzzer_packages/fuzzedpackages/fbroc/inst/testfiles/roc_analysis</dir>
      <file>roc_analysis_DeepState_TestHarness.cpp</file>
      <line>26</line>
    </frame>
    <frame>
      <ip>0x409B58</ip>
      <obj>/home/akhila/fuzzer_packages/fuzzedpackages/fbroc/inst/testfiles/roc_analysis/roc_analysis_DeepState_TestHarness</obj>
      <fn>DeepState_Run_fbroc_deepstate_test_roc_analysis_test()</fn>
      <dir>/home/akhila/fuzzer_packages/fuzzedpackages/fbroc/inst/testfiles/roc_analysis</dir>
      <file>roc_analysis_DeepState_TestHarness.cpp</file>
      <line>13</line>
    </frame>
    <frame>
      <ip>0x41CFD8</ip>
      <obj>/home/akhila/fuzzer_packages/fuzzedpackages/fbroc/inst/testfiles/roc_analysis/roc_analysis_DeepState_TestHarness</obj>
      <fn>DeepState_RunTest.isra.0</fn>
    </frame>
    <frame>
      <ip>0x41D279</ip>
      <obj>/home/akhila/fuzzer_packages/fuzzedpackages/fbroc/inst/testfiles/roc_analysis/roc_analysis_DeepState_TestHarness</obj>
      <fn>DeepState_ForkAndRunTest</fn>
    </frame>
    <frame>
      <ip>0x41D354</ip>
      <obj>/home/akhila/fuzzer_packages/fuzzedpackages/fbroc/inst/testfiles/roc_analysis/roc_analysis_DeepState_TestHarness</obj>
      <fn>DeepState_RunSavedTestCase</fn>
    </frame>
    <frame>
      <ip>0x407665</ip>
      <obj>/home/akhila/fuzzer_packages/fuzzedpackages/fbroc/inst/testfiles/roc_analysis/roc_analysis_DeepState_TestHarness</obj>
      <fn>main</fn>
    </frame>
  </stack>
  <auxwhat>Address 0x7ea6178 is 0 bytes after a block of size 7,960 alloc'd</auxwhat>
  <stack>
    <frame>
      <ip>0x483B7F3</ip>
      <obj>/usr/lib/x86_64-linux-gnu/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>malloc</fn>
    </frame>
    <frame>
      <ip>0x49D42B3</ip>
      <obj>/usr/lib/R/lib/libR.so</obj>
    </frame>
    <frame>
      <ip>0x49D5EAB</ip>
      <obj>/usr/lib/R/lib/libR.so</obj>
      <fn>Rf_allocVector3</fn>
    </frame>
    <frame>
      <ip>0x4A36479</ip>
      <obj>/usr/lib/R/lib/libR.so</obj>
    </frame>
    <frame>
      <ip>0x4A35EE4</ip>
      <obj>/usr/lib/R/lib/libR.so</obj>
    </frame>
    <frame>
      <ip>0x4A37D31</ip>
      <obj>/usr/lib/R/lib/libR.so</obj>
      <fn>R_Unserialize</fn>
    </frame>
    <frame>
      <ip>0x4A391BC</ip>
      <obj>/usr/lib/R/lib/libR.so</obj>
    </frame>
    <frame>
      <ip>0x4A395DA</ip>
      <obj>/usr/lib/R/lib/libR.so</obj>
    </frame>
    <frame>
      <ip>0x4995455</ip>
      <obj>/usr/lib/R/lib/libR.so</obj>
      <fn>Rf_eval</fn>
    </frame>
    <frame>
      <ip>0x499586B</ip>
      <obj>/usr/lib/R/lib/libR.so</obj>
    </frame>
    <frame>
      <ip>0x4995347</ip>
      <obj>/usr/lib/R/lib/libR.so</obj>
      <fn>Rf_eval</fn>
    </frame>
    <frame>
      <ip>0x495B0E4</ip>
      <obj>/usr/lib/R/lib/libR.so</obj>
    </frame>
  </stack>
</error>

<error>
  <unique>0x40b</unique>
  <tid>1</tid>
  <kind>InvalidRead</kind>
  <what>Invalid read of size 4</what>
  <stack>
    <frame>
      <ip>0x4D3F858</ip>
      <obj>/home/akhila/fuzzer_packages/fuzzedpackages/fbroc/src/fbroc.so</obj>
      <fn>ROC::get_positives_delta()</fn>
      <dir>/home/akhila/fuzzer_packages/fuzzedpackages/fbroc/src</dir>
      <file>roc.cpp</file>
      <line>225</line>
    </frame>
    <frame>
      <ip>0x4D4393A</ip>
      <obj>/home/akhila/fuzzer_packages/fuzzedpackages/fbroc/src/fbroc.so</obj>
      <fn>ROC::ROC(Rcpp::Vector&lt;14, Rcpp::PreserveStorage&gt;, Rcpp::Vector&lt;13, Rcpp::PreserveStorage&gt;)</fn>
      <dir>/home/akhila/fuzzer_packages/fuzzedpackages/fbroc/src</dir>
      <file>roc.cpp</file>
      <line>301</line>
    </frame>
    <frame>
      <ip>0x4D351AA</ip>
      <obj>/home/akhila/fuzzer_packages/fuzzedpackages/fbroc/src/fbroc.so</obj>
      <fn>roc_analysis(Rcpp::Vector&lt;14, Rcpp::PreserveStorage&gt;, Rcpp::Vector&lt;13, Rcpp::PreserveStorage&gt;)</fn>
      <dir>/home/akhila/fuzzer_packages/fuzzedpackages/fbroc/src</dir>
      <file>interface.common.cpp</file>
      <line>10</line>
    </frame>
    <frame>
      <ip>0x409F3C</ip>
      <obj>/home/akhila/fuzzer_packages/fuzzedpackages/fbroc/inst/testfiles/roc_analysis/roc_analysis_DeepState_TestHarness</obj>
      <fn>DeepState_Test_fbroc_deepstate_test_roc_analysis_test()</fn>
      <dir>/home/akhila/fuzzer_packages/fuzzedpackages/fbroc/inst/testfiles/roc_analysis</dir>
      <file>roc_analysis_DeepState_TestHarness.cpp</file>
      <line>26</line>
    </frame>
    <frame>
      <ip>0x409B58</ip>
      <obj>/home/akhila/fuzzer_packages/fuzzedpackages/fbroc/inst/testfiles/roc_analysis/roc_analysis_DeepState_TestHarness</obj>
      <fn>DeepState_Run_fbroc_deepstate_test_roc_analysis_test()</fn>
      <dir>/home/akhila/fuzzer_packages/fuzzedpackages/fbroc/inst/testfiles/roc_analysis</dir>
      <file>roc_analysis_DeepState_TestHarness.cpp</file>
      <line>13</line>
    </frame>
    <frame>
      <ip>0x41CFD8</ip>
      <obj>/home/akhila/fuzzer_packages/fuzzedpackages/fbroc/inst/testfiles/roc_analysis/roc_analysis_DeepState_TestHarness</obj>
      <fn>DeepState_RunTest.isra.0</fn>
    </frame>
    <frame>
      <ip>0x41D279</ip>
      <obj>/home/akhila/fuzzer_packages/fuzzedpackages/fbroc/inst/testfiles/roc_analysis/roc_analysis_DeepState_TestHarness</obj>
      <fn>DeepState_ForkAndRunTest</fn>
    </frame>
    <frame>
      <ip>0x41D354</ip>
      <obj>/home/akhila/fuzzer_packages/fuzzedpackages/fbroc/inst/testfiles/roc_analysis/roc_analysis_DeepState_TestHarness</obj>
      <fn>DeepState_RunSavedTestCase</fn>
    </frame>
    <frame>
      <ip>0x407665</ip>
      <obj>/home/akhila/fuzzer_packages/fuzzedpackages/fbroc/inst/testfiles/roc_analysis/roc_analysis_DeepState_TestHarness</obj>
      <fn>main</fn>
    </frame>
  </stack>
  <auxwhat>Address 0x92c17b8 is 1,496 bytes inside a block of size 4,096 free'd</auxwhat>
  <stack>
    <frame>
      <ip>0x483CA3F</ip>
      <obj>/usr/lib/x86_64-linux-gnu/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>free</fn>
    </frame>
    <frame>
      <ip>0x4AD1AD0</ip>
      <obj>/usr/lib/R/lib/libR.so</obj>
    </frame>
    <frame>
      <ip>0x4AC9CD2</ip>
      <obj>/usr/lib/R/lib/libR.so</obj>
    </frame>
    <frame>
      <ip>0x4AC5915</ip>
      <obj>/usr/lib/R/lib/libR.so</obj>
    </frame>
    <frame>
      <ip>0x49B2697</ip>
      <obj>/usr/lib/R/lib/libR.so</obj>
    </frame>
    <frame>
      <ip>0x497A1D0</ip>
      <obj>/usr/lib/R/lib/libR.so</obj>
    </frame>
    <frame>
      <ip>0x4994DD7</ip>
      <obj>/usr/lib/R/lib/libR.so</obj>
      <fn>Rf_eval</fn>
    </frame>
    <frame>
      <ip>0x4996C9E</ip>
      <obj>/usr/lib/R/lib/libR.so</obj>
    </frame>
    <frame>
      <ip>0x4997B91</ip>
      <obj>/usr/lib/R/lib/libR.so</obj>
      <fn>Rf_applyClosure</fn>
    </frame>
    <frame>
      <ip>0x498450D</ip>
      <obj>/usr/lib/R/lib/libR.so</obj>
    </frame>
    <frame>
      <ip>0x4994DD7</ip>
      <obj>/usr/lib/R/lib/libR.so</obj>
      <fn>Rf_eval</fn>
    </frame>
    <frame>
      <ip>0x499586B</ip>
      <obj>/usr/lib/R/lib/libR.so</obj>
    </frame>
  </stack>
  <auxwhat>Block was alloc'd at</auxwhat>
  <stack>
    <frame>
      <ip>0x483B7F3</ip>
      <obj>/usr/lib/x86_64-linux-gnu/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>malloc</fn>
    </frame>
    <frame>
      <ip>0x4AD1A82</ip>
      <obj>/usr/lib/R/lib/libR.so</obj>
    </frame>
    <frame>
      <ip>0x4AC8A99</ip>
      <obj>/usr/lib/R/lib/libR.so</obj>
    </frame>
    <frame>
      <ip>0x4AC5915</ip>
      <obj>/usr/lib/R/lib/libR.so</obj>
    </frame>
    <frame>
      <ip>0x49B2697</ip>
      <obj>/usr/lib/R/lib/libR.so</obj>
    </frame>
    <frame>
      <ip>0x497A1D0</ip>
      <obj>/usr/lib/R/lib/libR.so</obj>
    </frame>
    <frame>
      <ip>0x4994DD7</ip>
      <obj>/usr/lib/R/lib/libR.so</obj>
      <fn>Rf_eval</fn>
    </frame>
    <frame>
      <ip>0x4996C9E</ip>
      <obj>/usr/lib/R/lib/libR.so</obj>
    </frame>
    <frame>
      <ip>0x4997B91</ip>
      <obj>/usr/lib/R/lib/libR.so</obj>
      <fn>Rf_applyClosure</fn>
    </frame>
    <frame>
      <ip>0x498450D</ip>
      <obj>/usr/lib/R/lib/libR.so</obj>
    </frame>
    <frame>
      <ip>0x4994DD7</ip>
      <obj>/usr/lib/R/lib/libR.so</obj>
      <fn>Rf_eval</fn>
    </frame>
    <frame>
      <ip>0x499586B</ip>
      <obj>/usr/lib/R/lib/libR.so</obj>
    </frame>
  </stack>
</error>


<status>
  <state>FINISHED</state>
  <time>00:00:00:08.569 </time>
</status>

<errorcounts>
  <pair>
    <count>2</count>
    <unique>0x40b</unique>
  </pair>
  <pair>
    <count>912</count>
    <unique>0x46</unique>
  </pair>
  <pair>
    <count>84</count>
    <unique>0x27</unique>
  </pair>
  <pair>
    <count>13</count>
    <unique>0x1a</unique>
  </pair>
  <pair>
    <count>13</count>
    <unique>0xd</unique>
  </pair>
  <pair>
    <count>13</count>
    <unique>0x0</unique>
  </pair>
</errorcounts>

<suppcounts>
</suppcounts>

</valgrindoutput>


<status>
  <state>FINISHED</state>
  <time>00:00:00:09.111 </time>
</status>

<errorcounts>
</errorcounts>

<suppcounts>
</suppcounts>

</valgrindoutput>

