<?xml version="1.0"?>

<valgrindoutput>

<protocolversion>4</protocolversion>
<protocoltool>memcheck</protocoltool>

<preamble>
  <line>Memcheck, a memory error detector</line>
  <line>Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.</line>
  <line>Using Valgrind-3.15.0 and LibVEX; rerun with -h for copyright info</line>
  <line>Command: ./tpr_fpr_boot_DeepState_TestHarness --input_test_file /home/akhila/fuzzer_packages/fuzzedpackages/fbroc/inst/testfiles/tpr_fpr_boot/tpr_fpr_boot_output/e78ce7438df9a1440309ef3e26dc1d3f4bb32f6a.crash</line>
</preamble>

<pid>808999</pid>
<ppid>808998</ppid>
<tool>memcheck</tool>

<args>
  <vargv>
    <exe>/usr/bin/valgrind.bin</exe>
    <arg>--xml=yes</arg>
    <arg>--xml-file=/home/akhila/fuzzer_packages/fuzzedpackages/fbroc/inst/testfiles/tpr_fpr_boot/tpr_fpr_boot_output/log_e78ce7438df9a1440309ef3e26dc1d3f4bb32f6a/valgrind_log</arg>
    <arg>--tool=memcheck</arg>
    <arg>--leak-check=yes</arg>
  </vargv>
  <argv>
    <exe>./tpr_fpr_boot_DeepState_TestHarness</exe>
    <arg>--input_test_file</arg>
    <arg>/home/akhila/fuzzer_packages/fuzzedpackages/fbroc/inst/testfiles/tpr_fpr_boot/tpr_fpr_boot_output/e78ce7438df9a1440309ef3e26dc1d3f4bb32f6a.crash</arg>
  </argv>
</args>

<status>
  <state>RUNNING</state>
  <time>00:00:00:00.027 </time>
</status>

<error>
  <unique>0x0</unique>
  <tid>1</tid>
  <kind>UninitCondition</kind>
  <what>Conditional jump or move depends on uninitialised value(s)</what>
  <stack>
    <frame>
      <ip>0x4D426C4</ip>
      <obj>/home/akhila/fuzzer_packages/fuzzedpackages/fbroc/src/fbroc.so</obj>
      <fn>ROC::build_index(Rcpp::Vector&lt;14, Rcpp::PreserveStorage&gt;)</fn>
      <dir>/home/akhila/fuzzer_packages/fuzzedpackages/fbroc/src</dir>
      <file>roc.cpp</file>
      <line>64</line>
    </frame>
    <frame>
      <ip>0x4D432AF</ip>
      <obj>/home/akhila/fuzzer_packages/fuzzedpackages/fbroc/src/fbroc.so</obj>
      <fn>ROC::ROC(Rcpp::Vector&lt;14, Rcpp::PreserveStorage&gt;, Rcpp::Vector&lt;13, Rcpp::PreserveStorage&gt;)</fn>
      <dir>/home/akhila/fuzzer_packages/fuzzedpackages/fbroc/src</dir>
      <file>roc.cpp</file>
      <line>288</line>
    </frame>
    <frame>
      <ip>0x4D340D6</ip>
      <obj>/home/akhila/fuzzer_packages/fuzzedpackages/fbroc/src/fbroc.so</obj>
      <fn>Bootstrapped_ROC::Bootstrapped_ROC(Rcpp::Vector&lt;14, Rcpp::PreserveStorage&gt;, Rcpp::Vector&lt;13, Rcpp::PreserveStorage&gt;)</fn>
      <dir>/home/akhila/fuzzer_packages/fuzzedpackages/fbroc/src</dir>
      <file>bootstrapper.cpp</file>
      <line>16</line>
    </frame>
    <frame>
      <ip>0x4D3D0C4</ip>
      <obj>/home/akhila/fuzzer_packages/fuzzedpackages/fbroc/src/fbroc.so</obj>
      <fn>tpr_fpr_boot(Rcpp::Vector&lt;14, Rcpp::PreserveStorage&gt;, Rcpp::Vector&lt;13, Rcpp::PreserveStorage&gt;, int)</fn>
      <dir>/home/akhila/fuzzer_packages/fuzzedpackages/fbroc/src</dir>
      <file>interface.single.cpp</file>
      <line>14</line>
    </frame>
    <frame>
      <ip>0x40A149</ip>
      <obj>/home/akhila/fuzzer_packages/fuzzedpackages/fbroc/inst/testfiles/tpr_fpr_boot/tpr_fpr_boot_DeepState_TestHarness</obj>
      <fn>DeepState_Test_fbroc_deepstate_test_tpr_fpr_boot_test()</fn>
      <dir>/home/akhila/fuzzer_packages/fuzzedpackages/fbroc/inst/testfiles/tpr_fpr_boot</dir>
      <file>tpr_fpr_boot_DeepState_TestHarness.cpp</file>
      <line>31</line>
    </frame>
    <frame>
      <ip>0x409B58</ip>
      <obj>/home/akhila/fuzzer_packages/fuzzedpackages/fbroc/inst/testfiles/tpr_fpr_boot/tpr_fpr_boot_DeepState_TestHarness</obj>
      <fn>DeepState_Run_fbroc_deepstate_test_tpr_fpr_boot_test()</fn>
      <dir>/home/akhila/fuzzer_packages/fuzzedpackages/fbroc/inst/testfiles/tpr_fpr_boot</dir>
      <file>tpr_fpr_boot_DeepState_TestHarness.cpp</file>
      <line>13</line>
    </frame>
    <frame>
      <ip>0x41D278</ip>
      <obj>/home/akhila/fuzzer_packages/fuzzedpackages/fbroc/inst/testfiles/tpr_fpr_boot/tpr_fpr_boot_DeepState_TestHarness</obj>
      <fn>DeepState_RunTest.isra.0</fn>
    </frame>
    <frame>
      <ip>0x41D519</ip>
      <obj>/home/akhila/fuzzer_packages/fuzzedpackages/fbroc/inst/testfiles/tpr_fpr_boot/tpr_fpr_boot_DeepState_TestHarness</obj>
      <fn>DeepState_ForkAndRunTest</fn>
    </frame>
    <frame>
      <ip>0x41D5F4</ip>
      <obj>/home/akhila/fuzzer_packages/fuzzedpackages/fbroc/inst/testfiles/tpr_fpr_boot/tpr_fpr_boot_DeepState_TestHarness</obj>
      <fn>DeepState_RunSavedTestCase</fn>
    </frame>
    <frame>
      <ip>0x407665</ip>
      <obj>/home/akhila/fuzzer_packages/fuzzedpackages/fbroc/inst/testfiles/tpr_fpr_boot/tpr_fpr_boot_DeepState_TestHarness</obj>
      <fn>main</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x4</unique>
  <tid>1</tid>
  <kind>InvalidRead</kind>
  <what>Invalid read of size 8</what>
  <stack>
    <frame>
      <ip>0x4D426BE</ip>
      <obj>/home/akhila/fuzzer_packages/fuzzedpackages/fbroc/src/fbroc.so</obj>
      <fn>ROC::build_index(Rcpp::Vector&lt;14, Rcpp::PreserveStorage&gt;)</fn>
      <dir>/home/akhila/fuzzer_packages/fuzzedpackages/fbroc/src</dir>
      <file>roc.cpp</file>
      <line>64</line>
    </frame>
    <frame>
      <ip>0x4D432AF</ip>
      <obj>/home/akhila/fuzzer_packages/fuzzedpackages/fbroc/src/fbroc.so</obj>
      <fn>ROC::ROC(Rcpp::Vector&lt;14, Rcpp::PreserveStorage&gt;, Rcpp::Vector&lt;13, Rcpp::PreserveStorage&gt;)</fn>
      <dir>/home/akhila/fuzzer_packages/fuzzedpackages/fbroc/src</dir>
      <file>roc.cpp</file>
      <line>288</line>
    </frame>
    <frame>
      <ip>0x4D340D6</ip>
      <obj>/home/akhila/fuzzer_packages/fuzzedpackages/fbroc/src/fbroc.so</obj>
      <fn>Bootstrapped_ROC::Bootstrapped_ROC(Rcpp::Vector&lt;14, Rcpp::PreserveStorage&gt;, Rcpp::Vector&lt;13, Rcpp::PreserveStorage&gt;)</fn>
      <dir>/home/akhila/fuzzer_packages/fuzzedpackages/fbroc/src</dir>
      <file>bootstrapper.cpp</file>
      <line>16</line>
    </frame>
    <frame>
      <ip>0x4D3D0C4</ip>
      <obj>/home/akhila/fuzzer_packages/fuzzedpackages/fbroc/src/fbroc.so</obj>
      <fn>tpr_fpr_boot(Rcpp::Vector&lt;14, Rcpp::PreserveStorage&gt;, Rcpp::Vector&lt;13, Rcpp::PreserveStorage&gt;, int)</fn>
      <dir>/home/akhila/fuzzer_packages/fuzzedpackages/fbroc/src</dir>
      <file>interface.single.cpp</file>
      <line>14</line>
    </frame>
    <frame>
      <ip>0x40A149</ip>
      <obj>/home/akhila/fuzzer_packages/fuzzedpackages/fbroc/inst/testfiles/tpr_fpr_boot/tpr_fpr_boot_DeepState_TestHarness</obj>
      <fn>DeepState_Test_fbroc_deepstate_test_tpr_fpr_boot_test()</fn>
      <dir>/home/akhila/fuzzer_packages/fuzzedpackages/fbroc/inst/testfiles/tpr_fpr_boot</dir>
      <file>tpr_fpr_boot_DeepState_TestHarness.cpp</file>
      <line>31</line>
    </frame>
    <frame>
      <ip>0x409B58</ip>
      <obj>/home/akhila/fuzzer_packages/fuzzedpackages/fbroc/inst/testfiles/tpr_fpr_boot/tpr_fpr_boot_DeepState_TestHarness</obj>
      <fn>DeepState_Run_fbroc_deepstate_test_tpr_fpr_boot_test()</fn>
      <dir>/home/akhila/fuzzer_packages/fuzzedpackages/fbroc/inst/testfiles/tpr_fpr_boot</dir>
      <file>tpr_fpr_boot_DeepState_TestHarness.cpp</file>
      <line>13</line>
    </frame>
    <frame>
      <ip>0x41D278</ip>
      <obj>/home/akhila/fuzzer_packages/fuzzedpackages/fbroc/inst/testfiles/tpr_fpr_boot/tpr_fpr_boot_DeepState_TestHarness</obj>
      <fn>DeepState_RunTest.isra.0</fn>
    </frame>
    <frame>
      <ip>0x41D519</ip>
      <obj>/home/akhila/fuzzer_packages/fuzzedpackages/fbroc/inst/testfiles/tpr_fpr_boot/tpr_fpr_boot_DeepState_TestHarness</obj>
      <fn>DeepState_ForkAndRunTest</fn>
    </frame>
    <frame>
      <ip>0x41D5F4</ip>
      <obj>/home/akhila/fuzzer_packages/fuzzedpackages/fbroc/inst/testfiles/tpr_fpr_boot/tpr_fpr_boot_DeepState_TestHarness</obj>
      <fn>DeepState_RunSavedTestCase</fn>
    </frame>
    <frame>
      <ip>0x407665</ip>
      <obj>/home/akhila/fuzzer_packages/fuzzedpackages/fbroc/inst/testfiles/tpr_fpr_boot/tpr_fpr_boot_DeepState_TestHarness</obj>
      <fn>main</fn>
    </frame>
  </stack>
  <auxwhat>Address 0x8dd5a78 is 0 bytes after a block of size 7,960 alloc'd</auxwhat>
  <stack>
    <frame>
      <ip>0x483B7F3</ip>
      <obj>/usr/lib/x86_64-linux-gnu/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>malloc</fn>
    </frame>
    <frame>
      <ip>0x49D42B3</ip>
      <obj>/usr/lib/R/lib/libR.so</obj>
    </frame>
    <frame>
      <ip>0x49D5EAB</ip>
      <obj>/usr/lib/R/lib/libR.so</obj>
      <fn>Rf_allocVector3</fn>
    </frame>
    <frame>
      <ip>0x4968D28</ip>
      <obj>/usr/lib/R/lib/libR.so</obj>
    </frame>
    <frame>
      <ip>0x497A1D0</ip>
      <obj>/usr/lib/R/lib/libR.so</obj>
    </frame>
    <frame>
      <ip>0x4994DD7</ip>
      <obj>/usr/lib/R/lib/libR.so</obj>
      <fn>Rf_eval</fn>
    </frame>
    <frame>
      <ip>0x4996C9E</ip>
      <obj>/usr/lib/R/lib/libR.so</obj>
    </frame>
    <frame>
      <ip>0x4997B91</ip>
      <obj>/usr/lib/R/lib/libR.so</obj>
      <fn>Rf_applyClosure</fn>
    </frame>
    <frame>
      <ip>0x498450D</ip>
      <obj>/usr/lib/R/lib/libR.so</obj>
    </frame>
    <frame>
      <ip>0x4994DD7</ip>
      <obj>/usr/lib/R/lib/libR.so</obj>
      <fn>Rf_eval</fn>
    </frame>
    <frame>
      <ip>0x4996C9E</ip>
      <obj>/usr/lib/R/lib/libR.so</obj>
    </frame>
    <frame>
      <ip>0x4997B91</ip>
      <obj>/usr/lib/R/lib/libR.so</obj>
      <fn>Rf_applyClosure</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x41c</unique>
  <tid>1</tid>
  <kind>InvalidRead</kind>
  <what>Invalid read of size 4</what>
  <stack>
    <frame>
      <ip>0x4D3F858</ip>
      <obj>/home/akhila/fuzzer_packages/fuzzedpackages/fbroc/src/fbroc.so</obj>
      <fn>ROC::get_positives_delta()</fn>
      <dir>/home/akhila/fuzzer_packages/fuzzedpackages/fbroc/src</dir>
      <file>roc.cpp</file>
      <line>225</line>
    </frame>
    <frame>
      <ip>0x4D4393A</ip>
      <obj>/home/akhila/fuzzer_packages/fuzzedpackages/fbroc/src/fbroc.so</obj>
      <fn>ROC::ROC(Rcpp::Vector&lt;14, Rcpp::PreserveStorage&gt;, Rcpp::Vector&lt;13, Rcpp::PreserveStorage&gt;)</fn>
      <dir>/home/akhila/fuzzer_packages/fuzzedpackages/fbroc/src</dir>
      <file>roc.cpp</file>
      <line>301</line>
    </frame>
    <frame>
      <ip>0x4D340D6</ip>
      <obj>/home/akhila/fuzzer_packages/fuzzedpackages/fbroc/src/fbroc.so</obj>
      <fn>Bootstrapped_ROC::Bootstrapped_ROC(Rcpp::Vector&lt;14, Rcpp::PreserveStorage&gt;, Rcpp::Vector&lt;13, Rcpp::PreserveStorage&gt;)</fn>
      <dir>/home/akhila/fuzzer_packages/fuzzedpackages/fbroc/src</dir>
      <file>bootstrapper.cpp</file>
      <line>16</line>
    </frame>
    <frame>
      <ip>0x4D3D0C4</ip>
      <obj>/home/akhila/fuzzer_packages/fuzzedpackages/fbroc/src/fbroc.so</obj>
      <fn>tpr_fpr_boot(Rcpp::Vector&lt;14, Rcpp::PreserveStorage&gt;, Rcpp::Vector&lt;13, Rcpp::PreserveStorage&gt;, int)</fn>
      <dir>/home/akhila/fuzzer_packages/fuzzedpackages/fbroc/src</dir>
      <file>interface.single.cpp</file>
      <line>14</line>
    </frame>
    <frame>
      <ip>0x40A149</ip>
      <obj>/home/akhila/fuzzer_packages/fuzzedpackages/fbroc/inst/testfiles/tpr_fpr_boot/tpr_fpr_boot_DeepState_TestHarness</obj>
      <fn>DeepState_Test_fbroc_deepstate_test_tpr_fpr_boot_test()</fn>
      <dir>/home/akhila/fuzzer_packages/fuzzedpackages/fbroc/inst/testfiles/tpr_fpr_boot</dir>
      <file>tpr_fpr_boot_DeepState_TestHarness.cpp</file>
      <line>31</line>
    </frame>
    <frame>
      <ip>0x409B58</ip>
      <obj>/home/akhila/fuzzer_packages/fuzzedpackages/fbroc/inst/testfiles/tpr_fpr_boot/tpr_fpr_boot_DeepState_TestHarness</obj>
      <fn>DeepState_Run_fbroc_deepstate_test_tpr_fpr_boot_test()</fn>
      <dir>/home/akhila/fuzzer_packages/fuzzedpackages/fbroc/inst/testfiles/tpr_fpr_boot</dir>
      <file>tpr_fpr_boot_DeepState_TestHarness.cpp</file>
      <line>13</line>
    </frame>
    <frame>
      <ip>0x41D278</ip>
      <obj>/home/akhila/fuzzer_packages/fuzzedpackages/fbroc/inst/testfiles/tpr_fpr_boot/tpr_fpr_boot_DeepState_TestHarness</obj>
      <fn>DeepState_RunTest.isra.0</fn>
    </frame>
    <frame>
      <ip>0x41D519</ip>
      <obj>/home/akhila/fuzzer_packages/fuzzedpackages/fbroc/inst/testfiles/tpr_fpr_boot/tpr_fpr_boot_DeepState_TestHarness</obj>
      <fn>DeepState_ForkAndRunTest</fn>
    </frame>
    <frame>
      <ip>0x41D5F4</ip>
      <obj>/home/akhila/fuzzer_packages/fuzzedpackages/fbroc/inst/testfiles/tpr_fpr_boot/tpr_fpr_boot_DeepState_TestHarness</obj>
      <fn>DeepState_RunSavedTestCase</fn>
    </frame>
    <frame>
      <ip>0x407665</ip>
      <obj>/home/akhila/fuzzer_packages/fuzzedpackages/fbroc/inst/testfiles/tpr_fpr_boot/tpr_fpr_boot_DeepState_TestHarness</obj>
      <fn>main</fn>
    </frame>
  </stack>
  <auxwhat>Address 0x7eb4284 is 3,892 bytes inside a block of size 7,160 free'd</auxwhat>
  <stack>
    <frame>
      <ip>0x483CA3F</ip>
      <obj>/usr/lib/x86_64-linux-gnu/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>free</fn>
    </frame>
    <frame>
      <ip>0x542A16F</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libz.so.1.2.11</obj>
      <fn>inflateEnd</fn>
    </frame>
    <frame>
      <ip>0x542E35A</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libz.so.1.2.11</obj>
      <fn>uncompress2</fn>
    </frame>
    <frame>
      <ip>0x542E406</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libz.so.1.2.11</obj>
      <fn>uncompress</fn>
    </frame>
    <frame>
      <ip>0x4925096</ip>
      <obj>/usr/lib/R/lib/libR.so</obj>
    </frame>
    <frame>
      <ip>0x4A3987C</ip>
      <obj>/usr/lib/R/lib/libR.so</obj>
    </frame>
    <frame>
      <ip>0x497A1D0</ip>
      <obj>/usr/lib/R/lib/libR.so</obj>
    </frame>
    <frame>
      <ip>0x4994DD7</ip>
      <obj>/usr/lib/R/lib/libR.so</obj>
      <fn>Rf_eval</fn>
    </frame>
    <frame>
      <ip>0x4996C9E</ip>
      <obj>/usr/lib/R/lib/libR.so</obj>
    </frame>
    <frame>
      <ip>0x4997B91</ip>
      <obj>/usr/lib/R/lib/libR.so</obj>
      <fn>Rf_applyClosure</fn>
    </frame>
    <frame>
      <ip>0x4994FFE</ip>
      <obj>/usr/lib/R/lib/libR.so</obj>
      <fn>Rf_eval</fn>
    </frame>
    <frame>
      <ip>0x4A31CE6</ip>
      <obj>/usr/lib/R/lib/libR.so</obj>
    </frame>
  </stack>
  <auxwhat>Block was alloc'd at</auxwhat>
  <stack>
    <frame>
      <ip>0x483B7F3</ip>
      <obj>/usr/lib/x86_64-linux-gnu/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>malloc</fn>
    </frame>
    <frame>
      <ip>0x5427BF9</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libz.so.1.2.11</obj>
      <fn>inflateInit2_</fn>
    </frame>
    <frame>
      <ip>0x542E2B1</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libz.so.1.2.11</obj>
      <fn>uncompress2</fn>
    </frame>
    <frame>
      <ip>0x542E406</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libz.so.1.2.11</obj>
      <fn>uncompress</fn>
    </frame>
    <frame>
      <ip>0x4925096</ip>
      <obj>/usr/lib/R/lib/libR.so</obj>
    </frame>
    <frame>
      <ip>0x4A3987C</ip>
      <obj>/usr/lib/R/lib/libR.so</obj>
    </frame>
    <frame>
      <ip>0x497A1D0</ip>
      <obj>/usr/lib/R/lib/libR.so</obj>
    </frame>
    <frame>
      <ip>0x4994DD7</ip>
      <obj>/usr/lib/R/lib/libR.so</obj>
      <fn>Rf_eval</fn>
    </frame>
    <frame>
      <ip>0x4996C9E</ip>
      <obj>/usr/lib/R/lib/libR.so</obj>
    </frame>
    <frame>
      <ip>0x4997B91</ip>
      <obj>/usr/lib/R/lib/libR.so</obj>
      <fn>Rf_applyClosure</fn>
    </frame>
    <frame>
      <ip>0x4994FFE</ip>
      <obj>/usr/lib/R/lib/libR.so</obj>
      <fn>Rf_eval</fn>
    </frame>
    <frame>
      <ip>0x4A31CE6</ip>
      <obj>/usr/lib/R/lib/libR.so</obj>
    </frame>
  </stack>
</error>


<status>
  <state>FINISHED</state>
  <time>00:00:00:38.423 </time>
</status>

<errorcounts>
</errorcounts>

<suppcounts>
</suppcounts>

</valgrindoutput>

