// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <Rcpp.h>

using namespace Rcpp;

// add_roc_points
List add_roc_points(NumericVector tpr, NumericVector fpr);
RcppExport SEXP _fbroc_add_roc_points(SEXP tprSEXP, SEXP fprSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type tpr(tprSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type fpr(fprSEXP);
    rcpp_result_gen = Rcpp::wrap(add_roc_points(tpr, fpr));
    return rcpp_result_gen;
END_RCPP
}
// roc_analysis
List roc_analysis(NumericVector pred, IntegerVector true_class);
RcppExport SEXP _fbroc_roc_analysis(SEXP predSEXP, SEXP true_classSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type pred(predSEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type true_class(true_classSEXP);
    rcpp_result_gen = Rcpp::wrap(roc_analysis(pred, true_class));
    return rcpp_result_gen;
END_RCPP
}
// tpr_fpr_boot_paired
List tpr_fpr_boot_paired(NumericVector pred1, NumericVector pred2, IntegerVector true_class, int n_boot);
RcppExport SEXP _fbroc_tpr_fpr_boot_paired(SEXP pred1SEXP, SEXP pred2SEXP, SEXP true_classSEXP, SEXP n_bootSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type pred1(pred1SEXP);
    Rcpp::traits::input_parameter< NumericVector >::type pred2(pred2SEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type true_class(true_classSEXP);
    Rcpp::traits::input_parameter< int >::type n_boot(n_bootSEXP);
    rcpp_result_gen = Rcpp::wrap(tpr_fpr_boot_paired(pred1, pred2, true_class, n_boot));
    return rcpp_result_gen;
END_RCPP
}
// paired_roc_analysis
List paired_roc_analysis(NumericVector pred1, NumericVector pred2, IntegerVector true_class);
RcppExport SEXP _fbroc_paired_roc_analysis(SEXP pred1SEXP, SEXP pred2SEXP, SEXP true_classSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type pred1(pred1SEXP);
    Rcpp::traits::input_parameter< NumericVector >::type pred2(pred2SEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type true_class(true_classSEXP);
    rcpp_result_gen = Rcpp::wrap(paired_roc_analysis(pred1, pred2, true_class));
    return rcpp_result_gen;
END_RCPP
}
// get_cached_perf_paired
List get_cached_perf_paired(NumericMatrix tpr1, NumericMatrix fpr1, NumericMatrix tpr2, NumericMatrix fpr2, NumericVector param, int measure);
RcppExport SEXP _fbroc_get_cached_perf_paired(SEXP tpr1SEXP, SEXP fpr1SEXP, SEXP tpr2SEXP, SEXP fpr2SEXP, SEXP paramSEXP, SEXP measureSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericMatrix >::type tpr1(tpr1SEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type fpr1(fpr1SEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type tpr2(tpr2SEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type fpr2(fpr2SEXP);
    Rcpp::traits::input_parameter< NumericVector >::type param(paramSEXP);
    Rcpp::traits::input_parameter< int >::type measure(measureSEXP);
    rcpp_result_gen = Rcpp::wrap(get_cached_perf_paired(tpr1, fpr1, tpr2, fpr2, param, measure));
    return rcpp_result_gen;
END_RCPP
}
// get_uncached_perf_paired
List get_uncached_perf_paired(NumericVector pred1, NumericVector pred2, IntegerVector true_class, NumericVector param, int n_boot, int measure);
RcppExport SEXP _fbroc_get_uncached_perf_paired(SEXP pred1SEXP, SEXP pred2SEXP, SEXP true_classSEXP, SEXP paramSEXP, SEXP n_bootSEXP, SEXP measureSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type pred1(pred1SEXP);
    Rcpp::traits::input_parameter< NumericVector >::type pred2(pred2SEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type true_class(true_classSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type param(paramSEXP);
    Rcpp::traits::input_parameter< int >::type n_boot(n_bootSEXP);
    Rcpp::traits::input_parameter< int >::type measure(measureSEXP);
    rcpp_result_gen = Rcpp::wrap(get_uncached_perf_paired(pred1, pred2, true_class, param, n_boot, measure));
    return rcpp_result_gen;
END_RCPP
}
// tpr_at_fpr_delta_uncached
NumericMatrix tpr_at_fpr_delta_uncached(NumericVector pred1, NumericVector pred2, IntegerVector true_class, int n_boot, int n_steps);
RcppExport SEXP _fbroc_tpr_at_fpr_delta_uncached(SEXP pred1SEXP, SEXP pred2SEXP, SEXP true_classSEXP, SEXP n_bootSEXP, SEXP n_stepsSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type pred1(pred1SEXP);
    Rcpp::traits::input_parameter< NumericVector >::type pred2(pred2SEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type true_class(true_classSEXP);
    Rcpp::traits::input_parameter< int >::type n_boot(n_bootSEXP);
    Rcpp::traits::input_parameter< int >::type n_steps(n_stepsSEXP);
    rcpp_result_gen = Rcpp::wrap(tpr_at_fpr_delta_uncached(pred1, pred2, true_class, n_boot, n_steps));
    return rcpp_result_gen;
END_RCPP
}
// tpr_at_fpr_delta_cached
NumericMatrix tpr_at_fpr_delta_cached(NumericMatrix tpr1, NumericMatrix fpr1, NumericMatrix tpr2, NumericMatrix fpr2, int n_steps);
RcppExport SEXP _fbroc_tpr_at_fpr_delta_cached(SEXP tpr1SEXP, SEXP fpr1SEXP, SEXP tpr2SEXP, SEXP fpr2SEXP, SEXP n_stepsSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericMatrix >::type tpr1(tpr1SEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type fpr1(fpr1SEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type tpr2(tpr2SEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type fpr2(fpr2SEXP);
    Rcpp::traits::input_parameter< int >::type n_steps(n_stepsSEXP);
    rcpp_result_gen = Rcpp::wrap(tpr_at_fpr_delta_cached(tpr1, fpr1, tpr2, fpr2, n_steps));
    return rcpp_result_gen;
END_RCPP
}
// fpr_at_tpr_delta_cached
NumericMatrix fpr_at_tpr_delta_cached(NumericMatrix tpr1, NumericMatrix fpr1, NumericMatrix tpr2, NumericMatrix fpr2, int n_steps);
RcppExport SEXP _fbroc_fpr_at_tpr_delta_cached(SEXP tpr1SEXP, SEXP fpr1SEXP, SEXP tpr2SEXP, SEXP fpr2SEXP, SEXP n_stepsSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericMatrix >::type tpr1(tpr1SEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type fpr1(fpr1SEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type tpr2(tpr2SEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type fpr2(fpr2SEXP);
    Rcpp::traits::input_parameter< int >::type n_steps(n_stepsSEXP);
    rcpp_result_gen = Rcpp::wrap(fpr_at_tpr_delta_cached(tpr1, fpr1, tpr2, fpr2, n_steps));
    return rcpp_result_gen;
END_RCPP
}
// fpr_at_tpr_delta_uncached
NumericMatrix fpr_at_tpr_delta_uncached(NumericVector pred1, NumericVector pred2, IntegerVector true_class, int n_boot, int n_steps);
RcppExport SEXP _fbroc_fpr_at_tpr_delta_uncached(SEXP pred1SEXP, SEXP pred2SEXP, SEXP true_classSEXP, SEXP n_bootSEXP, SEXP n_stepsSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type pred1(pred1SEXP);
    Rcpp::traits::input_parameter< NumericVector >::type pred2(pred2SEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type true_class(true_classSEXP);
    Rcpp::traits::input_parameter< int >::type n_boot(n_bootSEXP);
    Rcpp::traits::input_parameter< int >::type n_steps(n_stepsSEXP);
    rcpp_result_gen = Rcpp::wrap(fpr_at_tpr_delta_uncached(pred1, pred2, true_class, n_boot, n_steps));
    return rcpp_result_gen;
END_RCPP
}
// tpr_fpr_boot
List tpr_fpr_boot(NumericVector pred, IntegerVector true_class, int n_boot);
RcppExport SEXP _fbroc_tpr_fpr_boot(SEXP predSEXP, SEXP true_classSEXP, SEXP n_bootSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type pred(predSEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type true_class(true_classSEXP);
    Rcpp::traits::input_parameter< int >::type n_boot(n_bootSEXP);
    rcpp_result_gen = Rcpp::wrap(tpr_fpr_boot(pred, true_class, n_boot));
    return rcpp_result_gen;
END_RCPP
}
// get_uncached_perf
NumericVector get_uncached_perf(NumericVector pred, IntegerVector true_class, NumericVector param, int n_boot, int measure);
RcppExport SEXP _fbroc_get_uncached_perf(SEXP predSEXP, SEXP true_classSEXP, SEXP paramSEXP, SEXP n_bootSEXP, SEXP measureSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type pred(predSEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type true_class(true_classSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type param(paramSEXP);
    Rcpp::traits::input_parameter< int >::type n_boot(n_bootSEXP);
    Rcpp::traits::input_parameter< int >::type measure(measureSEXP);
    rcpp_result_gen = Rcpp::wrap(get_uncached_perf(pred, true_class, param, n_boot, measure));
    return rcpp_result_gen;
END_RCPP
}
// get_cached_perf
NumericVector get_cached_perf(NumericMatrix tpr, NumericMatrix fpr, NumericVector param, int measure);
RcppExport SEXP _fbroc_get_cached_perf(SEXP tprSEXP, SEXP fprSEXP, SEXP paramSEXP, SEXP measureSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericMatrix >::type tpr(tprSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type fpr(fprSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type param(paramSEXP);
    Rcpp::traits::input_parameter< int >::type measure(measureSEXP);
    rcpp_result_gen = Rcpp::wrap(get_cached_perf(tpr, fpr, param, measure));
    return rcpp_result_gen;
END_RCPP
}
// tpr_at_fpr_uncached
NumericMatrix tpr_at_fpr_uncached(NumericVector pred, IntegerVector true_class, int n_boot, int n_steps);
RcppExport SEXP _fbroc_tpr_at_fpr_uncached(SEXP predSEXP, SEXP true_classSEXP, SEXP n_bootSEXP, SEXP n_stepsSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type pred(predSEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type true_class(true_classSEXP);
    Rcpp::traits::input_parameter< int >::type n_boot(n_bootSEXP);
    Rcpp::traits::input_parameter< int >::type n_steps(n_stepsSEXP);
    rcpp_result_gen = Rcpp::wrap(tpr_at_fpr_uncached(pred, true_class, n_boot, n_steps));
    return rcpp_result_gen;
END_RCPP
}
// tpr_at_fpr_cached
NumericMatrix tpr_at_fpr_cached(NumericMatrix tpr, NumericMatrix fpr, int n_steps);
RcppExport SEXP _fbroc_tpr_at_fpr_cached(SEXP tprSEXP, SEXP fprSEXP, SEXP n_stepsSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericMatrix >::type tpr(tprSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type fpr(fprSEXP);
    Rcpp::traits::input_parameter< int >::type n_steps(n_stepsSEXP);
    rcpp_result_gen = Rcpp::wrap(tpr_at_fpr_cached(tpr, fpr, n_steps));
    return rcpp_result_gen;
END_RCPP
}
// fpr_at_tpr_cached
NumericMatrix fpr_at_tpr_cached(NumericMatrix tpr, NumericMatrix fpr, int n_steps);
RcppExport SEXP _fbroc_fpr_at_tpr_cached(SEXP tprSEXP, SEXP fprSEXP, SEXP n_stepsSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericMatrix >::type tpr(tprSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type fpr(fprSEXP);
    Rcpp::traits::input_parameter< int >::type n_steps(n_stepsSEXP);
    rcpp_result_gen = Rcpp::wrap(fpr_at_tpr_cached(tpr, fpr, n_steps));
    return rcpp_result_gen;
END_RCPP
}
// fpr_at_tpr_uncached
NumericMatrix fpr_at_tpr_uncached(NumericVector pred, IntegerVector true_class, int n_boot, int n_steps);
RcppExport SEXP _fbroc_fpr_at_tpr_uncached(SEXP predSEXP, SEXP true_classSEXP, SEXP n_bootSEXP, SEXP n_stepsSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type pred(predSEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type true_class(true_classSEXP);
    Rcpp::traits::input_parameter< int >::type n_boot(n_bootSEXP);
    Rcpp::traits::input_parameter< int >::type n_steps(n_stepsSEXP);
    rcpp_result_gen = Rcpp::wrap(fpr_at_tpr_uncached(pred, true_class, n_boot, n_steps));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_fbroc_add_roc_points", (DL_FUNC) &_fbroc_add_roc_points, 2},
    {"_fbroc_roc_analysis", (DL_FUNC) &_fbroc_roc_analysis, 2},
    {"_fbroc_tpr_fpr_boot_paired", (DL_FUNC) &_fbroc_tpr_fpr_boot_paired, 4},
    {"_fbroc_paired_roc_analysis", (DL_FUNC) &_fbroc_paired_roc_analysis, 3},
    {"_fbroc_get_cached_perf_paired", (DL_FUNC) &_fbroc_get_cached_perf_paired, 6},
    {"_fbroc_get_uncached_perf_paired", (DL_FUNC) &_fbroc_get_uncached_perf_paired, 6},
    {"_fbroc_tpr_at_fpr_delta_uncached", (DL_FUNC) &_fbroc_tpr_at_fpr_delta_uncached, 5},
    {"_fbroc_tpr_at_fpr_delta_cached", (DL_FUNC) &_fbroc_tpr_at_fpr_delta_cached, 5},
    {"_fbroc_fpr_at_tpr_delta_cached", (DL_FUNC) &_fbroc_fpr_at_tpr_delta_cached, 5},
    {"_fbroc_fpr_at_tpr_delta_uncached", (DL_FUNC) &_fbroc_fpr_at_tpr_delta_uncached, 5},
    {"_fbroc_tpr_fpr_boot", (DL_FUNC) &_fbroc_tpr_fpr_boot, 3},
    {"_fbroc_get_uncached_perf", (DL_FUNC) &_fbroc_get_uncached_perf, 5},
    {"_fbroc_get_cached_perf", (DL_FUNC) &_fbroc_get_cached_perf, 4},
    {"_fbroc_tpr_at_fpr_uncached", (DL_FUNC) &_fbroc_tpr_at_fpr_uncached, 4},
    {"_fbroc_tpr_at_fpr_cached", (DL_FUNC) &_fbroc_tpr_at_fpr_cached, 3},
    {"_fbroc_fpr_at_tpr_cached", (DL_FUNC) &_fbroc_fpr_at_tpr_cached, 3},
    {"_fbroc_fpr_at_tpr_uncached", (DL_FUNC) &_fbroc_fpr_at_tpr_uncached, 4},
    {NULL, NULL, 0}
};

RcppExport void R_init_fbroc(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
