// AUTOMATICALLY GENERATED BY RCPPDEEPSTATE PLEASE DO NOT EDIT BY HAND, INSTEAD EDIT
// mloglik1e_DeepState_TestHarness_generation.cpp and mloglik1e_DeepState_TestHarness_checks.cpp

#include <fstream>
#include <RInside.h>
#include <iostream>
#include <RcppDeepState.h>
#include <qs.h>
#include <DeepState.hpp>

double mloglik1e(NumericVector jtms, double TT, NumericVector nuvs, NumericVector gcoef, double InuT);

TEST(IHSEP_deepstate_test,mloglik1e_test){
  RInside R;
  std::cout << "input starts" << std::endl;
  NumericVector jtms  = RcppDeepState_NumericVector();
  qs::c_qsave(jtms,"/home/akhila/fuzzer_packages/fuzzedpackages/IHSEP/inst/testfiles/mloglik1e/inputs/jtms.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "jtms values: "<< jtms << std::endl;
  NumericVector TT(1);
  TT[0]  = RcppDeepState_double();
  qs::c_qsave(TT,"/home/akhila/fuzzer_packages/fuzzedpackages/IHSEP/inst/testfiles/mloglik1e/inputs/TT.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "TT values: "<< TT << std::endl;
  NumericVector nuvs  = RcppDeepState_NumericVector();
  qs::c_qsave(nuvs,"/home/akhila/fuzzer_packages/fuzzedpackages/IHSEP/inst/testfiles/mloglik1e/inputs/nuvs.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "nuvs values: "<< nuvs << std::endl;
  NumericVector gcoef  = RcppDeepState_NumericVector();
  qs::c_qsave(gcoef,"/home/akhila/fuzzer_packages/fuzzedpackages/IHSEP/inst/testfiles/mloglik1e/inputs/gcoef.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "gcoef values: "<< gcoef << std::endl;
  NumericVector InuT(1);
  InuT[0]  = RcppDeepState_double();
  qs::c_qsave(InuT,"/home/akhila/fuzzer_packages/fuzzedpackages/IHSEP/inst/testfiles/mloglik1e/inputs/InuT.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "InuT values: "<< InuT << std::endl;
  std::cout << "input ends" << std::endl;
  try{
    mloglik1e(jtms,TT[0],nuvs,gcoef,InuT[0]);
  }
  catch(Rcpp::exception& e){
    std::cout<<"Exception Handled"<<std::endl;
  }
}
