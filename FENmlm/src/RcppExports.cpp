// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <Rcpp.h>

using namespace Rcpp;

// compute_cluster_coef_r
SEXP compute_cluster_coef_r(int family, int nb_coef, double theta, double diffMax_NR, SEXP r_mu, SEXP r_lhs, SEXP r_sum_y, SEXP r_dum, SEXP r_obsCluster, SEXP r_table, SEXP r_cumtable, int nbThreads);
RcppExport SEXP _FENmlm_compute_cluster_coef_r(SEXP familySEXP, SEXP nb_coefSEXP, SEXP thetaSEXP, SEXP diffMax_NRSEXP, SEXP r_muSEXP, SEXP r_lhsSEXP, SEXP r_sum_ySEXP, SEXP r_dumSEXP, SEXP r_obsClusterSEXP, SEXP r_tableSEXP, SEXP r_cumtableSEXP, SEXP nbThreadsSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< int >::type family(familySEXP);
    Rcpp::traits::input_parameter< int >::type nb_coef(nb_coefSEXP);
    Rcpp::traits::input_parameter< double >::type theta(thetaSEXP);
    Rcpp::traits::input_parameter< double >::type diffMax_NR(diffMax_NRSEXP);
    Rcpp::traits::input_parameter< SEXP >::type r_mu(r_muSEXP);
    Rcpp::traits::input_parameter< SEXP >::type r_lhs(r_lhsSEXP);
    Rcpp::traits::input_parameter< SEXP >::type r_sum_y(r_sum_ySEXP);
    Rcpp::traits::input_parameter< SEXP >::type r_dum(r_dumSEXP);
    Rcpp::traits::input_parameter< SEXP >::type r_obsCluster(r_obsClusterSEXP);
    Rcpp::traits::input_parameter< SEXP >::type r_table(r_tableSEXP);
    Rcpp::traits::input_parameter< SEXP >::type r_cumtable(r_cumtableSEXP);
    Rcpp::traits::input_parameter< int >::type nbThreads(nbThreadsSEXP);
    rcpp_result_gen = Rcpp::wrap(compute_cluster_coef_r(family, nb_coef, theta, diffMax_NR, r_mu, r_lhs, r_sum_y, r_dum, r_obsCluster, r_table, r_cumtable, nbThreads));
    return rcpp_result_gen;
END_RCPP
}
// update_mu_single_cluster
SEXP update_mu_single_cluster(int family, int nb_cluster, double theta, double diffMax_NR, SEXP mu_in, SEXP lhs, SEXP sum_y, SEXP dum, SEXP obsCluster, SEXP table, SEXP cumtable, int nbThreads);
RcppExport SEXP _FENmlm_update_mu_single_cluster(SEXP familySEXP, SEXP nb_clusterSEXP, SEXP thetaSEXP, SEXP diffMax_NRSEXP, SEXP mu_inSEXP, SEXP lhsSEXP, SEXP sum_ySEXP, SEXP dumSEXP, SEXP obsClusterSEXP, SEXP tableSEXP, SEXP cumtableSEXP, SEXP nbThreadsSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< int >::type family(familySEXP);
    Rcpp::traits::input_parameter< int >::type nb_cluster(nb_clusterSEXP);
    Rcpp::traits::input_parameter< double >::type theta(thetaSEXP);
    Rcpp::traits::input_parameter< double >::type diffMax_NR(diffMax_NRSEXP);
    Rcpp::traits::input_parameter< SEXP >::type mu_in(mu_inSEXP);
    Rcpp::traits::input_parameter< SEXP >::type lhs(lhsSEXP);
    Rcpp::traits::input_parameter< SEXP >::type sum_y(sum_ySEXP);
    Rcpp::traits::input_parameter< SEXP >::type dum(dumSEXP);
    Rcpp::traits::input_parameter< SEXP >::type obsCluster(obsClusterSEXP);
    Rcpp::traits::input_parameter< SEXP >::type table(tableSEXP);
    Rcpp::traits::input_parameter< SEXP >::type cumtable(cumtableSEXP);
    Rcpp::traits::input_parameter< int >::type nbThreads(nbThreadsSEXP);
    rcpp_result_gen = Rcpp::wrap(update_mu_single_cluster(family, nb_cluster, theta, diffMax_NR, mu_in, lhs, sum_y, dum, obsCluster, table, cumtable, nbThreads));
    return rcpp_result_gen;
END_RCPP
}
// cpp_conv_acc_gnl
List cpp_conv_acc_gnl(int family, int iterMax, double diffMax, double diffMax_NR, double theta, SEXP nb_cluster_all, SEXP lhs, SEXP mu_init, SEXP dum_vector, SEXP tableCluster_vector, SEXP sum_y_vector, SEXP cumtable_vector, SEXP obsCluster_vector, int nbThreads);
RcppExport SEXP _FENmlm_cpp_conv_acc_gnl(SEXP familySEXP, SEXP iterMaxSEXP, SEXP diffMaxSEXP, SEXP diffMax_NRSEXP, SEXP thetaSEXP, SEXP nb_cluster_allSEXP, SEXP lhsSEXP, SEXP mu_initSEXP, SEXP dum_vectorSEXP, SEXP tableCluster_vectorSEXP, SEXP sum_y_vectorSEXP, SEXP cumtable_vectorSEXP, SEXP obsCluster_vectorSEXP, SEXP nbThreadsSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< int >::type family(familySEXP);
    Rcpp::traits::input_parameter< int >::type iterMax(iterMaxSEXP);
    Rcpp::traits::input_parameter< double >::type diffMax(diffMaxSEXP);
    Rcpp::traits::input_parameter< double >::type diffMax_NR(diffMax_NRSEXP);
    Rcpp::traits::input_parameter< double >::type theta(thetaSEXP);
    Rcpp::traits::input_parameter< SEXP >::type nb_cluster_all(nb_cluster_allSEXP);
    Rcpp::traits::input_parameter< SEXP >::type lhs(lhsSEXP);
    Rcpp::traits::input_parameter< SEXP >::type mu_init(mu_initSEXP);
    Rcpp::traits::input_parameter< SEXP >::type dum_vector(dum_vectorSEXP);
    Rcpp::traits::input_parameter< SEXP >::type tableCluster_vector(tableCluster_vectorSEXP);
    Rcpp::traits::input_parameter< SEXP >::type sum_y_vector(sum_y_vectorSEXP);
    Rcpp::traits::input_parameter< SEXP >::type cumtable_vector(cumtable_vectorSEXP);
    Rcpp::traits::input_parameter< SEXP >::type obsCluster_vector(obsCluster_vectorSEXP);
    Rcpp::traits::input_parameter< int >::type nbThreads(nbThreadsSEXP);
    rcpp_result_gen = Rcpp::wrap(cpp_conv_acc_gnl(family, iterMax, diffMax, diffMax_NR, theta, nb_cluster_all, lhs, mu_init, dum_vector, tableCluster_vector, sum_y_vector, cumtable_vector, obsCluster_vector, nbThreads));
    return rcpp_result_gen;
END_RCPP
}
// cpp_conv_seq_gnl
List cpp_conv_seq_gnl(int family, int iterMax, double diffMax, double diffMax_NR, double theta, SEXP nb_cluster_all, SEXP lhs, SEXP mu_init, SEXP dum_vector, SEXP tableCluster_vector, SEXP sum_y_vector, SEXP cumtable_vector, SEXP obsCluster_vector, int nbThreads);
RcppExport SEXP _FENmlm_cpp_conv_seq_gnl(SEXP familySEXP, SEXP iterMaxSEXP, SEXP diffMaxSEXP, SEXP diffMax_NRSEXP, SEXP thetaSEXP, SEXP nb_cluster_allSEXP, SEXP lhsSEXP, SEXP mu_initSEXP, SEXP dum_vectorSEXP, SEXP tableCluster_vectorSEXP, SEXP sum_y_vectorSEXP, SEXP cumtable_vectorSEXP, SEXP obsCluster_vectorSEXP, SEXP nbThreadsSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< int >::type family(familySEXP);
    Rcpp::traits::input_parameter< int >::type iterMax(iterMaxSEXP);
    Rcpp::traits::input_parameter< double >::type diffMax(diffMaxSEXP);
    Rcpp::traits::input_parameter< double >::type diffMax_NR(diffMax_NRSEXP);
    Rcpp::traits::input_parameter< double >::type theta(thetaSEXP);
    Rcpp::traits::input_parameter< SEXP >::type nb_cluster_all(nb_cluster_allSEXP);
    Rcpp::traits::input_parameter< SEXP >::type lhs(lhsSEXP);
    Rcpp::traits::input_parameter< SEXP >::type mu_init(mu_initSEXP);
    Rcpp::traits::input_parameter< SEXP >::type dum_vector(dum_vectorSEXP);
    Rcpp::traits::input_parameter< SEXP >::type tableCluster_vector(tableCluster_vectorSEXP);
    Rcpp::traits::input_parameter< SEXP >::type sum_y_vector(sum_y_vectorSEXP);
    Rcpp::traits::input_parameter< SEXP >::type cumtable_vector(cumtable_vectorSEXP);
    Rcpp::traits::input_parameter< SEXP >::type obsCluster_vector(obsCluster_vectorSEXP);
    Rcpp::traits::input_parameter< int >::type nbThreads(nbThreadsSEXP);
    rcpp_result_gen = Rcpp::wrap(cpp_conv_seq_gnl(family, iterMax, diffMax, diffMax_NR, theta, nb_cluster_all, lhs, mu_init, dum_vector, tableCluster_vector, sum_y_vector, cumtable_vector, obsCluster_vector, nbThreads));
    return rcpp_result_gen;
END_RCPP
}
// get_n_cells
int get_n_cells(IntegerVector index_i, IntegerVector index_j);
RcppExport SEXP _FENmlm_get_n_cells(SEXP index_iSEXP, SEXP index_jSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< IntegerVector >::type index_i(index_iSEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type index_j(index_jSEXP);
    rcpp_result_gen = Rcpp::wrap(get_n_cells(index_i, index_j));
    return rcpp_result_gen;
END_RCPP
}
// cpp_conv_acc_poi_2
List cpp_conv_acc_poi_2(int n_i, int n_j, int n_cells, SEXP index_i, SEXP index_j, SEXP dum_vector, SEXP sum_y_vector, int iterMax, double diffMax, SEXP exp_mu_in, SEXP order);
RcppExport SEXP _FENmlm_cpp_conv_acc_poi_2(SEXP n_iSEXP, SEXP n_jSEXP, SEXP n_cellsSEXP, SEXP index_iSEXP, SEXP index_jSEXP, SEXP dum_vectorSEXP, SEXP sum_y_vectorSEXP, SEXP iterMaxSEXP, SEXP diffMaxSEXP, SEXP exp_mu_inSEXP, SEXP orderSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< int >::type n_i(n_iSEXP);
    Rcpp::traits::input_parameter< int >::type n_j(n_jSEXP);
    Rcpp::traits::input_parameter< int >::type n_cells(n_cellsSEXP);
    Rcpp::traits::input_parameter< SEXP >::type index_i(index_iSEXP);
    Rcpp::traits::input_parameter< SEXP >::type index_j(index_jSEXP);
    Rcpp::traits::input_parameter< SEXP >::type dum_vector(dum_vectorSEXP);
    Rcpp::traits::input_parameter< SEXP >::type sum_y_vector(sum_y_vectorSEXP);
    Rcpp::traits::input_parameter< int >::type iterMax(iterMaxSEXP);
    Rcpp::traits::input_parameter< double >::type diffMax(diffMaxSEXP);
    Rcpp::traits::input_parameter< SEXP >::type exp_mu_in(exp_mu_inSEXP);
    Rcpp::traits::input_parameter< SEXP >::type order(orderSEXP);
    rcpp_result_gen = Rcpp::wrap(cpp_conv_acc_poi_2(n_i, n_j, n_cells, index_i, index_j, dum_vector, sum_y_vector, iterMax, diffMax, exp_mu_in, order));
    return rcpp_result_gen;
END_RCPP
}
// cpp_conv_seq_poi_2
List cpp_conv_seq_poi_2(int n_i, int n_j, int n_cells, SEXP index_i, SEXP index_j, SEXP dum_vector, SEXP sum_y_vector, int iterMax, double diffMax, SEXP exp_mu_in, SEXP order);
RcppExport SEXP _FENmlm_cpp_conv_seq_poi_2(SEXP n_iSEXP, SEXP n_jSEXP, SEXP n_cellsSEXP, SEXP index_iSEXP, SEXP index_jSEXP, SEXP dum_vectorSEXP, SEXP sum_y_vectorSEXP, SEXP iterMaxSEXP, SEXP diffMaxSEXP, SEXP exp_mu_inSEXP, SEXP orderSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< int >::type n_i(n_iSEXP);
    Rcpp::traits::input_parameter< int >::type n_j(n_jSEXP);
    Rcpp::traits::input_parameter< int >::type n_cells(n_cellsSEXP);
    Rcpp::traits::input_parameter< SEXP >::type index_i(index_iSEXP);
    Rcpp::traits::input_parameter< SEXP >::type index_j(index_jSEXP);
    Rcpp::traits::input_parameter< SEXP >::type dum_vector(dum_vectorSEXP);
    Rcpp::traits::input_parameter< SEXP >::type sum_y_vector(sum_y_vectorSEXP);
    Rcpp::traits::input_parameter< int >::type iterMax(iterMaxSEXP);
    Rcpp::traits::input_parameter< double >::type diffMax(diffMaxSEXP);
    Rcpp::traits::input_parameter< SEXP >::type exp_mu_in(exp_mu_inSEXP);
    Rcpp::traits::input_parameter< SEXP >::type order(orderSEXP);
    rcpp_result_gen = Rcpp::wrap(cpp_conv_seq_poi_2(n_i, n_j, n_cells, index_i, index_j, dum_vector, sum_y_vector, iterMax, diffMax, exp_mu_in, order));
    return rcpp_result_gen;
END_RCPP
}
// cpp_fixed_cost_gaussian
List cpp_fixed_cost_gaussian(int n_i, int n_cells, SEXP index_i, SEXP index_j, SEXP order, SEXP invTableCluster_vector, SEXP dum_vector);
RcppExport SEXP _FENmlm_cpp_fixed_cost_gaussian(SEXP n_iSEXP, SEXP n_cellsSEXP, SEXP index_iSEXP, SEXP index_jSEXP, SEXP orderSEXP, SEXP invTableCluster_vectorSEXP, SEXP dum_vectorSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< int >::type n_i(n_iSEXP);
    Rcpp::traits::input_parameter< int >::type n_cells(n_cellsSEXP);
    Rcpp::traits::input_parameter< SEXP >::type index_i(index_iSEXP);
    Rcpp::traits::input_parameter< SEXP >::type index_j(index_jSEXP);
    Rcpp::traits::input_parameter< SEXP >::type order(orderSEXP);
    Rcpp::traits::input_parameter< SEXP >::type invTableCluster_vector(invTableCluster_vectorSEXP);
    Rcpp::traits::input_parameter< SEXP >::type dum_vector(dum_vectorSEXP);
    rcpp_result_gen = Rcpp::wrap(cpp_fixed_cost_gaussian(n_i, n_cells, index_i, index_j, order, invTableCluster_vector, dum_vector));
    return rcpp_result_gen;
END_RCPP
}
// cpp_conv_acc_gau_2
List cpp_conv_acc_gau_2(int n_i, int n_j, int n_cells, SEXP r_mat_row, SEXP r_mat_col, SEXP r_mat_value_Ab, SEXP r_mat_value_Ba, SEXP dum_vector, SEXP lhs, SEXP invTableCluster_vector, int iterMax, double diffMax, SEXP mu_in);
RcppExport SEXP _FENmlm_cpp_conv_acc_gau_2(SEXP n_iSEXP, SEXP n_jSEXP, SEXP n_cellsSEXP, SEXP r_mat_rowSEXP, SEXP r_mat_colSEXP, SEXP r_mat_value_AbSEXP, SEXP r_mat_value_BaSEXP, SEXP dum_vectorSEXP, SEXP lhsSEXP, SEXP invTableCluster_vectorSEXP, SEXP iterMaxSEXP, SEXP diffMaxSEXP, SEXP mu_inSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< int >::type n_i(n_iSEXP);
    Rcpp::traits::input_parameter< int >::type n_j(n_jSEXP);
    Rcpp::traits::input_parameter< int >::type n_cells(n_cellsSEXP);
    Rcpp::traits::input_parameter< SEXP >::type r_mat_row(r_mat_rowSEXP);
    Rcpp::traits::input_parameter< SEXP >::type r_mat_col(r_mat_colSEXP);
    Rcpp::traits::input_parameter< SEXP >::type r_mat_value_Ab(r_mat_value_AbSEXP);
    Rcpp::traits::input_parameter< SEXP >::type r_mat_value_Ba(r_mat_value_BaSEXP);
    Rcpp::traits::input_parameter< SEXP >::type dum_vector(dum_vectorSEXP);
    Rcpp::traits::input_parameter< SEXP >::type lhs(lhsSEXP);
    Rcpp::traits::input_parameter< SEXP >::type invTableCluster_vector(invTableCluster_vectorSEXP);
    Rcpp::traits::input_parameter< int >::type iterMax(iterMaxSEXP);
    Rcpp::traits::input_parameter< double >::type diffMax(diffMaxSEXP);
    Rcpp::traits::input_parameter< SEXP >::type mu_in(mu_inSEXP);
    rcpp_result_gen = Rcpp::wrap(cpp_conv_acc_gau_2(n_i, n_j, n_cells, r_mat_row, r_mat_col, r_mat_value_Ab, r_mat_value_Ba, dum_vector, lhs, invTableCluster_vector, iterMax, diffMax, mu_in));
    return rcpp_result_gen;
END_RCPP
}
// cpp_conv_seq_gau_2
List cpp_conv_seq_gau_2(int n_i, int n_j, int n_cells, SEXP r_mat_row, SEXP r_mat_col, SEXP r_mat_value_Ab, SEXP r_mat_value_Ba, SEXP dum_vector, SEXP lhs, SEXP invTableCluster_vector, int iterMax, double diffMax, SEXP mu_in);
RcppExport SEXP _FENmlm_cpp_conv_seq_gau_2(SEXP n_iSEXP, SEXP n_jSEXP, SEXP n_cellsSEXP, SEXP r_mat_rowSEXP, SEXP r_mat_colSEXP, SEXP r_mat_value_AbSEXP, SEXP r_mat_value_BaSEXP, SEXP dum_vectorSEXP, SEXP lhsSEXP, SEXP invTableCluster_vectorSEXP, SEXP iterMaxSEXP, SEXP diffMaxSEXP, SEXP mu_inSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< int >::type n_i(n_iSEXP);
    Rcpp::traits::input_parameter< int >::type n_j(n_jSEXP);
    Rcpp::traits::input_parameter< int >::type n_cells(n_cellsSEXP);
    Rcpp::traits::input_parameter< SEXP >::type r_mat_row(r_mat_rowSEXP);
    Rcpp::traits::input_parameter< SEXP >::type r_mat_col(r_mat_colSEXP);
    Rcpp::traits::input_parameter< SEXP >::type r_mat_value_Ab(r_mat_value_AbSEXP);
    Rcpp::traits::input_parameter< SEXP >::type r_mat_value_Ba(r_mat_value_BaSEXP);
    Rcpp::traits::input_parameter< SEXP >::type dum_vector(dum_vectorSEXP);
    Rcpp::traits::input_parameter< SEXP >::type lhs(lhsSEXP);
    Rcpp::traits::input_parameter< SEXP >::type invTableCluster_vector(invTableCluster_vectorSEXP);
    Rcpp::traits::input_parameter< int >::type iterMax(iterMaxSEXP);
    Rcpp::traits::input_parameter< double >::type diffMax(diffMaxSEXP);
    Rcpp::traits::input_parameter< SEXP >::type mu_in(mu_inSEXP);
    rcpp_result_gen = Rcpp::wrap(cpp_conv_seq_gau_2(n_i, n_j, n_cells, r_mat_row, r_mat_col, r_mat_value_Ab, r_mat_value_Ba, dum_vector, lhs, invTableCluster_vector, iterMax, diffMax, mu_in));
    return rcpp_result_gen;
END_RCPP
}
// cpp_derivconv_seq_gnl
List cpp_derivconv_seq_gnl(int iterMax, double diffMax, int n_vars, SEXP nb_cluster_all, SEXP ll_d2, SEXP jacob_vector, SEXP deriv_init_vector, SEXP dum_vector);
RcppExport SEXP _FENmlm_cpp_derivconv_seq_gnl(SEXP iterMaxSEXP, SEXP diffMaxSEXP, SEXP n_varsSEXP, SEXP nb_cluster_allSEXP, SEXP ll_d2SEXP, SEXP jacob_vectorSEXP, SEXP deriv_init_vectorSEXP, SEXP dum_vectorSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< int >::type iterMax(iterMaxSEXP);
    Rcpp::traits::input_parameter< double >::type diffMax(diffMaxSEXP);
    Rcpp::traits::input_parameter< int >::type n_vars(n_varsSEXP);
    Rcpp::traits::input_parameter< SEXP >::type nb_cluster_all(nb_cluster_allSEXP);
    Rcpp::traits::input_parameter< SEXP >::type ll_d2(ll_d2SEXP);
    Rcpp::traits::input_parameter< SEXP >::type jacob_vector(jacob_vectorSEXP);
    Rcpp::traits::input_parameter< SEXP >::type deriv_init_vector(deriv_init_vectorSEXP);
    Rcpp::traits::input_parameter< SEXP >::type dum_vector(dum_vectorSEXP);
    rcpp_result_gen = Rcpp::wrap(cpp_derivconv_seq_gnl(iterMax, diffMax, n_vars, nb_cluster_all, ll_d2, jacob_vector, deriv_init_vector, dum_vector));
    return rcpp_result_gen;
END_RCPP
}
// cpp_derivconv_acc_gnl
List cpp_derivconv_acc_gnl(int iterMax, double diffMax, int n_vars, SEXP nb_cluster_all, SEXP ll_d2, SEXP jacob_vector, SEXP deriv_init_vector, SEXP dum_vector);
RcppExport SEXP _FENmlm_cpp_derivconv_acc_gnl(SEXP iterMaxSEXP, SEXP diffMaxSEXP, SEXP n_varsSEXP, SEXP nb_cluster_allSEXP, SEXP ll_d2SEXP, SEXP jacob_vectorSEXP, SEXP deriv_init_vectorSEXP, SEXP dum_vectorSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< int >::type iterMax(iterMaxSEXP);
    Rcpp::traits::input_parameter< double >::type diffMax(diffMaxSEXP);
    Rcpp::traits::input_parameter< int >::type n_vars(n_varsSEXP);
    Rcpp::traits::input_parameter< SEXP >::type nb_cluster_all(nb_cluster_allSEXP);
    Rcpp::traits::input_parameter< SEXP >::type ll_d2(ll_d2SEXP);
    Rcpp::traits::input_parameter< SEXP >::type jacob_vector(jacob_vectorSEXP);
    Rcpp::traits::input_parameter< SEXP >::type deriv_init_vector(deriv_init_vectorSEXP);
    Rcpp::traits::input_parameter< SEXP >::type dum_vector(dum_vectorSEXP);
    rcpp_result_gen = Rcpp::wrap(cpp_derivconv_acc_gnl(iterMax, diffMax, n_vars, nb_cluster_all, ll_d2, jacob_vector, deriv_init_vector, dum_vector));
    return rcpp_result_gen;
END_RCPP
}
// cpp_derivconv_acc_2
List cpp_derivconv_acc_2(int iterMax, double diffMax, int n_vars, SEXP nb_cluster_all, int n_cells, SEXP index_i, SEXP index_j, SEXP ll_d2, SEXP order, SEXP jacob_vector, SEXP deriv_init_vector, SEXP dum_vector);
RcppExport SEXP _FENmlm_cpp_derivconv_acc_2(SEXP iterMaxSEXP, SEXP diffMaxSEXP, SEXP n_varsSEXP, SEXP nb_cluster_allSEXP, SEXP n_cellsSEXP, SEXP index_iSEXP, SEXP index_jSEXP, SEXP ll_d2SEXP, SEXP orderSEXP, SEXP jacob_vectorSEXP, SEXP deriv_init_vectorSEXP, SEXP dum_vectorSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< int >::type iterMax(iterMaxSEXP);
    Rcpp::traits::input_parameter< double >::type diffMax(diffMaxSEXP);
    Rcpp::traits::input_parameter< int >::type n_vars(n_varsSEXP);
    Rcpp::traits::input_parameter< SEXP >::type nb_cluster_all(nb_cluster_allSEXP);
    Rcpp::traits::input_parameter< int >::type n_cells(n_cellsSEXP);
    Rcpp::traits::input_parameter< SEXP >::type index_i(index_iSEXP);
    Rcpp::traits::input_parameter< SEXP >::type index_j(index_jSEXP);
    Rcpp::traits::input_parameter< SEXP >::type ll_d2(ll_d2SEXP);
    Rcpp::traits::input_parameter< SEXP >::type order(orderSEXP);
    Rcpp::traits::input_parameter< SEXP >::type jacob_vector(jacob_vectorSEXP);
    Rcpp::traits::input_parameter< SEXP >::type deriv_init_vector(deriv_init_vectorSEXP);
    Rcpp::traits::input_parameter< SEXP >::type dum_vector(dum_vectorSEXP);
    rcpp_result_gen = Rcpp::wrap(cpp_derivconv_acc_2(iterMax, diffMax, n_vars, nb_cluster_all, n_cells, index_i, index_j, ll_d2, order, jacob_vector, deriv_init_vector, dum_vector));
    return rcpp_result_gen;
END_RCPP
}
// cpp_derivconv_seq_2
List cpp_derivconv_seq_2(int iterMax, double diffMax, int n_vars, SEXP nb_cluster_all, int n_cells, SEXP index_i, SEXP index_j, SEXP order, SEXP ll_d2, SEXP jacob_vector, SEXP deriv_init_vector, SEXP dum_vector);
RcppExport SEXP _FENmlm_cpp_derivconv_seq_2(SEXP iterMaxSEXP, SEXP diffMaxSEXP, SEXP n_varsSEXP, SEXP nb_cluster_allSEXP, SEXP n_cellsSEXP, SEXP index_iSEXP, SEXP index_jSEXP, SEXP orderSEXP, SEXP ll_d2SEXP, SEXP jacob_vectorSEXP, SEXP deriv_init_vectorSEXP, SEXP dum_vectorSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< int >::type iterMax(iterMaxSEXP);
    Rcpp::traits::input_parameter< double >::type diffMax(diffMaxSEXP);
    Rcpp::traits::input_parameter< int >::type n_vars(n_varsSEXP);
    Rcpp::traits::input_parameter< SEXP >::type nb_cluster_all(nb_cluster_allSEXP);
    Rcpp::traits::input_parameter< int >::type n_cells(n_cellsSEXP);
    Rcpp::traits::input_parameter< SEXP >::type index_i(index_iSEXP);
    Rcpp::traits::input_parameter< SEXP >::type index_j(index_jSEXP);
    Rcpp::traits::input_parameter< SEXP >::type order(orderSEXP);
    Rcpp::traits::input_parameter< SEXP >::type ll_d2(ll_d2SEXP);
    Rcpp::traits::input_parameter< SEXP >::type jacob_vector(jacob_vectorSEXP);
    Rcpp::traits::input_parameter< SEXP >::type deriv_init_vector(deriv_init_vectorSEXP);
    Rcpp::traits::input_parameter< SEXP >::type dum_vector(dum_vectorSEXP);
    rcpp_result_gen = Rcpp::wrap(cpp_derivconv_seq_2(iterMax, diffMax, n_vars, nb_cluster_all, n_cells, index_i, index_j, order, ll_d2, jacob_vector, deriv_init_vector, dum_vector));
    return rcpp_result_gen;
END_RCPP
}
// update_deriv_single
NumericMatrix update_deriv_single(int n_vars, int nb_coef, SEXP r_ll_d2, SEXP r_jacob_vector, SEXP r_dum_vector);
RcppExport SEXP _FENmlm_update_deriv_single(SEXP n_varsSEXP, SEXP nb_coefSEXP, SEXP r_ll_d2SEXP, SEXP r_jacob_vectorSEXP, SEXP r_dum_vectorSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< int >::type n_vars(n_varsSEXP);
    Rcpp::traits::input_parameter< int >::type nb_coef(nb_coefSEXP);
    Rcpp::traits::input_parameter< SEXP >::type r_ll_d2(r_ll_d2SEXP);
    Rcpp::traits::input_parameter< SEXP >::type r_jacob_vector(r_jacob_vectorSEXP);
    Rcpp::traits::input_parameter< SEXP >::type r_dum_vector(r_dum_vectorSEXP);
    rcpp_result_gen = Rcpp::wrap(update_deriv_single(n_vars, nb_coef, r_ll_d2, r_jacob_vector, r_dum_vector));
    return rcpp_result_gen;
END_RCPP
}
// cpp_lgamma
NumericVector cpp_lgamma(NumericVector x);
RcppExport SEXP _FENmlm_cpp_lgamma(SEXP xSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type x(xSEXP);
    rcpp_result_gen = Rcpp::wrap(cpp_lgamma(x));
    return rcpp_result_gen;
END_RCPP
}
// cpp_log_a_exp
NumericVector cpp_log_a_exp(double a, NumericVector mu, NumericVector exp_mu);
RcppExport SEXP _FENmlm_cpp_log_a_exp(SEXP aSEXP, SEXP muSEXP, SEXP exp_muSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< double >::type a(aSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type mu(muSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type exp_mu(exp_muSEXP);
    rcpp_result_gen = Rcpp::wrap(cpp_log_a_exp(a, mu, exp_mu));
    return rcpp_result_gen;
END_RCPP
}
// cpp_partialDerivative_other
NumericVector cpp_partialDerivative_other(int iterMax, int Q, int N, double epsDeriv, NumericVector ll_d2, NumericVector dx_dother, NumericVector init, IntegerMatrix dumMat, IntegerVector nbCluster);
RcppExport SEXP _FENmlm_cpp_partialDerivative_other(SEXP iterMaxSEXP, SEXP QSEXP, SEXP NSEXP, SEXP epsDerivSEXP, SEXP ll_d2SEXP, SEXP dx_dotherSEXP, SEXP initSEXP, SEXP dumMatSEXP, SEXP nbClusterSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< int >::type iterMax(iterMaxSEXP);
    Rcpp::traits::input_parameter< int >::type Q(QSEXP);
    Rcpp::traits::input_parameter< int >::type N(NSEXP);
    Rcpp::traits::input_parameter< double >::type epsDeriv(epsDerivSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type ll_d2(ll_d2SEXP);
    Rcpp::traits::input_parameter< NumericVector >::type dx_dother(dx_dotherSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type init(initSEXP);
    Rcpp::traits::input_parameter< IntegerMatrix >::type dumMat(dumMatSEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type nbCluster(nbClusterSEXP);
    rcpp_result_gen = Rcpp::wrap(cpp_partialDerivative_other(iterMax, Q, N, epsDeriv, ll_d2, dx_dother, init, dumMat, nbCluster));
    return rcpp_result_gen;
END_RCPP
}
// cpp_tapply_sum
NumericMatrix cpp_tapply_sum(int Q, NumericMatrix x, IntegerVector dum);
RcppExport SEXP _FENmlm_cpp_tapply_sum(SEXP QSEXP, SEXP xSEXP, SEXP dumSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< int >::type Q(QSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type x(xSEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type dum(dumSEXP);
    rcpp_result_gen = Rcpp::wrap(cpp_tapply_sum(Q, x, dum));
    return rcpp_result_gen;
END_RCPP
}
// cpp_tapply_vsum
NumericVector cpp_tapply_vsum(int Q, NumericVector x, IntegerVector dum);
RcppExport SEXP _FENmlm_cpp_tapply_vsum(SEXP QSEXP, SEXP xSEXP, SEXP dumSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< int >::type Q(QSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type x(xSEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type dum(dumSEXP);
    rcpp_result_gen = Rcpp::wrap(cpp_tapply_vsum(Q, x, dum));
    return rcpp_result_gen;
END_RCPP
}
// cpp_table
NumericVector cpp_table(int Q, IntegerVector dum);
RcppExport SEXP _FENmlm_cpp_table(SEXP QSEXP, SEXP dumSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< int >::type Q(QSEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type dum(dumSEXP);
    rcpp_result_gen = Rcpp::wrap(cpp_table(Q, dum));
    return rcpp_result_gen;
END_RCPP
}
// cpp_unclassFactor
IntegerVector cpp_unclassFactor(NumericVector x);
RcppExport SEXP _FENmlm_cpp_unclassFactor(SEXP xSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type x(xSEXP);
    rcpp_result_gen = Rcpp::wrap(cpp_unclassFactor(x));
    return rcpp_result_gen;
END_RCPP
}
// cpp_get_fe_2
NumericMatrix cpp_get_fe_2(SEXP clusterSize, SEXP i_sorted_index_j, SEXP i_sorted_sumFE, SEXP j_sorted_index_i, SEXP j_sorted_sumFE, SEXP r_cumtable_i, SEXP r_cumtable_j);
RcppExport SEXP _FENmlm_cpp_get_fe_2(SEXP clusterSizeSEXP, SEXP i_sorted_index_jSEXP, SEXP i_sorted_sumFESEXP, SEXP j_sorted_index_iSEXP, SEXP j_sorted_sumFESEXP, SEXP r_cumtable_iSEXP, SEXP r_cumtable_jSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< SEXP >::type clusterSize(clusterSizeSEXP);
    Rcpp::traits::input_parameter< SEXP >::type i_sorted_index_j(i_sorted_index_jSEXP);
    Rcpp::traits::input_parameter< SEXP >::type i_sorted_sumFE(i_sorted_sumFESEXP);
    Rcpp::traits::input_parameter< SEXP >::type j_sorted_index_i(j_sorted_index_iSEXP);
    Rcpp::traits::input_parameter< SEXP >::type j_sorted_sumFE(j_sorted_sumFESEXP);
    Rcpp::traits::input_parameter< SEXP >::type r_cumtable_i(r_cumtable_iSEXP);
    Rcpp::traits::input_parameter< SEXP >::type r_cumtable_j(r_cumtable_jSEXP);
    rcpp_result_gen = Rcpp::wrap(cpp_get_fe_2(clusterSize, i_sorted_index_j, i_sorted_sumFE, j_sorted_index_i, j_sorted_sumFE, r_cumtable_i, r_cumtable_j));
    return rcpp_result_gen;
END_RCPP
}
// cpp_get_fe_gnl
List cpp_get_fe_gnl(int Q, int N, NumericVector S, IntegerMatrix dumMat, IntegerVector nbCluster, IntegerVector obsCluster);
RcppExport SEXP _FENmlm_cpp_get_fe_gnl(SEXP QSEXP, SEXP NSEXP, SEXP SSEXP, SEXP dumMatSEXP, SEXP nbClusterSEXP, SEXP obsClusterSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< int >::type Q(QSEXP);
    Rcpp::traits::input_parameter< int >::type N(NSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type S(SSEXP);
    Rcpp::traits::input_parameter< IntegerMatrix >::type dumMat(dumMatSEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type nbCluster(nbClusterSEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type obsCluster(obsClusterSEXP);
    rcpp_result_gen = Rcpp::wrap(cpp_get_fe_gnl(Q, N, S, dumMat, nbCluster, obsCluster));
    return rcpp_result_gen;
END_RCPP
}
// cpppar_exp
NumericVector cpppar_exp(NumericVector x, int nthreads);
RcppExport SEXP _FENmlm_cpppar_exp(SEXP xSEXP, SEXP nthreadsSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type x(xSEXP);
    Rcpp::traits::input_parameter< int >::type nthreads(nthreadsSEXP);
    rcpp_result_gen = Rcpp::wrap(cpppar_exp(x, nthreads));
    return rcpp_result_gen;
END_RCPP
}
// cpppar_log
NumericVector cpppar_log(NumericVector x, int nthreads);
RcppExport SEXP _FENmlm_cpppar_log(SEXP xSEXP, SEXP nthreadsSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type x(xSEXP);
    Rcpp::traits::input_parameter< int >::type nthreads(nthreadsSEXP);
    rcpp_result_gen = Rcpp::wrap(cpppar_log(x, nthreads));
    return rcpp_result_gen;
END_RCPP
}
// cpppar_log_a_exp
NumericVector cpppar_log_a_exp(int nthreads, double a, NumericVector mu, NumericVector exp_mu);
RcppExport SEXP _FENmlm_cpppar_log_a_exp(SEXP nthreadsSEXP, SEXP aSEXP, SEXP muSEXP, SEXP exp_muSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< int >::type nthreads(nthreadsSEXP);
    Rcpp::traits::input_parameter< double >::type a(aSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type mu(muSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type exp_mu(exp_muSEXP);
    rcpp_result_gen = Rcpp::wrap(cpppar_log_a_exp(nthreads, a, mu, exp_mu));
    return rcpp_result_gen;
END_RCPP
}
// cpppar_lgamma
NumericVector cpppar_lgamma(NumericVector x, int nthreads);
RcppExport SEXP _FENmlm_cpppar_lgamma(SEXP xSEXP, SEXP nthreadsSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type x(xSEXP);
    Rcpp::traits::input_parameter< int >::type nthreads(nthreadsSEXP);
    rcpp_result_gen = Rcpp::wrap(cpppar_lgamma(x, nthreads));
    return rcpp_result_gen;
END_RCPP
}
// cpppar_digamma
NumericVector cpppar_digamma(NumericVector x, int nthreads);
RcppExport SEXP _FENmlm_cpppar_digamma(SEXP xSEXP, SEXP nthreadsSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type x(xSEXP);
    Rcpp::traits::input_parameter< int >::type nthreads(nthreadsSEXP);
    rcpp_result_gen = Rcpp::wrap(cpppar_digamma(x, nthreads));
    return rcpp_result_gen;
END_RCPP
}
// cpppar_trigamma
NumericVector cpppar_trigamma(NumericVector x, int nthreads);
RcppExport SEXP _FENmlm_cpppar_trigamma(SEXP xSEXP, SEXP nthreadsSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type x(xSEXP);
    Rcpp::traits::input_parameter< int >::type nthreads(nthreadsSEXP);
    rcpp_result_gen = Rcpp::wrap(cpppar_trigamma(x, nthreads));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_FENmlm_compute_cluster_coef_r", (DL_FUNC) &_FENmlm_compute_cluster_coef_r, 12},
    {"_FENmlm_update_mu_single_cluster", (DL_FUNC) &_FENmlm_update_mu_single_cluster, 12},
    {"_FENmlm_cpp_conv_acc_gnl", (DL_FUNC) &_FENmlm_cpp_conv_acc_gnl, 14},
    {"_FENmlm_cpp_conv_seq_gnl", (DL_FUNC) &_FENmlm_cpp_conv_seq_gnl, 14},
    {"_FENmlm_get_n_cells", (DL_FUNC) &_FENmlm_get_n_cells, 2},
    {"_FENmlm_cpp_conv_acc_poi_2", (DL_FUNC) &_FENmlm_cpp_conv_acc_poi_2, 11},
    {"_FENmlm_cpp_conv_seq_poi_2", (DL_FUNC) &_FENmlm_cpp_conv_seq_poi_2, 11},
    {"_FENmlm_cpp_fixed_cost_gaussian", (DL_FUNC) &_FENmlm_cpp_fixed_cost_gaussian, 7},
    {"_FENmlm_cpp_conv_acc_gau_2", (DL_FUNC) &_FENmlm_cpp_conv_acc_gau_2, 13},
    {"_FENmlm_cpp_conv_seq_gau_2", (DL_FUNC) &_FENmlm_cpp_conv_seq_gau_2, 13},
    {"_FENmlm_cpp_derivconv_seq_gnl", (DL_FUNC) &_FENmlm_cpp_derivconv_seq_gnl, 8},
    {"_FENmlm_cpp_derivconv_acc_gnl", (DL_FUNC) &_FENmlm_cpp_derivconv_acc_gnl, 8},
    {"_FENmlm_cpp_derivconv_acc_2", (DL_FUNC) &_FENmlm_cpp_derivconv_acc_2, 12},
    {"_FENmlm_cpp_derivconv_seq_2", (DL_FUNC) &_FENmlm_cpp_derivconv_seq_2, 12},
    {"_FENmlm_update_deriv_single", (DL_FUNC) &_FENmlm_update_deriv_single, 5},
    {"_FENmlm_cpp_lgamma", (DL_FUNC) &_FENmlm_cpp_lgamma, 1},
    {"_FENmlm_cpp_log_a_exp", (DL_FUNC) &_FENmlm_cpp_log_a_exp, 3},
    {"_FENmlm_cpp_partialDerivative_other", (DL_FUNC) &_FENmlm_cpp_partialDerivative_other, 9},
    {"_FENmlm_cpp_tapply_sum", (DL_FUNC) &_FENmlm_cpp_tapply_sum, 3},
    {"_FENmlm_cpp_tapply_vsum", (DL_FUNC) &_FENmlm_cpp_tapply_vsum, 3},
    {"_FENmlm_cpp_table", (DL_FUNC) &_FENmlm_cpp_table, 2},
    {"_FENmlm_cpp_unclassFactor", (DL_FUNC) &_FENmlm_cpp_unclassFactor, 1},
    {"_FENmlm_cpp_get_fe_2", (DL_FUNC) &_FENmlm_cpp_get_fe_2, 7},
    {"_FENmlm_cpp_get_fe_gnl", (DL_FUNC) &_FENmlm_cpp_get_fe_gnl, 6},
    {"_FENmlm_cpppar_exp", (DL_FUNC) &_FENmlm_cpppar_exp, 2},
    {"_FENmlm_cpppar_log", (DL_FUNC) &_FENmlm_cpppar_log, 2},
    {"_FENmlm_cpppar_log_a_exp", (DL_FUNC) &_FENmlm_cpppar_log_a_exp, 4},
    {"_FENmlm_cpppar_lgamma", (DL_FUNC) &_FENmlm_cpppar_lgamma, 2},
    {"_FENmlm_cpppar_digamma", (DL_FUNC) &_FENmlm_cpppar_digamma, 2},
    {"_FENmlm_cpppar_trigamma", (DL_FUNC) &_FENmlm_cpppar_trigamma, 2},
    {NULL, NULL, 0}
};

RcppExport void R_init_FENmlm(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
