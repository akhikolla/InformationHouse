// AUTOMATICALLY GENERATED BY RCPPDEEPSTATE PLEASE DO NOT EDIT BY HAND, INSTEAD EDIT
// roll_stalta_numeric_vector_DeepState_TestHarness_generation.cpp and roll_stalta_numeric_vector_DeepState_TestHarness_checks.cpp

#include <fstream>
#include <RInside.h>
#include <iostream>
#include <RcppDeepState.h>
#include <qs.h>
#include <DeepState.hpp>

NumericVector roll_stalta_numeric_vector(NumericVector x, int n_sta, int n_lta, int increment);

TEST(seismicRoll_deepstate_test,roll_stalta_numeric_vector_test){
  RInside R;
  std::cout << "input starts" << std::endl;
  NumericVector x  = RcppDeepState_NumericVector();
  qs::c_qsave(x,"/home/akhila/fuzzer_packages/fuzzedpackages/seismicRoll/inst/testfiles/roll_stalta_numeric_vector/inputs/x.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "x values: "<< x << std::endl;
  IntegerVector n_sta(1);
  n_sta[0]  = RcppDeepState_int();
  qs::c_qsave(n_sta,"/home/akhila/fuzzer_packages/fuzzedpackages/seismicRoll/inst/testfiles/roll_stalta_numeric_vector/inputs/n_sta.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "n_sta values: "<< n_sta << std::endl;
  IntegerVector n_lta(1);
  n_lta[0]  = RcppDeepState_int();
  qs::c_qsave(n_lta,"/home/akhila/fuzzer_packages/fuzzedpackages/seismicRoll/inst/testfiles/roll_stalta_numeric_vector/inputs/n_lta.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "n_lta values: "<< n_lta << std::endl;
  IntegerVector increment(1);
  increment[0]  = RcppDeepState_int();
  qs::c_qsave(increment,"/home/akhila/fuzzer_packages/fuzzedpackages/seismicRoll/inst/testfiles/roll_stalta_numeric_vector/inputs/increment.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "increment values: "<< increment << std::endl;
  std::cout << "input ends" << std::endl;
  try{
    roll_stalta_numeric_vector(x,n_sta[0],n_lta[0],increment[0]);
  }
  catch(Rcpp::exception& e){
    std::cout<<"Exception Handled"<<std::endl;
  }
}
