// AUTOMATICALLY GENERATED BY RCPPDEEPSTATE PLEASE DO NOT EDIT BY HAND, INSTEAD EDIT
// sm_bin_wts_DeepState_TestHarness_generation.cpp and sm_bin_wts_DeepState_TestHarness_checks.cpp

#include <fstream>
#include <RInside.h>
#include <iostream>
#include <RcppDeepState.h>
#include <qs.h>
#include <DeepState.hpp>

NumericVector sm_bin_wts(NumericVector x, NumericVector y, int nbin, double min, double max);

TEST(FKSUM_deepstate_test,sm_bin_wts_test){
  RInside R;
  std::cout << "input starts" << std::endl;
  NumericVector x  = RcppDeepState_NumericVector();
  qs::c_qsave(x,"/home/akhila/fuzzer_packages/fuzzedpackages/FKSUM/inst/testfiles/sm_bin_wts/inputs/x.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "x values: "<< x << std::endl;
  NumericVector y  = RcppDeepState_NumericVector();
  qs::c_qsave(y,"/home/akhila/fuzzer_packages/fuzzedpackages/FKSUM/inst/testfiles/sm_bin_wts/inputs/y.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "y values: "<< y << std::endl;
  IntegerVector nbin(1);
  nbin[0]  = RcppDeepState_int();
  qs::c_qsave(nbin,"/home/akhila/fuzzer_packages/fuzzedpackages/FKSUM/inst/testfiles/sm_bin_wts/inputs/nbin.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "nbin values: "<< nbin << std::endl;
  NumericVector min(1);
  min[0]  = RcppDeepState_double();
  qs::c_qsave(min,"/home/akhila/fuzzer_packages/fuzzedpackages/FKSUM/inst/testfiles/sm_bin_wts/inputs/min.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "min values: "<< min << std::endl;
  NumericVector max(1);
  max[0]  = RcppDeepState_double();
  qs::c_qsave(max,"/home/akhila/fuzzer_packages/fuzzedpackages/FKSUM/inst/testfiles/sm_bin_wts/inputs/max.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "max values: "<< max << std::endl;
  std::cout << "input ends" << std::endl;
  try{
    sm_bin_wts(x,y,nbin[0],min[0],max[0]);
  }
  catch(Rcpp::exception& e){
    std::cout<<"Exception Handled"<<std::endl;
  }
}
