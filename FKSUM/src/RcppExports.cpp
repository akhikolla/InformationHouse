// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <RcppArmadillo.h>
#include <Rcpp.h>

using namespace Rcpp;

// cbin_alloc
NumericVector cbin_alloc(NumericVector x, int nbin, double min, double max);
RcppExport SEXP _FKSUM_cbin_alloc(SEXP xSEXP, SEXP nbinSEXP, SEXP minSEXP, SEXP maxSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type x(xSEXP);
    Rcpp::traits::input_parameter< int >::type nbin(nbinSEXP);
    Rcpp::traits::input_parameter< double >::type min(minSEXP);
    Rcpp::traits::input_parameter< double >::type max(maxSEXP);
    rcpp_result_gen = Rcpp::wrap(cbin_alloc(x, nbin, min, max));
    return rcpp_result_gen;
END_RCPP
}
// sm_bin_wts
NumericVector sm_bin_wts(NumericVector x, NumericVector y, int nbin, double min, double max);
RcppExport SEXP _FKSUM_sm_bin_wts(SEXP xSEXP, SEXP ySEXP, SEXP nbinSEXP, SEXP minSEXP, SEXP maxSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type x(xSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type y(ySEXP);
    Rcpp::traits::input_parameter< int >::type nbin(nbinSEXP);
    Rcpp::traits::input_parameter< double >::type min(minSEXP);
    Rcpp::traits::input_parameter< double >::type max(maxSEXP);
    rcpp_result_gen = Rcpp::wrap(sm_bin_wts(x, y, nbin, min, max));
    return rcpp_result_gen;
END_RCPP
}
// bin_wts
NumericVector bin_wts(NumericVector x, NumericVector y, int nbin, double min, double max);
RcppExport SEXP _FKSUM_bin_wts(SEXP xSEXP, SEXP ySEXP, SEXP nbinSEXP, SEXP minSEXP, SEXP maxSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type x(xSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type y(ySEXP);
    Rcpp::traits::input_parameter< int >::type nbin(nbinSEXP);
    Rcpp::traits::input_parameter< double >::type min(minSEXP);
    Rcpp::traits::input_parameter< double >::type max(maxSEXP);
    rcpp_result_gen = Rcpp::wrap(bin_wts(x, y, nbin, min, max));
    return rcpp_result_gen;
END_RCPP
}
// ksum
NumericVector ksum(NumericVector x, NumericVector y, NumericVector x_eval, double h, NumericVector betas, NumericVector Counts);
RcppExport SEXP _FKSUM_ksum(SEXP xSEXP, SEXP ySEXP, SEXP x_evalSEXP, SEXP hSEXP, SEXP betasSEXP, SEXP CountsSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type x(xSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type y(ySEXP);
    Rcpp::traits::input_parameter< NumericVector >::type x_eval(x_evalSEXP);
    Rcpp::traits::input_parameter< double >::type h(hSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type betas(betasSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type Counts(CountsSEXP);
    rcpp_result_gen = Rcpp::wrap(ksum(x, y, x_eval, h, betas, Counts));
    return rcpp_result_gen;
END_RCPP
}
// dksum
NumericVector dksum(NumericVector x, NumericVector y, NumericVector x_eval, double h, NumericVector betas, NumericVector Counts);
RcppExport SEXP _FKSUM_dksum(SEXP xSEXP, SEXP ySEXP, SEXP x_evalSEXP, SEXP hSEXP, SEXP betasSEXP, SEXP CountsSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type x(xSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type y(ySEXP);
    Rcpp::traits::input_parameter< NumericVector >::type x_eval(x_evalSEXP);
    Rcpp::traits::input_parameter< double >::type h(hSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type betas(betasSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type Counts(CountsSEXP);
    rcpp_result_gen = Rcpp::wrap(dksum(x, y, x_eval, h, betas, Counts));
    return rcpp_result_gen;
END_RCPP
}
// kndksum
NumericMatrix kndksum(NumericVector x, NumericVector y, NumericVector x_eval, double h, NumericVector betas, NumericVector Counts);
RcppExport SEXP _FKSUM_kndksum(SEXP xSEXP, SEXP ySEXP, SEXP x_evalSEXP, SEXP hSEXP, SEXP betasSEXP, SEXP CountsSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type x(xSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type y(ySEXP);
    Rcpp::traits::input_parameter< NumericVector >::type x_eval(x_evalSEXP);
    Rcpp::traits::input_parameter< double >::type h(hSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type betas(betasSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type Counts(CountsSEXP);
    rcpp_result_gen = Rcpp::wrap(kndksum(x, y, x_eval, h, betas, Counts));
    return rcpp_result_gen;
END_RCPP
}
// fk_md
double fk_md(NumericVector x, NumericVector y, NumericVector x_eval, double h, NumericVector betas, double al, double C);
RcppExport SEXP _FKSUM_fk_md(SEXP xSEXP, SEXP ySEXP, SEXP x_evalSEXP, SEXP hSEXP, SEXP betasSEXP, SEXP alSEXP, SEXP CSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type x(xSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type y(ySEXP);
    Rcpp::traits::input_parameter< NumericVector >::type x_eval(x_evalSEXP);
    Rcpp::traits::input_parameter< double >::type h(hSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type betas(betasSEXP);
    Rcpp::traits::input_parameter< double >::type al(alSEXP);
    Rcpp::traits::input_parameter< double >::type C(CSEXP);
    rcpp_result_gen = Rcpp::wrap(fk_md(x, y, x_eval, h, betas, al, C));
    return rcpp_result_gen;
END_RCPP
}
// fk_md_dp
NumericVector fk_md_dp(NumericVector xo, NumericVector y, NumericVector x_eval, double h, NumericVector betas, double al, double C);
RcppExport SEXP _FKSUM_fk_md_dp(SEXP xoSEXP, SEXP ySEXP, SEXP x_evalSEXP, SEXP hSEXP, SEXP betasSEXP, SEXP alSEXP, SEXP CSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type xo(xoSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type y(ySEXP);
    Rcpp::traits::input_parameter< NumericVector >::type x_eval(x_evalSEXP);
    Rcpp::traits::input_parameter< double >::type h(hSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type betas(betasSEXP);
    Rcpp::traits::input_parameter< double >::type al(alSEXP);
    Rcpp::traits::input_parameter< double >::type C(CSEXP);
    rcpp_result_gen = Rcpp::wrap(fk_md_dp(xo, y, x_eval, h, betas, al, C));
    return rcpp_result_gen;
END_RCPP
}
// fk_is_minim_md
double fk_is_minim_md(NumericVector x, NumericVector y, NumericVector x_eval, double h, NumericVector betas, double al, double C);
RcppExport SEXP _FKSUM_fk_is_minim_md(SEXP xSEXP, SEXP ySEXP, SEXP x_evalSEXP, SEXP hSEXP, SEXP betasSEXP, SEXP alSEXP, SEXP CSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type x(xSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type y(ySEXP);
    Rcpp::traits::input_parameter< NumericVector >::type x_eval(x_evalSEXP);
    Rcpp::traits::input_parameter< double >::type h(hSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type betas(betasSEXP);
    Rcpp::traits::input_parameter< double >::type al(alSEXP);
    Rcpp::traits::input_parameter< double >::type C(CSEXP);
    rcpp_result_gen = Rcpp::wrap(fk_is_minim_md(x, y, x_eval, h, betas, al, C));
    return rcpp_result_gen;
END_RCPP
}
// fk_md_b
double fk_md_b(NumericVector x, NumericVector y, NumericVector x_eval, double h, NumericVector betas, double al, double C);
RcppExport SEXP _FKSUM_fk_md_b(SEXP xSEXP, SEXP ySEXP, SEXP x_evalSEXP, SEXP hSEXP, SEXP betasSEXP, SEXP alSEXP, SEXP CSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type x(xSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type y(ySEXP);
    Rcpp::traits::input_parameter< NumericVector >::type x_eval(x_evalSEXP);
    Rcpp::traits::input_parameter< double >::type h(hSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type betas(betasSEXP);
    Rcpp::traits::input_parameter< double >::type al(alSEXP);
    Rcpp::traits::input_parameter< double >::type C(CSEXP);
    rcpp_result_gen = Rcpp::wrap(fk_md_b(x, y, x_eval, h, betas, al, C));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_FKSUM_cbin_alloc", (DL_FUNC) &_FKSUM_cbin_alloc, 4},
    {"_FKSUM_sm_bin_wts", (DL_FUNC) &_FKSUM_sm_bin_wts, 5},
    {"_FKSUM_bin_wts", (DL_FUNC) &_FKSUM_bin_wts, 5},
    {"_FKSUM_ksum", (DL_FUNC) &_FKSUM_ksum, 6},
    {"_FKSUM_dksum", (DL_FUNC) &_FKSUM_dksum, 6},
    {"_FKSUM_kndksum", (DL_FUNC) &_FKSUM_kndksum, 6},
    {"_FKSUM_fk_md", (DL_FUNC) &_FKSUM_fk_md, 7},
    {"_FKSUM_fk_md_dp", (DL_FUNC) &_FKSUM_fk_md_dp, 7},
    {"_FKSUM_fk_is_minim_md", (DL_FUNC) &_FKSUM_fk_is_minim_md, 7},
    {"_FKSUM_fk_md_b", (DL_FUNC) &_FKSUM_fk_md_b, 7},
    {NULL, NULL, 0}
};

RcppExport void R_init_FKSUM(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
