// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <RcppArmadillo.h>
#include <Rcpp.h>

using namespace Rcpp;

// psi_huber
double psi_huber(double x, const double c);
RcppExport SEXP _robustBLME_psi_huber(SEXP xSEXP, SEXP cSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< double >::type x(xSEXP);
    Rcpp::traits::input_parameter< const double >::type c(cSEXP);
    rcpp_result_gen = Rcpp::wrap(psi_huber(x, c));
    return rcpp_result_gen;
END_RCPP
}
// vpsi_huber
arma::vec vpsi_huber(arma::vec x, const double c, int xLen);
RcppExport SEXP _robustBLME_vpsi_huber(SEXP xSEXP, SEXP cSEXP, SEXP xLenSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::vec >::type x(xSEXP);
    Rcpp::traits::input_parameter< const double >::type c(cSEXP);
    Rcpp::traits::input_parameter< int >::type xLen(xLenSEXP);
    rcpp_result_gen = Rcpp::wrap(vpsi_huber(x, c, xLen));
    return rcpp_result_gen;
END_RCPP
}
// psip_huber
double psip_huber(double x, const double c);
RcppExport SEXP _robustBLME_psip_huber(SEXP xSEXP, SEXP cSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< double >::type x(xSEXP);
    Rcpp::traits::input_parameter< const double >::type c(cSEXP);
    rcpp_result_gen = Rcpp::wrap(psip_huber(x, c));
    return rcpp_result_gen;
END_RCPP
}
// dhalfCauchy
double dhalfCauchy(double x, double scale, bool lg);
RcppExport SEXP _robustBLME_dhalfCauchy(SEXP xSEXP, SEXP scaleSEXP, SEXP lgSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< double >::type x(xSEXP);
    Rcpp::traits::input_parameter< double >::type scale(scaleSEXP);
    Rcpp::traits::input_parameter< bool >::type lg(lgSEXP);
    rcpp_result_gen = Rcpp::wrap(dhalfCauchy(x, scale, lg));
    return rcpp_result_gen;
END_RCPP
}
// dinvgamma
double dinvgamma(double x, double shape, double scale, bool lg);
RcppExport SEXP _robustBLME_dinvgamma(SEXP xSEXP, SEXP shapeSEXP, SEXP scaleSEXP, SEXP lgSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< double >::type x(xSEXP);
    Rcpp::traits::input_parameter< double >::type shape(shapeSEXP);
    Rcpp::traits::input_parameter< double >::type scale(scaleSEXP);
    Rcpp::traits::input_parameter< bool >::type lg(lgSEXP);
    rcpp_result_gen = Rcpp::wrap(dinvgamma(x, shape, scale, lg));
    return rcpp_result_gen;
END_RCPP
}
// thinMat
arma::mat thinMat(arma::mat X, arma::vec index);
RcppExport SEXP _robustBLME_thinMat(SEXP XSEXP, SEXP indexSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat >::type X(XSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type index(indexSEXP);
    rcpp_result_gen = Rcpp::wrap(thinMat(X, index));
    return rcpp_result_gen;
END_RCPP
}
// rmvnorm
arma::vec rmvnorm(arma::vec mu, arma::mat S, int p);
RcppExport SEXP _robustBLME_rmvnorm(SEXP muSEXP, SEXP SSEXP, SEXP pSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::vec >::type mu(muSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type S(SSEXP);
    Rcpp::traits::input_parameter< int >::type p(pSEXP);
    rcpp_result_gen = Rcpp::wrap(rmvnorm(mu, S, p));
    return rcpp_result_gen;
END_RCPP
}
// rmvnorm2
arma::vec rmvnorm2(arma::vec mu, arma::mat lowcholS, int p);
RcppExport SEXP _robustBLME_rmvnorm2(SEXP muSEXP, SEXP lowcholSSEXP, SEXP pSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::vec >::type mu(muSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type lowcholS(lowcholSSEXP);
    Rcpp::traits::input_parameter< int >::type p(pSEXP);
    rcpp_result_gen = Rcpp::wrap(rmvnorm2(mu, lowcholS, p));
    return rcpp_result_gen;
END_RCPP
}
// rmvt
arma::vec rmvt(arma::vec mu, arma::mat lowcholS, int p, double df);
RcppExport SEXP _robustBLME_rmvt(SEXP muSEXP, SEXP lowcholSSEXP, SEXP pSEXP, SEXP dfSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::vec >::type mu(muSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type lowcholS(lowcholSSEXP);
    Rcpp::traits::input_parameter< int >::type p(pSEXP);
    Rcpp::traits::input_parameter< double >::type df(dfSEXP);
    rcpp_result_gen = Rcpp::wrap(rmvt(mu, lowcholS, p, df));
    return rcpp_result_gen;
END_RCPP
}
// dmvt
double dmvt(arma::vec x, arma::vec mu, arma::mat S, double ldetS, int p, double df, bool lg);
RcppExport SEXP _robustBLME_dmvt(SEXP xSEXP, SEXP muSEXP, SEXP SSEXP, SEXP ldetSSEXP, SEXP pSEXP, SEXP dfSEXP, SEXP lgSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::vec >::type x(xSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type mu(muSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type S(SSEXP);
    Rcpp::traits::input_parameter< double >::type ldetS(ldetSSEXP);
    Rcpp::traits::input_parameter< int >::type p(pSEXP);
    Rcpp::traits::input_parameter< double >::type df(dfSEXP);
    Rcpp::traits::input_parameter< bool >::type lg(lgSEXP);
    rcpp_result_gen = Rcpp::wrap(dmvt(x, mu, S, ldetS, p, df, lg));
    return rcpp_result_gen;
END_RCPP
}
// dPrior_lmm
double dPrior_lmm(arma::vec betas, double log_sig2_b, double log_sig2_eps, double beta_stDev, double sig2_scale, int n_betas, bool log_);
RcppExport SEXP _robustBLME_dPrior_lmm(SEXP betasSEXP, SEXP log_sig2_bSEXP, SEXP log_sig2_epsSEXP, SEXP beta_stDevSEXP, SEXP sig2_scaleSEXP, SEXP n_betasSEXP, SEXP log_SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::vec >::type betas(betasSEXP);
    Rcpp::traits::input_parameter< double >::type log_sig2_b(log_sig2_bSEXP);
    Rcpp::traits::input_parameter< double >::type log_sig2_eps(log_sig2_epsSEXP);
    Rcpp::traits::input_parameter< double >::type beta_stDev(beta_stDevSEXP);
    Rcpp::traits::input_parameter< double >::type sig2_scale(sig2_scaleSEXP);
    Rcpp::traits::input_parameter< int >::type n_betas(n_betasSEXP);
    Rcpp::traits::input_parameter< bool >::type log_(log_SEXP);
    rcpp_result_gen = Rcpp::wrap(dPrior_lmm(betas, log_sig2_b, log_sig2_eps, beta_stDev, sig2_scale, n_betas, log_));
    return rcpp_result_gen;
END_RCPP
}
// dmvnorm_I
double dmvnorm_I(arma::vec x, double h, int dim_x, bool log_);
RcppExport SEXP _robustBLME_dmvnorm_I(SEXP xSEXP, SEXP hSEXP, SEXP dim_xSEXP, SEXP log_SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::vec >::type x(xSEXP);
    Rcpp::traits::input_parameter< double >::type h(hSEXP);
    Rcpp::traits::input_parameter< int >::type dim_x(dim_xSEXP);
    Rcpp::traits::input_parameter< bool >::type log_(log_SEXP);
    rcpp_result_gen = Rcpp::wrap(dmvnorm_I(x, h, dim_x, log_));
    return rcpp_result_gen;
END_RCPP
}
// V_list
List V_list(double sig2_b, double sig2_eps, arma::mat ZZt_b, arma::mat ZZt_b_ii, arma::mat ZZt_eps, arma::mat ZZt_eps_ii, int m_i);
RcppExport SEXP _robustBLME_V_list(SEXP sig2_bSEXP, SEXP sig2_epsSEXP, SEXP ZZt_bSEXP, SEXP ZZt_b_iiSEXP, SEXP ZZt_epsSEXP, SEXP ZZt_eps_iiSEXP, SEXP m_iSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< double >::type sig2_b(sig2_bSEXP);
    Rcpp::traits::input_parameter< double >::type sig2_eps(sig2_epsSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type ZZt_b(ZZt_bSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type ZZt_b_ii(ZZt_b_iiSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type ZZt_eps(ZZt_epsSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type ZZt_eps_ii(ZZt_eps_iiSEXP);
    Rcpp::traits::input_parameter< int >::type m_i(m_iSEXP);
    rcpp_result_gen = Rcpp::wrap(V_list(sig2_b, sig2_eps, ZZt_b, ZZt_b_ii, ZZt_eps, ZZt_eps_ii, m_i));
    return rcpp_result_gen;
END_RCPP
}
// Psi_reml2
arma::vec Psi_reml2(arma::vec betas, double sig2_b, double sig2_eps, arma::mat y, arma::mat Xn, arma::mat Xnt, arma::mat ZZt_b, arma::mat ZZt_b_ii, arma::mat ZZt_eps, arma::mat ZZt_eps_ii, const double c_hub, const double c2_hub, arma::mat K2n, int n_betas, int m_i, int n, int n_ind);
RcppExport SEXP _robustBLME_Psi_reml2(SEXP betasSEXP, SEXP sig2_bSEXP, SEXP sig2_epsSEXP, SEXP ySEXP, SEXP XnSEXP, SEXP XntSEXP, SEXP ZZt_bSEXP, SEXP ZZt_b_iiSEXP, SEXP ZZt_epsSEXP, SEXP ZZt_eps_iiSEXP, SEXP c_hubSEXP, SEXP c2_hubSEXP, SEXP K2nSEXP, SEXP n_betasSEXP, SEXP m_iSEXP, SEXP nSEXP, SEXP n_indSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::vec >::type betas(betasSEXP);
    Rcpp::traits::input_parameter< double >::type sig2_b(sig2_bSEXP);
    Rcpp::traits::input_parameter< double >::type sig2_eps(sig2_epsSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type y(ySEXP);
    Rcpp::traits::input_parameter< arma::mat >::type Xn(XnSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type Xnt(XntSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type ZZt_b(ZZt_bSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type ZZt_b_ii(ZZt_b_iiSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type ZZt_eps(ZZt_epsSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type ZZt_eps_ii(ZZt_eps_iiSEXP);
    Rcpp::traits::input_parameter< const double >::type c_hub(c_hubSEXP);
    Rcpp::traits::input_parameter< const double >::type c2_hub(c2_hubSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type K2n(K2nSEXP);
    Rcpp::traits::input_parameter< int >::type n_betas(n_betasSEXP);
    Rcpp::traits::input_parameter< int >::type m_i(m_iSEXP);
    Rcpp::traits::input_parameter< int >::type n(nSEXP);
    Rcpp::traits::input_parameter< int >::type n_ind(n_indSEXP);
    rcpp_result_gen = Rcpp::wrap(Psi_reml2(betas, sig2_b, sig2_eps, y, Xn, Xnt, ZZt_b, ZZt_b_ii, ZZt_eps, ZZt_eps_ii, c_hub, c2_hub, K2n, n_betas, m_i, n, n_ind));
    return rcpp_result_gen;
END_RCPP
}
// Psi_reml2_betas
arma::vec Psi_reml2_betas(arma::vec betas, double sig2_b, double sig2_eps, arma::mat y, arma::mat Xn, arma::mat ZZt_b, arma::mat ZZt_b_ii, arma::mat ZZt_eps, arma::mat ZZt_eps_ii, const double c_hub, int n_betas, int m_i, int n, int n_ind);
RcppExport SEXP _robustBLME_Psi_reml2_betas(SEXP betasSEXP, SEXP sig2_bSEXP, SEXP sig2_epsSEXP, SEXP ySEXP, SEXP XnSEXP, SEXP ZZt_bSEXP, SEXP ZZt_b_iiSEXP, SEXP ZZt_epsSEXP, SEXP ZZt_eps_iiSEXP, SEXP c_hubSEXP, SEXP n_betasSEXP, SEXP m_iSEXP, SEXP nSEXP, SEXP n_indSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::vec >::type betas(betasSEXP);
    Rcpp::traits::input_parameter< double >::type sig2_b(sig2_bSEXP);
    Rcpp::traits::input_parameter< double >::type sig2_eps(sig2_epsSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type y(ySEXP);
    Rcpp::traits::input_parameter< arma::mat >::type Xn(XnSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type ZZt_b(ZZt_bSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type ZZt_b_ii(ZZt_b_iiSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type ZZt_eps(ZZt_epsSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type ZZt_eps_ii(ZZt_eps_iiSEXP);
    Rcpp::traits::input_parameter< const double >::type c_hub(c_hubSEXP);
    Rcpp::traits::input_parameter< int >::type n_betas(n_betasSEXP);
    Rcpp::traits::input_parameter< int >::type m_i(m_iSEXP);
    Rcpp::traits::input_parameter< int >::type n(nSEXP);
    Rcpp::traits::input_parameter< int >::type n_ind(n_indSEXP);
    rcpp_result_gen = Rcpp::wrap(Psi_reml2_betas(betas, sig2_b, sig2_eps, y, Xn, ZZt_b, ZZt_b_ii, ZZt_eps, ZZt_eps_ii, c_hub, n_betas, m_i, n, n_ind));
    return rcpp_result_gen;
END_RCPP
}
// Psi_reml2_sig2_b
double Psi_reml2_sig2_b(arma::vec betas, double sig2_b, double sig2_eps, arma::mat y, arma::mat Xn, arma::mat Xnt, arma::mat ZZt_b, arma::mat ZZt_b_ii, arma::mat ZZt_eps, arma::mat ZZt_eps_ii, const double c2_hub, arma::mat K2n, int n_betas, int m_i, int n, int n_ind);
RcppExport SEXP _robustBLME_Psi_reml2_sig2_b(SEXP betasSEXP, SEXP sig2_bSEXP, SEXP sig2_epsSEXP, SEXP ySEXP, SEXP XnSEXP, SEXP XntSEXP, SEXP ZZt_bSEXP, SEXP ZZt_b_iiSEXP, SEXP ZZt_epsSEXP, SEXP ZZt_eps_iiSEXP, SEXP c2_hubSEXP, SEXP K2nSEXP, SEXP n_betasSEXP, SEXP m_iSEXP, SEXP nSEXP, SEXP n_indSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::vec >::type betas(betasSEXP);
    Rcpp::traits::input_parameter< double >::type sig2_b(sig2_bSEXP);
    Rcpp::traits::input_parameter< double >::type sig2_eps(sig2_epsSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type y(ySEXP);
    Rcpp::traits::input_parameter< arma::mat >::type Xn(XnSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type Xnt(XntSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type ZZt_b(ZZt_bSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type ZZt_b_ii(ZZt_b_iiSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type ZZt_eps(ZZt_epsSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type ZZt_eps_ii(ZZt_eps_iiSEXP);
    Rcpp::traits::input_parameter< const double >::type c2_hub(c2_hubSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type K2n(K2nSEXP);
    Rcpp::traits::input_parameter< int >::type n_betas(n_betasSEXP);
    Rcpp::traits::input_parameter< int >::type m_i(m_iSEXP);
    Rcpp::traits::input_parameter< int >::type n(nSEXP);
    Rcpp::traits::input_parameter< int >::type n_ind(n_indSEXP);
    rcpp_result_gen = Rcpp::wrap(Psi_reml2_sig2_b(betas, sig2_b, sig2_eps, y, Xn, Xnt, ZZt_b, ZZt_b_ii, ZZt_eps, ZZt_eps_ii, c2_hub, K2n, n_betas, m_i, n, n_ind));
    return rcpp_result_gen;
END_RCPP
}
// Psi_reml2_sig2_eps
double Psi_reml2_sig2_eps(arma::vec betas, double sig2_b, double sig2_eps, arma::mat y, arma::mat Xn, arma::mat Xnt, arma::mat ZZt_b, arma::mat ZZt_b_ii, arma::mat ZZt_eps, arma::mat ZZt_eps_ii, const double c2_hub, arma::mat K2n, int n_betas, int m_i, int n, int n_ind);
RcppExport SEXP _robustBLME_Psi_reml2_sig2_eps(SEXP betasSEXP, SEXP sig2_bSEXP, SEXP sig2_epsSEXP, SEXP ySEXP, SEXP XnSEXP, SEXP XntSEXP, SEXP ZZt_bSEXP, SEXP ZZt_b_iiSEXP, SEXP ZZt_epsSEXP, SEXP ZZt_eps_iiSEXP, SEXP c2_hubSEXP, SEXP K2nSEXP, SEXP n_betasSEXP, SEXP m_iSEXP, SEXP nSEXP, SEXP n_indSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::vec >::type betas(betasSEXP);
    Rcpp::traits::input_parameter< double >::type sig2_b(sig2_bSEXP);
    Rcpp::traits::input_parameter< double >::type sig2_eps(sig2_epsSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type y(ySEXP);
    Rcpp::traits::input_parameter< arma::mat >::type Xn(XnSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type Xnt(XntSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type ZZt_b(ZZt_bSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type ZZt_b_ii(ZZt_b_iiSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type ZZt_eps(ZZt_epsSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type ZZt_eps_ii(ZZt_eps_iiSEXP);
    Rcpp::traits::input_parameter< const double >::type c2_hub(c2_hubSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type K2n(K2nSEXP);
    Rcpp::traits::input_parameter< int >::type n_betas(n_betasSEXP);
    Rcpp::traits::input_parameter< int >::type m_i(m_iSEXP);
    Rcpp::traits::input_parameter< int >::type n(nSEXP);
    Rcpp::traits::input_parameter< int >::type n_ind(n_indSEXP);
    rcpp_result_gen = Rcpp::wrap(Psi_reml2_sig2_eps(betas, sig2_b, sig2_eps, y, Xn, Xnt, ZZt_b, ZZt_b_ii, ZZt_eps, ZZt_eps_ii, c2_hub, K2n, n_betas, m_i, n, n_ind));
    return rcpp_result_gen;
END_RCPP
}
// Psi_rlmm_reml2_abc
arma::vec Psi_rlmm_reml2_abc(arma::vec betas, arma::mat V_inv, arma::mat V_inv_1half, arma::mat y, arma::mat Xn, arma::mat Xnt, arma::mat ZZt_b_ii, const double c_hub, const double c2_hub, int n_betas, int m_i, int n, int n_ind, double consistency_b, double consistency_eps);
RcppExport SEXP _robustBLME_Psi_rlmm_reml2_abc(SEXP betasSEXP, SEXP V_invSEXP, SEXP V_inv_1halfSEXP, SEXP ySEXP, SEXP XnSEXP, SEXP XntSEXP, SEXP ZZt_b_iiSEXP, SEXP c_hubSEXP, SEXP c2_hubSEXP, SEXP n_betasSEXP, SEXP m_iSEXP, SEXP nSEXP, SEXP n_indSEXP, SEXP consistency_bSEXP, SEXP consistency_epsSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::vec >::type betas(betasSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type V_inv(V_invSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type V_inv_1half(V_inv_1halfSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type y(ySEXP);
    Rcpp::traits::input_parameter< arma::mat >::type Xn(XnSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type Xnt(XntSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type ZZt_b_ii(ZZt_b_iiSEXP);
    Rcpp::traits::input_parameter< const double >::type c_hub(c_hubSEXP);
    Rcpp::traits::input_parameter< const double >::type c2_hub(c2_hubSEXP);
    Rcpp::traits::input_parameter< int >::type n_betas(n_betasSEXP);
    Rcpp::traits::input_parameter< int >::type m_i(m_iSEXP);
    Rcpp::traits::input_parameter< int >::type n(nSEXP);
    Rcpp::traits::input_parameter< int >::type n_ind(n_indSEXP);
    Rcpp::traits::input_parameter< double >::type consistency_b(consistency_bSEXP);
    Rcpp::traits::input_parameter< double >::type consistency_eps(consistency_epsSEXP);
    rcpp_result_gen = Rcpp::wrap(Psi_rlmm_reml2_abc(betas, V_inv, V_inv_1half, y, Xn, Xnt, ZZt_b_ii, c_hub, c2_hub, n_betas, m_i, n, n_ind, consistency_b, consistency_eps));
    return rcpp_result_gen;
END_RCPP
}
// Psi_rlmm_reml2_ith
arma::vec Psi_rlmm_reml2_ith(arma::vec betas, double sig2_b, double sig2_eps, arma::mat y, arma::mat Xn, arma::mat Xnt, arma::mat ZZt_b, arma::mat ZZt_b_ii, arma::mat ZZt_eps, arma::mat ZZt_eps_ii, const double c_hub, const double c2_hub, arma::mat K2n, int n_betas, int m_i, int n, int n_ind, int ith);
RcppExport SEXP _robustBLME_Psi_rlmm_reml2_ith(SEXP betasSEXP, SEXP sig2_bSEXP, SEXP sig2_epsSEXP, SEXP ySEXP, SEXP XnSEXP, SEXP XntSEXP, SEXP ZZt_bSEXP, SEXP ZZt_b_iiSEXP, SEXP ZZt_epsSEXP, SEXP ZZt_eps_iiSEXP, SEXP c_hubSEXP, SEXP c2_hubSEXP, SEXP K2nSEXP, SEXP n_betasSEXP, SEXP m_iSEXP, SEXP nSEXP, SEXP n_indSEXP, SEXP ithSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::vec >::type betas(betasSEXP);
    Rcpp::traits::input_parameter< double >::type sig2_b(sig2_bSEXP);
    Rcpp::traits::input_parameter< double >::type sig2_eps(sig2_epsSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type y(ySEXP);
    Rcpp::traits::input_parameter< arma::mat >::type Xn(XnSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type Xnt(XntSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type ZZt_b(ZZt_bSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type ZZt_b_ii(ZZt_b_iiSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type ZZt_eps(ZZt_epsSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type ZZt_eps_ii(ZZt_eps_iiSEXP);
    Rcpp::traits::input_parameter< const double >::type c_hub(c_hubSEXP);
    Rcpp::traits::input_parameter< const double >::type c2_hub(c2_hubSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type K2n(K2nSEXP);
    Rcpp::traits::input_parameter< int >::type n_betas(n_betasSEXP);
    Rcpp::traits::input_parameter< int >::type m_i(m_iSEXP);
    Rcpp::traits::input_parameter< int >::type n(nSEXP);
    Rcpp::traits::input_parameter< int >::type n_ind(n_indSEXP);
    Rcpp::traits::input_parameter< int >::type ith(ithSEXP);
    rcpp_result_gen = Rcpp::wrap(Psi_rlmm_reml2_ith(betas, sig2_b, sig2_eps, y, Xn, Xnt, ZZt_b, ZZt_b_ii, ZZt_eps, ZZt_eps_ii, c_hub, c2_hub, K2n, n_betas, m_i, n, n_ind, ith));
    return rcpp_result_gen;
END_RCPP
}
// Psi_rlmm_reml2_alli
arma::mat Psi_rlmm_reml2_alli(arma::vec betas, double sig2_b, double sig2_eps, arma::mat y, arma::mat Xn, arma::mat Xnt, arma::mat ZZt_b, arma::mat ZZt_b_ii, arma::mat ZZt_eps, arma::mat ZZt_eps_ii, const double c_hub, const double c2_hub, arma::mat K2n, int n_betas, int m_i, int n, int n_ind);
RcppExport SEXP _robustBLME_Psi_rlmm_reml2_alli(SEXP betasSEXP, SEXP sig2_bSEXP, SEXP sig2_epsSEXP, SEXP ySEXP, SEXP XnSEXP, SEXP XntSEXP, SEXP ZZt_bSEXP, SEXP ZZt_b_iiSEXP, SEXP ZZt_epsSEXP, SEXP ZZt_eps_iiSEXP, SEXP c_hubSEXP, SEXP c2_hubSEXP, SEXP K2nSEXP, SEXP n_betasSEXP, SEXP m_iSEXP, SEXP nSEXP, SEXP n_indSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::vec >::type betas(betasSEXP);
    Rcpp::traits::input_parameter< double >::type sig2_b(sig2_bSEXP);
    Rcpp::traits::input_parameter< double >::type sig2_eps(sig2_epsSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type y(ySEXP);
    Rcpp::traits::input_parameter< arma::mat >::type Xn(XnSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type Xnt(XntSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type ZZt_b(ZZt_bSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type ZZt_b_ii(ZZt_b_iiSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type ZZt_eps(ZZt_epsSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type ZZt_eps_ii(ZZt_eps_iiSEXP);
    Rcpp::traits::input_parameter< const double >::type c_hub(c_hubSEXP);
    Rcpp::traits::input_parameter< const double >::type c2_hub(c2_hubSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type K2n(K2nSEXP);
    Rcpp::traits::input_parameter< int >::type n_betas(n_betasSEXP);
    Rcpp::traits::input_parameter< int >::type m_i(m_iSEXP);
    Rcpp::traits::input_parameter< int >::type n(nSEXP);
    Rcpp::traits::input_parameter< int >::type n_ind(n_indSEXP);
    rcpp_result_gen = Rcpp::wrap(Psi_rlmm_reml2_alli(betas, sig2_b, sig2_eps, y, Xn, Xnt, ZZt_b, ZZt_b_ii, ZZt_eps, ZZt_eps_ii, c_hub, c2_hub, K2n, n_betas, m_i, n, n_ind));
    return rcpp_result_gen;
END_RCPP
}
// simData_rlmm
arma::mat simData_rlmm(arma::vec betas, double sig2_b, double sig2_eps, arma::mat Xn, arma::mat ZZt_b_ii, arma::mat ZZt_eps_ii, int m_i, int n_ind);
RcppExport SEXP _robustBLME_simData_rlmm(SEXP betasSEXP, SEXP sig2_bSEXP, SEXP sig2_epsSEXP, SEXP XnSEXP, SEXP ZZt_b_iiSEXP, SEXP ZZt_eps_iiSEXP, SEXP m_iSEXP, SEXP n_indSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::vec >::type betas(betasSEXP);
    Rcpp::traits::input_parameter< double >::type sig2_b(sig2_bSEXP);
    Rcpp::traits::input_parameter< double >::type sig2_eps(sig2_epsSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type Xn(XnSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type ZZt_b_ii(ZZt_b_iiSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type ZZt_eps_ii(ZZt_eps_iiSEXP);
    Rcpp::traits::input_parameter< int >::type m_i(m_iSEXP);
    Rcpp::traits::input_parameter< int >::type n_ind(n_indSEXP);
    rcpp_result_gen = Rcpp::wrap(simData_rlmm(betas, sig2_b, sig2_eps, Xn, ZZt_b_ii, ZZt_eps_ii, m_i, n_ind));
    return rcpp_result_gen;
END_RCPP
}
// ABCkern_reml2
List ABCkern_reml2(int nabc, double h, arma::mat y, arma::mat Xn, arma::mat ZZt_b, arma::mat ZZt_b_ii, arma::mat ZZt_eps, arma::mat ZZt_eps_ii, const double c_hub, const double c2_hub, arma::mat K2n, arma::vec param_hat, arma::mat lch_prop_scale_mat, arma::vec Psi_hat, arma::mat chol_J_Psi_hat, double prior_beta_stdev, double prior_sig2_scale, arma::vec thin, int trace_int, int m_i, int n_ind);
RcppExport SEXP _robustBLME_ABCkern_reml2(SEXP nabcSEXP, SEXP hSEXP, SEXP ySEXP, SEXP XnSEXP, SEXP ZZt_bSEXP, SEXP ZZt_b_iiSEXP, SEXP ZZt_epsSEXP, SEXP ZZt_eps_iiSEXP, SEXP c_hubSEXP, SEXP c2_hubSEXP, SEXP K2nSEXP, SEXP param_hatSEXP, SEXP lch_prop_scale_matSEXP, SEXP Psi_hatSEXP, SEXP chol_J_Psi_hatSEXP, SEXP prior_beta_stdevSEXP, SEXP prior_sig2_scaleSEXP, SEXP thinSEXP, SEXP trace_intSEXP, SEXP m_iSEXP, SEXP n_indSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< int >::type nabc(nabcSEXP);
    Rcpp::traits::input_parameter< double >::type h(hSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type y(ySEXP);
    Rcpp::traits::input_parameter< arma::mat >::type Xn(XnSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type ZZt_b(ZZt_bSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type ZZt_b_ii(ZZt_b_iiSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type ZZt_eps(ZZt_epsSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type ZZt_eps_ii(ZZt_eps_iiSEXP);
    Rcpp::traits::input_parameter< const double >::type c_hub(c_hubSEXP);
    Rcpp::traits::input_parameter< const double >::type c2_hub(c2_hubSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type K2n(K2nSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type param_hat(param_hatSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type lch_prop_scale_mat(lch_prop_scale_matSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type Psi_hat(Psi_hatSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type chol_J_Psi_hat(chol_J_Psi_hatSEXP);
    Rcpp::traits::input_parameter< double >::type prior_beta_stdev(prior_beta_stdevSEXP);
    Rcpp::traits::input_parameter< double >::type prior_sig2_scale(prior_sig2_scaleSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type thin(thinSEXP);
    Rcpp::traits::input_parameter< int >::type trace_int(trace_intSEXP);
    Rcpp::traits::input_parameter< int >::type m_i(m_iSEXP);
    Rcpp::traits::input_parameter< int >::type n_ind(n_indSEXP);
    rcpp_result_gen = Rcpp::wrap(ABCkern_reml2(nabc, h, y, Xn, ZZt_b, ZZt_b_ii, ZZt_eps, ZZt_eps_ii, c_hub, c2_hub, K2n, param_hat, lch_prop_scale_mat, Psi_hat, chol_J_Psi_hat, prior_beta_stdev, prior_sig2_scale, thin, trace_int, m_i, n_ind));
    return rcpp_result_gen;
END_RCPP
}
// log_lik_lmm
double log_lik_lmm(arma::vec betas, double sig2_b, double sig2_eps, arma::mat y, arma::mat Xn, arma::mat ZZt_b_ii, arma::mat ZZt_eps_ii, int n_betas, int m_i, int n, int n_ind);
RcppExport SEXP _robustBLME_log_lik_lmm(SEXP betasSEXP, SEXP sig2_bSEXP, SEXP sig2_epsSEXP, SEXP ySEXP, SEXP XnSEXP, SEXP ZZt_b_iiSEXP, SEXP ZZt_eps_iiSEXP, SEXP n_betasSEXP, SEXP m_iSEXP, SEXP nSEXP, SEXP n_indSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::vec >::type betas(betasSEXP);
    Rcpp::traits::input_parameter< double >::type sig2_b(sig2_bSEXP);
    Rcpp::traits::input_parameter< double >::type sig2_eps(sig2_epsSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type y(ySEXP);
    Rcpp::traits::input_parameter< arma::mat >::type Xn(XnSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type ZZt_b_ii(ZZt_b_iiSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type ZZt_eps_ii(ZZt_eps_iiSEXP);
    Rcpp::traits::input_parameter< int >::type n_betas(n_betasSEXP);
    Rcpp::traits::input_parameter< int >::type m_i(m_iSEXP);
    Rcpp::traits::input_parameter< int >::type n(nSEXP);
    Rcpp::traits::input_parameter< int >::type n_ind(n_indSEXP);
    rcpp_result_gen = Rcpp::wrap(log_lik_lmm(betas, sig2_b, sig2_eps, y, Xn, ZZt_b_ii, ZZt_eps_ii, n_betas, m_i, n, n_ind));
    return rcpp_result_gen;
END_RCPP
}
// funPsi_rls
arma::vec funPsi_rls(double mu, double sig, arma::vec y, int n, const double c1, const double c2, const double kc2);
RcppExport SEXP _robustBLME_funPsi_rls(SEXP muSEXP, SEXP sigSEXP, SEXP ySEXP, SEXP nSEXP, SEXP c1SEXP, SEXP c2SEXP, SEXP kc2SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< double >::type mu(muSEXP);
    Rcpp::traits::input_parameter< double >::type sig(sigSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type y(ySEXP);
    Rcpp::traits::input_parameter< int >::type n(nSEXP);
    Rcpp::traits::input_parameter< const double >::type c1(c1SEXP);
    Rcpp::traits::input_parameter< const double >::type c2(c2SEXP);
    Rcpp::traits::input_parameter< const double >::type kc2(kc2SEXP);
    rcpp_result_gen = Rcpp::wrap(funPsi_rls(mu, sig, y, n, c1, c2, kc2));
    return rcpp_result_gen;
END_RCPP
}
// Owen_Psi
arma::mat Owen_Psi(double mu, double sig, arma::vec y, int n, const double c1, const double c2, const double kc2);
RcppExport SEXP _robustBLME_Owen_Psi(SEXP muSEXP, SEXP sigSEXP, SEXP ySEXP, SEXP nSEXP, SEXP c1SEXP, SEXP c2SEXP, SEXP kc2SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< double >::type mu(muSEXP);
    Rcpp::traits::input_parameter< double >::type sig(sigSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type y(ySEXP);
    Rcpp::traits::input_parameter< int >::type n(nSEXP);
    Rcpp::traits::input_parameter< const double >::type c1(c1SEXP);
    Rcpp::traits::input_parameter< const double >::type c2(c2SEXP);
    Rcpp::traits::input_parameter< const double >::type kc2(kc2SEXP);
    rcpp_result_gen = Rcpp::wrap(Owen_Psi(mu, sig, y, n, c1, c2, kc2));
    return rcpp_result_gen;
END_RCPP
}
// Owen_Lmult
double Owen_Lmult(arma::vec lambda, double mu, double sig, arma::vec y, int n, const double c1, const double c2, const double kc2);
RcppExport SEXP _robustBLME_Owen_Lmult(SEXP lambdaSEXP, SEXP muSEXP, SEXP sigSEXP, SEXP ySEXP, SEXP nSEXP, SEXP c1SEXP, SEXP c2SEXP, SEXP kc2SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::vec >::type lambda(lambdaSEXP);
    Rcpp::traits::input_parameter< double >::type mu(muSEXP);
    Rcpp::traits::input_parameter< double >::type sig(sigSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type y(ySEXP);
    Rcpp::traits::input_parameter< int >::type n(nSEXP);
    Rcpp::traits::input_parameter< const double >::type c1(c1SEXP);
    Rcpp::traits::input_parameter< const double >::type c2(c2SEXP);
    Rcpp::traits::input_parameter< const double >::type kc2(kc2SEXP);
    rcpp_result_gen = Rcpp::wrap(Owen_Lmult(lambda, mu, sig, y, n, c1, c2, kc2));
    return rcpp_result_gen;
END_RCPP
}
// dPrior
double dPrior(double mu, double lsig, double muSD, double sigScale, bool lg);
RcppExport SEXP _robustBLME_dPrior(SEXP muSEXP, SEXP lsigSEXP, SEXP muSDSEXP, SEXP sigScaleSEXP, SEXP lgSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< double >::type mu(muSEXP);
    Rcpp::traits::input_parameter< double >::type lsig(lsigSEXP);
    Rcpp::traits::input_parameter< double >::type muSD(muSDSEXP);
    Rcpp::traits::input_parameter< double >::type sigScale(sigScaleSEXP);
    Rcpp::traits::input_parameter< bool >::type lg(lgSEXP);
    rcpp_result_gen = Rcpp::wrap(dPrior(mu, lsig, muSD, sigScale, lg));
    return rcpp_result_gen;
END_RCPP
}
// simData_rls
arma::vec simData_rls(double mu, double sig, int n);
RcppExport SEXP _robustBLME_simData_rls(SEXP muSEXP, SEXP sigSEXP, SEXP nSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< double >::type mu(muSEXP);
    Rcpp::traits::input_parameter< double >::type sig(sigSEXP);
    Rcpp::traits::input_parameter< int >::type n(nSEXP);
    rcpp_result_gen = Rcpp::wrap(simData_rls(mu, sig, n));
    return rcpp_result_gen;
END_RCPP
}
// ABCrls
arma::mat ABCrls(int nabc, double eps, arma::vec y, const double c1, const double c2, const double kc2, arma::vec hatPar, arma::mat hatVcov, arma::vec hatGrad, arma::mat hatJinv, double muSD, double sigScale, arma::vec thin);
RcppExport SEXP _robustBLME_ABCrls(SEXP nabcSEXP, SEXP epsSEXP, SEXP ySEXP, SEXP c1SEXP, SEXP c2SEXP, SEXP kc2SEXP, SEXP hatParSEXP, SEXP hatVcovSEXP, SEXP hatGradSEXP, SEXP hatJinvSEXP, SEXP muSDSEXP, SEXP sigScaleSEXP, SEXP thinSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< int >::type nabc(nabcSEXP);
    Rcpp::traits::input_parameter< double >::type eps(epsSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type y(ySEXP);
    Rcpp::traits::input_parameter< const double >::type c1(c1SEXP);
    Rcpp::traits::input_parameter< const double >::type c2(c2SEXP);
    Rcpp::traits::input_parameter< const double >::type kc2(kc2SEXP);
    Rcpp::traits::input_parameter< arma::vec >::type hatPar(hatParSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type hatVcov(hatVcovSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type hatGrad(hatGradSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type hatJinv(hatJinvSEXP);
    Rcpp::traits::input_parameter< double >::type muSD(muSDSEXP);
    Rcpp::traits::input_parameter< double >::type sigScale(sigScaleSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type thin(thinSEXP);
    rcpp_result_gen = Rcpp::wrap(ABCrls(nabc, eps, y, c1, c2, kc2, hatPar, hatVcov, hatGrad, hatJinv, muSD, sigScale, thin));
    return rcpp_result_gen;
END_RCPP
}
// distPsi_rls
double distPsi_rls(arma::vec mu_lsig, arma::vec y, const double c1, const double c2, const double kc2);
RcppExport SEXP _robustBLME_distPsi_rls(SEXP mu_lsigSEXP, SEXP ySEXP, SEXP c1SEXP, SEXP c2SEXP, SEXP kc2SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::vec >::type mu_lsig(mu_lsigSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type y(ySEXP);
    Rcpp::traits::input_parameter< const double >::type c1(c1SEXP);
    Rcpp::traits::input_parameter< const double >::type c2(c2SEXP);
    Rcpp::traits::input_parameter< const double >::type kc2(kc2SEXP);
    rcpp_result_gen = Rcpp::wrap(distPsi_rls(mu_lsig, y, c1, c2, kc2));
    return rcpp_result_gen;
END_RCPP
}
// post_ls
double post_ls(double mu, double lsig, arma::vec y, double muSD, double sigScale, bool lg);
RcppExport SEXP _robustBLME_post_ls(SEXP muSEXP, SEXP lsigSEXP, SEXP ySEXP, SEXP muSDSEXP, SEXP sigScaleSEXP, SEXP lgSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< double >::type mu(muSEXP);
    Rcpp::traits::input_parameter< double >::type lsig(lsigSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type y(ySEXP);
    Rcpp::traits::input_parameter< double >::type muSD(muSDSEXP);
    Rcpp::traits::input_parameter< double >::type sigScale(sigScaleSEXP);
    Rcpp::traits::input_parameter< bool >::type lg(lgSEXP);
    rcpp_result_gen = Rcpp::wrap(post_ls(mu, lsig, y, muSD, sigScale, lg));
    return rcpp_result_gen;
END_RCPP
}

RcppExport SEXP robustBLME_ABCkern_reml2(SEXP, SEXP, SEXP, SEXP, SEXP, SEXP, SEXP, SEXP, SEXP, SEXP, SEXP, SEXP, SEXP, SEXP, SEXP, SEXP, SEXP, SEXP, SEXP, SEXP, SEXP);
RcppExport SEXP robustBLME_log_lik_lmm(SEXP, SEXP, SEXP, SEXP, SEXP, SEXP, SEXP, SEXP, SEXP, SEXP, SEXP);
RcppExport SEXP robustBLME_Psi_reml2(SEXP, SEXP, SEXP, SEXP, SEXP, SEXP, SEXP, SEXP, SEXP, SEXP, SEXP, SEXP, SEXP, SEXP, SEXP, SEXP, SEXP);
RcppExport SEXP robustBLME_simData_rlmm(SEXP, SEXP, SEXP, SEXP, SEXP, SEXP, SEXP, SEXP);
RcppExport SEXP robustBLME_V_list(SEXP, SEXP, SEXP, SEXP, SEXP, SEXP, SEXP);

static const R_CallMethodDef CallEntries[] = {
    {"_robustBLME_psi_huber", (DL_FUNC) &_robustBLME_psi_huber, 2},
    {"_robustBLME_vpsi_huber", (DL_FUNC) &_robustBLME_vpsi_huber, 3},
    {"_robustBLME_psip_huber", (DL_FUNC) &_robustBLME_psip_huber, 2},
    {"_robustBLME_dhalfCauchy", (DL_FUNC) &_robustBLME_dhalfCauchy, 3},
    {"_robustBLME_dinvgamma", (DL_FUNC) &_robustBLME_dinvgamma, 4},
    {"_robustBLME_thinMat", (DL_FUNC) &_robustBLME_thinMat, 2},
    {"_robustBLME_rmvnorm", (DL_FUNC) &_robustBLME_rmvnorm, 3},
    {"_robustBLME_rmvnorm2", (DL_FUNC) &_robustBLME_rmvnorm2, 3},
    {"_robustBLME_rmvt", (DL_FUNC) &_robustBLME_rmvt, 4},
    {"_robustBLME_dmvt", (DL_FUNC) &_robustBLME_dmvt, 7},
    {"_robustBLME_dPrior_lmm", (DL_FUNC) &_robustBLME_dPrior_lmm, 7},
    {"_robustBLME_dmvnorm_I", (DL_FUNC) &_robustBLME_dmvnorm_I, 4},
    {"_robustBLME_V_list", (DL_FUNC) &_robustBLME_V_list, 7},
    {"_robustBLME_Psi_reml2", (DL_FUNC) &_robustBLME_Psi_reml2, 17},
    {"_robustBLME_Psi_reml2_betas", (DL_FUNC) &_robustBLME_Psi_reml2_betas, 14},
    {"_robustBLME_Psi_reml2_sig2_b", (DL_FUNC) &_robustBLME_Psi_reml2_sig2_b, 16},
    {"_robustBLME_Psi_reml2_sig2_eps", (DL_FUNC) &_robustBLME_Psi_reml2_sig2_eps, 16},
    {"_robustBLME_Psi_rlmm_reml2_abc", (DL_FUNC) &_robustBLME_Psi_rlmm_reml2_abc, 15},
    {"_robustBLME_Psi_rlmm_reml2_ith", (DL_FUNC) &_robustBLME_Psi_rlmm_reml2_ith, 18},
    {"_robustBLME_Psi_rlmm_reml2_alli", (DL_FUNC) &_robustBLME_Psi_rlmm_reml2_alli, 17},
    {"_robustBLME_simData_rlmm", (DL_FUNC) &_robustBLME_simData_rlmm, 8},
    {"_robustBLME_ABCkern_reml2", (DL_FUNC) &_robustBLME_ABCkern_reml2, 21},
    {"_robustBLME_log_lik_lmm", (DL_FUNC) &_robustBLME_log_lik_lmm, 11},
    {"_robustBLME_funPsi_rls", (DL_FUNC) &_robustBLME_funPsi_rls, 7},
    {"_robustBLME_Owen_Psi", (DL_FUNC) &_robustBLME_Owen_Psi, 7},
    {"_robustBLME_Owen_Lmult", (DL_FUNC) &_robustBLME_Owen_Lmult, 8},
    {"_robustBLME_dPrior", (DL_FUNC) &_robustBLME_dPrior, 5},
    {"_robustBLME_simData_rls", (DL_FUNC) &_robustBLME_simData_rls, 3},
    {"_robustBLME_ABCrls", (DL_FUNC) &_robustBLME_ABCrls, 13},
    {"_robustBLME_distPsi_rls", (DL_FUNC) &_robustBLME_distPsi_rls, 5},
    {"_robustBLME_post_ls", (DL_FUNC) &_robustBLME_post_ls, 6},
    {"robustBLME_ABCkern_reml2", (DL_FUNC) &robustBLME_ABCkern_reml2, 21},
    {"robustBLME_log_lik_lmm",   (DL_FUNC) &robustBLME_log_lik_lmm,   11},
    {"robustBLME_Psi_reml2",     (DL_FUNC) &robustBLME_Psi_reml2,     17},
    {"robustBLME_simData_rlmm",  (DL_FUNC) &robustBLME_simData_rlmm,   8},
    {"robustBLME_V_list",        (DL_FUNC) &robustBLME_V_list,         7},
    {NULL, NULL, 0}
};

RcppExport void R_init_robustBLME(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
