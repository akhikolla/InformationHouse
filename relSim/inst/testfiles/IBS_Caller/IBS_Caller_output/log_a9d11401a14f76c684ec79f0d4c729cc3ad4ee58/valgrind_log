<?xml version="1.0"?>

<valgrindoutput>

<protocolversion>4</protocolversion>
<protocoltool>memcheck</protocoltool>

<preamble>
  <line>Memcheck, a memory error detector</line>
  <line>Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.</line>
  <line>Using Valgrind-3.15.0 and LibVEX; rerun with -h for copyright info</line>
  <line>Command: ./IBS_Caller_DeepState_TestHarness --input_test_file /home/akhila/fuzzer_packages/fuzzedpackages/relSim/inst/testfiles/IBS_Caller/IBS_Caller_output/a9d11401a14f76c684ec79f0d4c729cc3ad4ee58.crash</line>
</preamble>

<pid>457483</pid>
<ppid>457482</ppid>
<tool>memcheck</tool>

<args>
  <vargv>
    <exe>/usr/bin/valgrind.bin</exe>
    <arg>--xml=yes</arg>
    <arg>--xml-file=/home/akhila/fuzzer_packages/fuzzedpackages/relSim/inst/testfiles/IBS_Caller/IBS_Caller_output/log_a9d11401a14f76c684ec79f0d4c729cc3ad4ee58/valgrind_log</arg>
    <arg>--tool=memcheck</arg>
    <arg>--leak-check=yes</arg>
  </vargv>
  <argv>
    <exe>./IBS_Caller_DeepState_TestHarness</exe>
    <arg>--input_test_file</arg>
    <arg>/home/akhila/fuzzer_packages/fuzzedpackages/relSim/inst/testfiles/IBS_Caller/IBS_Caller_output/a9d11401a14f76c684ec79f0d4c729cc3ad4ee58.crash</arg>
  </argv>
</args>

<status>
  <state>RUNNING</state>
  <time>00:00:00:00.025 </time>
</status>

<error>
  <unique>0x0</unique>
  <tid>1</tid>
  <kind>UninitCondition</kind>
  <what>Conditional jump or move depends on uninitialised value(s)</what>
  <stack>
    <frame>
      <ip>0x4D455C0</ip>
      <obj>/home/akhila/fuzzer_packages/fuzzedpackages/relSim/src/relSim.so</obj>
      <fn>profIBS(int const*)</fn>
      <dir>/home/akhila/fuzzer_packages/fuzzedpackages/relSim/src</dir>
      <file>relSim.cpp</file>
      <line>13</line>
    </frame>
    <frame>
      <ip>0x4D45E59</ip>
      <obj>/home/akhila/fuzzer_packages/fuzzedpackages/relSim/src/relSim.so</obj>
      <fn>IBS(int const*, int const*, int)</fn>
      <dir>/home/akhila/fuzzer_packages/fuzzedpackages/relSim/src</dir>
      <file>relSim.cpp</file>
      <line>160</line>
    </frame>
    <frame>
      <ip>0x40A132</ip>
      <obj>/home/akhila/fuzzer_packages/fuzzedpackages/relSim/inst/testfiles/IBS_Caller/IBS_Caller_DeepState_TestHarness</obj>
      <fn>DeepState_Test_relSim_deepstate_test_IBS_Caller_test()</fn>
      <dir>/home/akhila/fuzzer_packages/fuzzedpackages/relSim/inst/testfiles/IBS_Caller</dir>
      <file>IBS_Caller_DeepState_TestHarness.cpp</file>
      <line>31</line>
    </frame>
    <frame>
      <ip>0x409B48</ip>
      <obj>/home/akhila/fuzzer_packages/fuzzedpackages/relSim/inst/testfiles/IBS_Caller/IBS_Caller_DeepState_TestHarness</obj>
      <fn>DeepState_Run_relSim_deepstate_test_IBS_Caller_test()</fn>
      <dir>/home/akhila/fuzzer_packages/fuzzedpackages/relSim/inst/testfiles/IBS_Caller</dir>
      <file>IBS_Caller_DeepState_TestHarness.cpp</file>
      <line>13</line>
    </frame>
    <frame>
      <ip>0x41CF78</ip>
      <obj>/home/akhila/fuzzer_packages/fuzzedpackages/relSim/inst/testfiles/IBS_Caller/IBS_Caller_DeepState_TestHarness</obj>
      <fn>DeepState_RunTest.isra.0</fn>
    </frame>
    <frame>
      <ip>0x41D219</ip>
      <obj>/home/akhila/fuzzer_packages/fuzzedpackages/relSim/inst/testfiles/IBS_Caller/IBS_Caller_DeepState_TestHarness</obj>
      <fn>DeepState_ForkAndRunTest</fn>
    </frame>
    <frame>
      <ip>0x41D2F4</ip>
      <obj>/home/akhila/fuzzer_packages/fuzzedpackages/relSim/inst/testfiles/IBS_Caller/IBS_Caller_DeepState_TestHarness</obj>
      <fn>DeepState_RunSavedTestCase</fn>
    </frame>
    <frame>
      <ip>0x407655</ip>
      <obj>/home/akhila/fuzzer_packages/fuzzedpackages/relSim/inst/testfiles/IBS_Caller/IBS_Caller_DeepState_TestHarness</obj>
      <fn>main</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x1</unique>
  <tid>1</tid>
  <kind>UninitCondition</kind>
  <what>Conditional jump or move depends on uninitialised value(s)</what>
  <stack>
    <frame>
      <ip>0x4D455D2</ip>
      <obj>/home/akhila/fuzzer_packages/fuzzedpackages/relSim/src/relSim.so</obj>
      <fn>profIBS(int const*)</fn>
      <dir>/home/akhila/fuzzer_packages/fuzzedpackages/relSim/src</dir>
      <file>relSim.cpp</file>
      <line>15</line>
    </frame>
    <frame>
      <ip>0x4D45E59</ip>
      <obj>/home/akhila/fuzzer_packages/fuzzedpackages/relSim/src/relSim.so</obj>
      <fn>IBS(int const*, int const*, int)</fn>
      <dir>/home/akhila/fuzzer_packages/fuzzedpackages/relSim/src</dir>
      <file>relSim.cpp</file>
      <line>160</line>
    </frame>
    <frame>
      <ip>0x40A132</ip>
      <obj>/home/akhila/fuzzer_packages/fuzzedpackages/relSim/inst/testfiles/IBS_Caller/IBS_Caller_DeepState_TestHarness</obj>
      <fn>DeepState_Test_relSim_deepstate_test_IBS_Caller_test()</fn>
      <dir>/home/akhila/fuzzer_packages/fuzzedpackages/relSim/inst/testfiles/IBS_Caller</dir>
      <file>IBS_Caller_DeepState_TestHarness.cpp</file>
      <line>31</line>
    </frame>
    <frame>
      <ip>0x409B48</ip>
      <obj>/home/akhila/fuzzer_packages/fuzzedpackages/relSim/inst/testfiles/IBS_Caller/IBS_Caller_DeepState_TestHarness</obj>
      <fn>DeepState_Run_relSim_deepstate_test_IBS_Caller_test()</fn>
      <dir>/home/akhila/fuzzer_packages/fuzzedpackages/relSim/inst/testfiles/IBS_Caller</dir>
      <file>IBS_Caller_DeepState_TestHarness.cpp</file>
      <line>13</line>
    </frame>
    <frame>
      <ip>0x41CF78</ip>
      <obj>/home/akhila/fuzzer_packages/fuzzedpackages/relSim/inst/testfiles/IBS_Caller/IBS_Caller_DeepState_TestHarness</obj>
      <fn>DeepState_RunTest.isra.0</fn>
    </frame>
    <frame>
      <ip>0x41D219</ip>
      <obj>/home/akhila/fuzzer_packages/fuzzedpackages/relSim/inst/testfiles/IBS_Caller/IBS_Caller_DeepState_TestHarness</obj>
      <fn>DeepState_ForkAndRunTest</fn>
    </frame>
    <frame>
      <ip>0x41D2F4</ip>
      <obj>/home/akhila/fuzzer_packages/fuzzedpackages/relSim/inst/testfiles/IBS_Caller/IBS_Caller_DeepState_TestHarness</obj>
      <fn>DeepState_RunSavedTestCase</fn>
    </frame>
    <frame>
      <ip>0x407655</ip>
      <obj>/home/akhila/fuzzer_packages/fuzzedpackages/relSim/inst/testfiles/IBS_Caller/IBS_Caller_DeepState_TestHarness</obj>
      <fn>main</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x2</unique>
  <tid>1</tid>
  <kind>UninitCondition</kind>
  <what>Conditional jump or move depends on uninitialised value(s)</what>
  <stack>
    <frame>
      <ip>0x4D455D7</ip>
      <obj>/home/akhila/fuzzer_packages/fuzzedpackages/relSim/src/relSim.so</obj>
      <fn>profIBS(int const*)</fn>
      <dir>/home/akhila/fuzzer_packages/fuzzedpackages/relSim/src</dir>
      <file>relSim.cpp</file>
      <line>15</line>
    </frame>
    <frame>
      <ip>0x4D45E59</ip>
      <obj>/home/akhila/fuzzer_packages/fuzzedpackages/relSim/src/relSim.so</obj>
      <fn>IBS(int const*, int const*, int)</fn>
      <dir>/home/akhila/fuzzer_packages/fuzzedpackages/relSim/src</dir>
      <file>relSim.cpp</file>
      <line>160</line>
    </frame>
    <frame>
      <ip>0x40A132</ip>
      <obj>/home/akhila/fuzzer_packages/fuzzedpackages/relSim/inst/testfiles/IBS_Caller/IBS_Caller_DeepState_TestHarness</obj>
      <fn>DeepState_Test_relSim_deepstate_test_IBS_Caller_test()</fn>
      <dir>/home/akhila/fuzzer_packages/fuzzedpackages/relSim/inst/testfiles/IBS_Caller</dir>
      <file>IBS_Caller_DeepState_TestHarness.cpp</file>
      <line>31</line>
    </frame>
    <frame>
      <ip>0x409B48</ip>
      <obj>/home/akhila/fuzzer_packages/fuzzedpackages/relSim/inst/testfiles/IBS_Caller/IBS_Caller_DeepState_TestHarness</obj>
      <fn>DeepState_Run_relSim_deepstate_test_IBS_Caller_test()</fn>
      <dir>/home/akhila/fuzzer_packages/fuzzedpackages/relSim/inst/testfiles/IBS_Caller</dir>
      <file>IBS_Caller_DeepState_TestHarness.cpp</file>
      <line>13</line>
    </frame>
    <frame>
      <ip>0x41CF78</ip>
      <obj>/home/akhila/fuzzer_packages/fuzzedpackages/relSim/inst/testfiles/IBS_Caller/IBS_Caller_DeepState_TestHarness</obj>
      <fn>DeepState_RunTest.isra.0</fn>
    </frame>
    <frame>
      <ip>0x41D219</ip>
      <obj>/home/akhila/fuzzer_packages/fuzzedpackages/relSim/inst/testfiles/IBS_Caller/IBS_Caller_DeepState_TestHarness</obj>
      <fn>DeepState_ForkAndRunTest</fn>
    </frame>
    <frame>
      <ip>0x41D2F4</ip>
      <obj>/home/akhila/fuzzer_packages/fuzzedpackages/relSim/inst/testfiles/IBS_Caller/IBS_Caller_DeepState_TestHarness</obj>
      <fn>DeepState_RunSavedTestCase</fn>
    </frame>
    <frame>
      <ip>0x407655</ip>
      <obj>/home/akhila/fuzzer_packages/fuzzedpackages/relSim/inst/testfiles/IBS_Caller/IBS_Caller_DeepState_TestHarness</obj>
      <fn>main</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x3</unique>
  <tid>1</tid>
  <kind>InvalidRead</kind>
  <what>Invalid read of size 4</what>
  <stack>
    <frame>
      <ip>0x4D45E46</ip>
      <obj>/home/akhila/fuzzer_packages/fuzzedpackages/relSim/src/relSim.so</obj>
      <fn>IBS(int const*, int const*, int)</fn>
      <dir>/home/akhila/fuzzer_packages/fuzzedpackages/relSim/src</dir>
      <file>relSim.cpp</file>
      <line>158</line>
    </frame>
    <frame>
      <ip>0x40A132</ip>
      <obj>/home/akhila/fuzzer_packages/fuzzedpackages/relSim/inst/testfiles/IBS_Caller/IBS_Caller_DeepState_TestHarness</obj>
      <fn>DeepState_Test_relSim_deepstate_test_IBS_Caller_test()</fn>
      <dir>/home/akhila/fuzzer_packages/fuzzedpackages/relSim/inst/testfiles/IBS_Caller</dir>
      <file>IBS_Caller_DeepState_TestHarness.cpp</file>
      <line>31</line>
    </frame>
    <frame>
      <ip>0x409B48</ip>
      <obj>/home/akhila/fuzzer_packages/fuzzedpackages/relSim/inst/testfiles/IBS_Caller/IBS_Caller_DeepState_TestHarness</obj>
      <fn>DeepState_Run_relSim_deepstate_test_IBS_Caller_test()</fn>
      <dir>/home/akhila/fuzzer_packages/fuzzedpackages/relSim/inst/testfiles/IBS_Caller</dir>
      <file>IBS_Caller_DeepState_TestHarness.cpp</file>
      <line>13</line>
    </frame>
    <frame>
      <ip>0x41CF78</ip>
      <obj>/home/akhila/fuzzer_packages/fuzzedpackages/relSim/inst/testfiles/IBS_Caller/IBS_Caller_DeepState_TestHarness</obj>
      <fn>DeepState_RunTest.isra.0</fn>
    </frame>
    <frame>
      <ip>0x41D219</ip>
      <obj>/home/akhila/fuzzer_packages/fuzzedpackages/relSim/inst/testfiles/IBS_Caller/IBS_Caller_DeepState_TestHarness</obj>
      <fn>DeepState_ForkAndRunTest</fn>
    </frame>
    <frame>
      <ip>0x41D2F4</ip>
      <obj>/home/akhila/fuzzer_packages/fuzzedpackages/relSim/inst/testfiles/IBS_Caller/IBS_Caller_DeepState_TestHarness</obj>
      <fn>DeepState_RunSavedTestCase</fn>
    </frame>
    <frame>
      <ip>0x407655</ip>
      <obj>/home/akhila/fuzzer_packages/fuzzedpackages/relSim/inst/testfiles/IBS_Caller/IBS_Caller_DeepState_TestHarness</obj>
      <fn>main</fn>
    </frame>
  </stack>
  <auxwhat>Address 0x92c92a8 is 0 bytes after a block of size 7,960 alloc'd</auxwhat>
  <stack>
    <frame>
      <ip>0x483B7F3</ip>
      <obj>/usr/lib/x86_64-linux-gnu/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>malloc</fn>
    </frame>
    <frame>
      <ip>0x49D42B3</ip>
      <obj>/usr/lib/R/lib/libR.so</obj>
    </frame>
    <frame>
      <ip>0x49D5EC9</ip>
      <obj>/usr/lib/R/lib/libR.so</obj>
      <fn>Rf_allocVector3</fn>
    </frame>
    <frame>
      <ip>0x48DAAEE</ip>
      <obj>/usr/lib/R/lib/libR.so</obj>
    </frame>
    <frame>
      <ip>0x497A1D0</ip>
      <obj>/usr/lib/R/lib/libR.so</obj>
    </frame>
    <frame>
      <ip>0x4994DD7</ip>
      <obj>/usr/lib/R/lib/libR.so</obj>
      <fn>Rf_eval</fn>
    </frame>
    <frame>
      <ip>0x4996C9E</ip>
      <obj>/usr/lib/R/lib/libR.so</obj>
    </frame>
    <frame>
      <ip>0x4997B91</ip>
      <obj>/usr/lib/R/lib/libR.so</obj>
      <fn>Rf_applyClosure</fn>
    </frame>
    <frame>
      <ip>0x499A4B8</ip>
      <obj>/usr/lib/R/lib/libR.so</obj>
      <fn>R_forceAndCall</fn>
    </frame>
    <frame>
      <ip>0x48C4DB6</ip>
      <obj>/usr/lib/R/lib/libR.so</obj>
    </frame>
    <frame>
      <ip>0x49D90DE</ip>
      <obj>/usr/lib/R/lib/libR.so</obj>
    </frame>
    <frame>
      <ip>0x4979FC0</ip>
      <obj>/usr/lib/R/lib/libR.so</obj>
    </frame>
  </stack>
</error>

<error>
  <unique>0x4</unique>
  <tid>1</tid>
  <kind>InvalidRead</kind>
  <what>Invalid read of size 4</what>
  <stack>
    <frame>
      <ip>0x4D45E4E</ip>
      <obj>/home/akhila/fuzzer_packages/fuzzedpackages/relSim/src/relSim.so</obj>
      <fn>IBS(int const*, int const*, int)</fn>
      <dir>/home/akhila/fuzzer_packages/fuzzedpackages/relSim/src</dir>
      <file>relSim.cpp</file>
      <line>159</line>
    </frame>
    <frame>
      <ip>0x40A132</ip>
      <obj>/home/akhila/fuzzer_packages/fuzzedpackages/relSim/inst/testfiles/IBS_Caller/IBS_Caller_DeepState_TestHarness</obj>
      <fn>DeepState_Test_relSim_deepstate_test_IBS_Caller_test()</fn>
      <dir>/home/akhila/fuzzer_packages/fuzzedpackages/relSim/inst/testfiles/IBS_Caller</dir>
      <file>IBS_Caller_DeepState_TestHarness.cpp</file>
      <line>31</line>
    </frame>
    <frame>
      <ip>0x409B48</ip>
      <obj>/home/akhila/fuzzer_packages/fuzzedpackages/relSim/inst/testfiles/IBS_Caller/IBS_Caller_DeepState_TestHarness</obj>
      <fn>DeepState_Run_relSim_deepstate_test_IBS_Caller_test()</fn>
      <dir>/home/akhila/fuzzer_packages/fuzzedpackages/relSim/inst/testfiles/IBS_Caller</dir>
      <file>IBS_Caller_DeepState_TestHarness.cpp</file>
      <line>13</line>
    </frame>
    <frame>
      <ip>0x41CF78</ip>
      <obj>/home/akhila/fuzzer_packages/fuzzedpackages/relSim/inst/testfiles/IBS_Caller/IBS_Caller_DeepState_TestHarness</obj>
      <fn>DeepState_RunTest.isra.0</fn>
    </frame>
    <frame>
      <ip>0x41D219</ip>
      <obj>/home/akhila/fuzzer_packages/fuzzedpackages/relSim/inst/testfiles/IBS_Caller/IBS_Caller_DeepState_TestHarness</obj>
      <fn>DeepState_ForkAndRunTest</fn>
    </frame>
    <frame>
      <ip>0x41D2F4</ip>
      <obj>/home/akhila/fuzzer_packages/fuzzedpackages/relSim/inst/testfiles/IBS_Caller/IBS_Caller_DeepState_TestHarness</obj>
      <fn>DeepState_RunSavedTestCase</fn>
    </frame>
    <frame>
      <ip>0x407655</ip>
      <obj>/home/akhila/fuzzer_packages/fuzzedpackages/relSim/inst/testfiles/IBS_Caller/IBS_Caller_DeepState_TestHarness</obj>
      <fn>main</fn>
    </frame>
  </stack>
  <auxwhat>Address 0x92c92ac is 4 bytes after a block of size 7,960 alloc'd</auxwhat>
  <stack>
    <frame>
      <ip>0x483B7F3</ip>
      <obj>/usr/lib/x86_64-linux-gnu/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>malloc</fn>
    </frame>
    <frame>
      <ip>0x49D42B3</ip>
      <obj>/usr/lib/R/lib/libR.so</obj>
    </frame>
    <frame>
      <ip>0x49D5EC9</ip>
      <obj>/usr/lib/R/lib/libR.so</obj>
      <fn>Rf_allocVector3</fn>
    </frame>
    <frame>
      <ip>0x48DAAEE</ip>
      <obj>/usr/lib/R/lib/libR.so</obj>
    </frame>
    <frame>
      <ip>0x497A1D0</ip>
      <obj>/usr/lib/R/lib/libR.so</obj>
    </frame>
    <frame>
      <ip>0x4994DD7</ip>
      <obj>/usr/lib/R/lib/libR.so</obj>
      <fn>Rf_eval</fn>
    </frame>
    <frame>
      <ip>0x4996C9E</ip>
      <obj>/usr/lib/R/lib/libR.so</obj>
    </frame>
    <frame>
      <ip>0x4997B91</ip>
      <obj>/usr/lib/R/lib/libR.so</obj>
      <fn>Rf_applyClosure</fn>
    </frame>
    <frame>
      <ip>0x499A4B8</ip>
      <obj>/usr/lib/R/lib/libR.so</obj>
      <fn>R_forceAndCall</fn>
    </frame>
    <frame>
      <ip>0x48C4DB6</ip>
      <obj>/usr/lib/R/lib/libR.so</obj>
    </frame>
    <frame>
      <ip>0x49D90DE</ip>
      <obj>/usr/lib/R/lib/libR.so</obj>
    </frame>
    <frame>
      <ip>0x4979FC0</ip>
      <obj>/usr/lib/R/lib/libR.so</obj>
    </frame>
  </stack>
</error>

<error>
  <unique>0x3e3</unique>
  <tid>1</tid>
  <kind>InvalidRead</kind>
  <what>Invalid read of size 4</what>
  <stack>
    <frame>
      <ip>0x4D45E38</ip>
      <obj>/home/akhila/fuzzer_packages/fuzzedpackages/relSim/src/relSim.so</obj>
      <fn>IBS(int const*, int const*, int)</fn>
      <dir>/home/akhila/fuzzer_packages/fuzzedpackages/relSim/src</dir>
      <file>relSim.cpp</file>
      <line>156</line>
    </frame>
    <frame>
      <ip>0x40A132</ip>
      <obj>/home/akhila/fuzzer_packages/fuzzedpackages/relSim/inst/testfiles/IBS_Caller/IBS_Caller_DeepState_TestHarness</obj>
      <fn>DeepState_Test_relSim_deepstate_test_IBS_Caller_test()</fn>
      <dir>/home/akhila/fuzzer_packages/fuzzedpackages/relSim/inst/testfiles/IBS_Caller</dir>
      <file>IBS_Caller_DeepState_TestHarness.cpp</file>
      <line>31</line>
    </frame>
    <frame>
      <ip>0x409B48</ip>
      <obj>/home/akhila/fuzzer_packages/fuzzedpackages/relSim/inst/testfiles/IBS_Caller/IBS_Caller_DeepState_TestHarness</obj>
      <fn>DeepState_Run_relSim_deepstate_test_IBS_Caller_test()</fn>
      <dir>/home/akhila/fuzzer_packages/fuzzedpackages/relSim/inst/testfiles/IBS_Caller</dir>
      <file>IBS_Caller_DeepState_TestHarness.cpp</file>
      <line>13</line>
    </frame>
    <frame>
      <ip>0x41CF78</ip>
      <obj>/home/akhila/fuzzer_packages/fuzzedpackages/relSim/inst/testfiles/IBS_Caller/IBS_Caller_DeepState_TestHarness</obj>
      <fn>DeepState_RunTest.isra.0</fn>
    </frame>
    <frame>
      <ip>0x41D219</ip>
      <obj>/home/akhila/fuzzer_packages/fuzzedpackages/relSim/inst/testfiles/IBS_Caller/IBS_Caller_DeepState_TestHarness</obj>
      <fn>DeepState_ForkAndRunTest</fn>
    </frame>
    <frame>
      <ip>0x41D2F4</ip>
      <obj>/home/akhila/fuzzer_packages/fuzzedpackages/relSim/inst/testfiles/IBS_Caller/IBS_Caller_DeepState_TestHarness</obj>
      <fn>DeepState_RunSavedTestCase</fn>
    </frame>
    <frame>
      <ip>0x407655</ip>
      <obj>/home/akhila/fuzzer_packages/fuzzedpackages/relSim/inst/testfiles/IBS_Caller/IBS_Caller_DeepState_TestHarness</obj>
      <fn>main</fn>
    </frame>
  </stack>
  <auxwhat>Address 0x88bdd98 is 0 bytes after a block of size 7,960 alloc'd</auxwhat>
  <stack>
    <frame>
      <ip>0x483B7F3</ip>
      <obj>/usr/lib/x86_64-linux-gnu/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>malloc</fn>
    </frame>
    <frame>
      <ip>0x49D42B3</ip>
      <obj>/usr/lib/R/lib/libR.so</obj>
    </frame>
    <frame>
      <ip>0x49D5EAB</ip>
      <obj>/usr/lib/R/lib/libR.so</obj>
      <fn>Rf_allocVector3</fn>
    </frame>
    <frame>
      <ip>0x4968D28</ip>
      <obj>/usr/lib/R/lib/libR.so</obj>
    </frame>
    <frame>
      <ip>0x497A1D0</ip>
      <obj>/usr/lib/R/lib/libR.so</obj>
    </frame>
    <frame>
      <ip>0x4994DD7</ip>
      <obj>/usr/lib/R/lib/libR.so</obj>
      <fn>Rf_eval</fn>
    </frame>
    <frame>
      <ip>0x4996C9E</ip>
      <obj>/usr/lib/R/lib/libR.so</obj>
    </frame>
    <frame>
      <ip>0x4997B91</ip>
      <obj>/usr/lib/R/lib/libR.so</obj>
      <fn>Rf_applyClosure</fn>
    </frame>
    <frame>
      <ip>0x498450D</ip>
      <obj>/usr/lib/R/lib/libR.so</obj>
    </frame>
    <frame>
      <ip>0x4994DD7</ip>
      <obj>/usr/lib/R/lib/libR.so</obj>
      <fn>Rf_eval</fn>
    </frame>
    <frame>
      <ip>0x4996C9E</ip>
      <obj>/usr/lib/R/lib/libR.so</obj>
    </frame>
    <frame>
      <ip>0x4997B91</ip>
      <obj>/usr/lib/R/lib/libR.so</obj>
      <fn>Rf_applyClosure</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x3e4</unique>
  <tid>1</tid>
  <kind>InvalidRead</kind>
  <what>Invalid read of size 4</what>
  <stack>
    <frame>
      <ip>0x4D45E40</ip>
      <obj>/home/akhila/fuzzer_packages/fuzzedpackages/relSim/src/relSim.so</obj>
      <fn>IBS(int const*, int const*, int)</fn>
      <dir>/home/akhila/fuzzer_packages/fuzzedpackages/relSim/src</dir>
      <file>relSim.cpp</file>
      <line>157</line>
    </frame>
    <frame>
      <ip>0x40A132</ip>
      <obj>/home/akhila/fuzzer_packages/fuzzedpackages/relSim/inst/testfiles/IBS_Caller/IBS_Caller_DeepState_TestHarness</obj>
      <fn>DeepState_Test_relSim_deepstate_test_IBS_Caller_test()</fn>
      <dir>/home/akhila/fuzzer_packages/fuzzedpackages/relSim/inst/testfiles/IBS_Caller</dir>
      <file>IBS_Caller_DeepState_TestHarness.cpp</file>
      <line>31</line>
    </frame>
    <frame>
      <ip>0x409B48</ip>
      <obj>/home/akhila/fuzzer_packages/fuzzedpackages/relSim/inst/testfiles/IBS_Caller/IBS_Caller_DeepState_TestHarness</obj>
      <fn>DeepState_Run_relSim_deepstate_test_IBS_Caller_test()</fn>
      <dir>/home/akhila/fuzzer_packages/fuzzedpackages/relSim/inst/testfiles/IBS_Caller</dir>
      <file>IBS_Caller_DeepState_TestHarness.cpp</file>
      <line>13</line>
    </frame>
    <frame>
      <ip>0x41CF78</ip>
      <obj>/home/akhila/fuzzer_packages/fuzzedpackages/relSim/inst/testfiles/IBS_Caller/IBS_Caller_DeepState_TestHarness</obj>
      <fn>DeepState_RunTest.isra.0</fn>
    </frame>
    <frame>
      <ip>0x41D219</ip>
      <obj>/home/akhila/fuzzer_packages/fuzzedpackages/relSim/inst/testfiles/IBS_Caller/IBS_Caller_DeepState_TestHarness</obj>
      <fn>DeepState_ForkAndRunTest</fn>
    </frame>
    <frame>
      <ip>0x41D2F4</ip>
      <obj>/home/akhila/fuzzer_packages/fuzzedpackages/relSim/inst/testfiles/IBS_Caller/IBS_Caller_DeepState_TestHarness</obj>
      <fn>DeepState_RunSavedTestCase</fn>
    </frame>
    <frame>
      <ip>0x407655</ip>
      <obj>/home/akhila/fuzzer_packages/fuzzedpackages/relSim/inst/testfiles/IBS_Caller/IBS_Caller_DeepState_TestHarness</obj>
      <fn>main</fn>
    </frame>
  </stack>
  <auxwhat>Address 0x88bdd9c is 4 bytes after a block of size 7,960 alloc'd</auxwhat>
  <stack>
    <frame>
      <ip>0x483B7F3</ip>
      <obj>/usr/lib/x86_64-linux-gnu/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>malloc</fn>
    </frame>
    <frame>
      <ip>0x49D42B3</ip>
      <obj>/usr/lib/R/lib/libR.so</obj>
    </frame>
    <frame>
      <ip>0x49D5EAB</ip>
      <obj>/usr/lib/R/lib/libR.so</obj>
      <fn>Rf_allocVector3</fn>
    </frame>
    <frame>
      <ip>0x4968D28</ip>
      <obj>/usr/lib/R/lib/libR.so</obj>
    </frame>
    <frame>
      <ip>0x497A1D0</ip>
      <obj>/usr/lib/R/lib/libR.so</obj>
    </frame>
    <frame>
      <ip>0x4994DD7</ip>
      <obj>/usr/lib/R/lib/libR.so</obj>
      <fn>Rf_eval</fn>
    </frame>
    <frame>
      <ip>0x4996C9E</ip>
      <obj>/usr/lib/R/lib/libR.so</obj>
    </frame>
    <frame>
      <ip>0x4997B91</ip>
      <obj>/usr/lib/R/lib/libR.so</obj>
      <fn>Rf_applyClosure</fn>
    </frame>
    <frame>
      <ip>0x498450D</ip>
      <obj>/usr/lib/R/lib/libR.so</obj>
    </frame>
    <frame>
      <ip>0x4994DD7</ip>
      <obj>/usr/lib/R/lib/libR.so</obj>
      <fn>Rf_eval</fn>
    </frame>
    <frame>
      <ip>0x4996C9E</ip>
      <obj>/usr/lib/R/lib/libR.so</obj>
    </frame>
    <frame>
      <ip>0x4997B91</ip>
      <obj>/usr/lib/R/lib/libR.so</obj>
      <fn>Rf_applyClosure</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x955</unique>
  <tid>1</tid>
  <kind>UninitCondition</kind>
  <what>Conditional jump or move depends on uninitialised value(s)</what>
  <stack>
    <frame>
      <ip>0x4D455CA</ip>
      <obj>/home/akhila/fuzzer_packages/fuzzedpackages/relSim/src/relSim.so</obj>
      <fn>profIBS(int const*)</fn>
      <dir>/home/akhila/fuzzer_packages/fuzzedpackages/relSim/src</dir>
      <file>relSim.cpp</file>
      <line>13</line>
    </frame>
    <frame>
      <ip>0x4D45E59</ip>
      <obj>/home/akhila/fuzzer_packages/fuzzedpackages/relSim/src/relSim.so</obj>
      <fn>IBS(int const*, int const*, int)</fn>
      <dir>/home/akhila/fuzzer_packages/fuzzedpackages/relSim/src</dir>
      <file>relSim.cpp</file>
      <line>160</line>
    </frame>
    <frame>
      <ip>0x40A132</ip>
      <obj>/home/akhila/fuzzer_packages/fuzzedpackages/relSim/inst/testfiles/IBS_Caller/IBS_Caller_DeepState_TestHarness</obj>
      <fn>DeepState_Test_relSim_deepstate_test_IBS_Caller_test()</fn>
      <dir>/home/akhila/fuzzer_packages/fuzzedpackages/relSim/inst/testfiles/IBS_Caller</dir>
      <file>IBS_Caller_DeepState_TestHarness.cpp</file>
      <line>31</line>
    </frame>
    <frame>
      <ip>0x409B48</ip>
      <obj>/home/akhila/fuzzer_packages/fuzzedpackages/relSim/inst/testfiles/IBS_Caller/IBS_Caller_DeepState_TestHarness</obj>
      <fn>DeepState_Run_relSim_deepstate_test_IBS_Caller_test()</fn>
      <dir>/home/akhila/fuzzer_packages/fuzzedpackages/relSim/inst/testfiles/IBS_Caller</dir>
      <file>IBS_Caller_DeepState_TestHarness.cpp</file>
      <line>13</line>
    </frame>
    <frame>
      <ip>0x41CF78</ip>
      <obj>/home/akhila/fuzzer_packages/fuzzedpackages/relSim/inst/testfiles/IBS_Caller/IBS_Caller_DeepState_TestHarness</obj>
      <fn>DeepState_RunTest.isra.0</fn>
    </frame>
    <frame>
      <ip>0x41D219</ip>
      <obj>/home/akhila/fuzzer_packages/fuzzedpackages/relSim/inst/testfiles/IBS_Caller/IBS_Caller_DeepState_TestHarness</obj>
      <fn>DeepState_ForkAndRunTest</fn>
    </frame>
    <frame>
      <ip>0x41D2F4</ip>
      <obj>/home/akhila/fuzzer_packages/fuzzedpackages/relSim/inst/testfiles/IBS_Caller/IBS_Caller_DeepState_TestHarness</obj>
      <fn>DeepState_RunSavedTestCase</fn>
    </frame>
    <frame>
      <ip>0x407655</ip>
      <obj>/home/akhila/fuzzer_packages/fuzzedpackages/relSim/inst/testfiles/IBS_Caller/IBS_Caller_DeepState_TestHarness</obj>
      <fn>main</fn>
    </frame>
  </stack>
</error>

<fatal_signal>
  <tid>1</tid>
  <signo>11</signo>
  <signame>SIGSEGV</signame>
  <sicode>2</sicode>
  <event>Bad permissions for mapped region</event>
  <siaddr>0xA657000</siaddr>
  <stack>
    <frame>
      <ip>0x4D45E46</ip>
      <obj>/home/akhila/fuzzer_packages/fuzzedpackages/relSim/src/relSim.so</obj>
      <fn>IBS(int const*, int const*, int)</fn>
      <dir>/home/akhila/fuzzer_packages/fuzzedpackages/relSim/src</dir>
      <file>relSim.cpp</file>
      <line>158</line>
    </frame>
    <frame>
      <ip>0x40A132</ip>
      <obj>/home/akhila/fuzzer_packages/fuzzedpackages/relSim/inst/testfiles/IBS_Caller/IBS_Caller_DeepState_TestHarness</obj>
      <fn>DeepState_Test_relSim_deepstate_test_IBS_Caller_test()</fn>
      <dir>/home/akhila/fuzzer_packages/fuzzedpackages/relSim/inst/testfiles/IBS_Caller</dir>
      <file>IBS_Caller_DeepState_TestHarness.cpp</file>
      <line>31</line>
    </frame>
    <frame>
      <ip>0x409B48</ip>
      <obj>/home/akhila/fuzzer_packages/fuzzedpackages/relSim/inst/testfiles/IBS_Caller/IBS_Caller_DeepState_TestHarness</obj>
      <fn>DeepState_Run_relSim_deepstate_test_IBS_Caller_test()</fn>
      <dir>/home/akhila/fuzzer_packages/fuzzedpackages/relSim/inst/testfiles/IBS_Caller</dir>
      <file>IBS_Caller_DeepState_TestHarness.cpp</file>
      <line>13</line>
    </frame>
    <frame>
      <ip>0x41CF78</ip>
      <obj>/home/akhila/fuzzer_packages/fuzzedpackages/relSim/inst/testfiles/IBS_Caller/IBS_Caller_DeepState_TestHarness</obj>
      <fn>DeepState_RunTest.isra.0</fn>
    </frame>
    <frame>
      <ip>0x41D219</ip>
      <obj>/home/akhila/fuzzer_packages/fuzzedpackages/relSim/inst/testfiles/IBS_Caller/IBS_Caller_DeepState_TestHarness</obj>
      <fn>DeepState_ForkAndRunTest</fn>
    </frame>
    <frame>
      <ip>0x41D2F4</ip>
      <obj>/home/akhila/fuzzer_packages/fuzzedpackages/relSim/inst/testfiles/IBS_Caller/IBS_Caller_DeepState_TestHarness</obj>
      <fn>DeepState_RunSavedTestCase</fn>
    </frame>
    <frame>
      <ip>0x407655</ip>
      <obj>/home/akhila/fuzzer_packages/fuzzedpackages/relSim/inst/testfiles/IBS_Caller/IBS_Caller_DeepState_TestHarness</obj>
      <fn>main</fn>
    </frame>
  </stack>
</fatal_signal>


<status>
  <state>FINISHED</state>
  <time>00:00:00:09.270 </time>
</status>

<errorcounts>
  <pair>
    <count>1204902</count>
    <unique>0x3e4</unique>
  </pair>
  <pair>
    <count>1204871</count>
    <unique>0x3e3</unique>
  </pair>
  <pair>
    <count>4053</count>
    <unique>0x955</unique>
  </pair>
  <pair>
    <count>37304</count>
    <unique>0x0</unique>
  </pair>
  <pair>
    <count>39720</count>
    <unique>0x1</unique>
  </pair>
  <pair>
    <count>25704</count>
    <unique>0x2</unique>
  </pair>
  <pair>
    <count>997575</count>
    <unique>0x4</unique>
  </pair>
  <pair>
    <count>997438</count>
    <unique>0x3</unique>
  </pair>
</errorcounts>

<suppcounts>
</suppcounts>

</valgrindoutput>


<status>
  <state>FINISHED</state>
  <time>00:00:00:09.928 </time>
</status>

<errorcounts>
</errorcounts>

<suppcounts>
</suppcounts>

</valgrindoutput>

