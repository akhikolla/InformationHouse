// AUTOMATICALLY GENERATED BY RCPPDEEPSTATE PLEASE DO NOT EDIT BY HAND, INSTEAD EDIT
// rcpp_ksNN_DeepState_TestHarness_generation.cpp and rcpp_ksNN_DeepState_TestHarness_checks.cpp

#include <fstream>
#include <RInside.h>
#include <iostream>
#include <RcppDeepState.h>
#include <qs.h>
#include <DeepState.hpp>

List rcpp_ksNN(NumericVector Label, NumericVector Distance, double L_C);

TEST(ksNN_deepstate_test,rcpp_ksNN_test){
  RInside R;
  std::cout << "input starts" << std::endl;
  NumericVector Label  = RcppDeepState_NumericVector();
  qs::c_qsave(Label,"/home/akhila/fuzzer_packages/fuzzedpackages/ksNN/inst/testfiles/rcpp_ksNN/inputs/Label.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "Label values: "<< Label << std::endl;
  NumericVector Distance  = RcppDeepState_NumericVector();
  qs::c_qsave(Distance,"/home/akhila/fuzzer_packages/fuzzedpackages/ksNN/inst/testfiles/rcpp_ksNN/inputs/Distance.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "Distance values: "<< Distance << std::endl;
  NumericVector L_C(1);
  L_C[0]  = RcppDeepState_double();
  qs::c_qsave(L_C,"/home/akhila/fuzzer_packages/fuzzedpackages/ksNN/inst/testfiles/rcpp_ksNN/inputs/L_C.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "L_C values: "<< L_C << std::endl;
  std::cout << "input ends" << std::endl;
  try{
    rcpp_ksNN(Label,Distance,L_C[0]);
  }
  catch(Rcpp::exception& e){
    std::cout<<"Exception Handled"<<std::endl;
  }
}
