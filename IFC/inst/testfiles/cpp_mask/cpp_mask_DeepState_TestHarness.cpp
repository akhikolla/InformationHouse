// AUTOMATICALLY GENERATED BY RCPPDEEPSTATE PLEASE DO NOT EDIT BY HAND, INSTEAD EDIT
// cpp_mask_DeepState_TestHarness_generation.cpp and cpp_mask_DeepState_TestHarness_checks.cpp

#include <fstream>
#include <RInside.h>
#include <iostream>
#include <RcppDeepState.h>
#include <qs.h>
#include <DeepState.hpp>

Rcpp::NumericMatrix cpp_mask(const Rcpp::NumericMatrix A, const Rcpp::NumericMatrix B, const Rcpp::NumericMatrix mask);

TEST(IFC_deepstate_test,cpp_mask_test){
  RInside R;
  std::cout << "input starts" << std::endl;
  NumericMatrix A  = RcppDeepState_NumericMatrix();
  qs::c_qsave(A,"/home/akhila/fuzzer_packages/fuzzedpackages/IFC/inst/testfiles/cpp_mask/inputs/A.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "A values: "<< A << std::endl;
  NumericMatrix B  = RcppDeepState_NumericMatrix();
  qs::c_qsave(B,"/home/akhila/fuzzer_packages/fuzzedpackages/IFC/inst/testfiles/cpp_mask/inputs/B.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "B values: "<< B << std::endl;
  NumericMatrix mask  = RcppDeepState_NumericMatrix();
  qs::c_qsave(mask,"/home/akhila/fuzzer_packages/fuzzedpackages/IFC/inst/testfiles/cpp_mask/inputs/mask.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "mask values: "<< mask << std::endl;
  std::cout << "input ends" << std::endl;
  try{
    cpp_mask(A,B,mask);
  }
  catch(Rcpp::exception& e){
    std::cout<<"Exception Handled"<<std::endl;
  }
}
