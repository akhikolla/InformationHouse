// AUTOMATICALLY GENERATED BY RCPPDEEPSTATE PLEASE DO NOT EDIT BY HAND, INSTEAD EDIT
// cpp_M_HSV2RGB_DeepState_TestHarness_generation.cpp and cpp_M_HSV2RGB_DeepState_TestHarness_checks.cpp

#include <fstream>
#include <RInside.h>
#include <iostream>
#include <RcppDeepState.h>
#include <qs.h>
#include <DeepState.hpp>

Rcpp::NumericVector cpp_M_HSV2RGB(const Rcpp::NumericMatrix mat, const double h, const double s);

TEST(IFC_deepstate_test,cpp_M_HSV2RGB_test){
  RInside R;
  std::cout << "input starts" << std::endl;
  NumericMatrix mat  = RcppDeepState_NumericMatrix();
  qs::c_qsave(mat,"/home/akhila/fuzzer_packages/fuzzedpackages/IFC/inst/testfiles/cpp_M_HSV2RGB/inputs/mat.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "mat values: "<< mat << std::endl;
  NumericVector h(1);
  h[0]  = RcppDeepState_double();
  qs::c_qsave(h,"/home/akhila/fuzzer_packages/fuzzedpackages/IFC/inst/testfiles/cpp_M_HSV2RGB/inputs/h.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "h values: "<< h << std::endl;
  NumericVector s(1);
  s[0]  = RcppDeepState_double();
  qs::c_qsave(s,"/home/akhila/fuzzer_packages/fuzzedpackages/IFC/inst/testfiles/cpp_M_HSV2RGB/inputs/s.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "s values: "<< s << std::endl;
  std::cout << "input ends" << std::endl;
  try{
    cpp_M_HSV2RGB(mat,h[0],s[0]);
  }
  catch(Rcpp::exception& e){
    std::cout<<"Exception Handled"<<std::endl;
  }
}
