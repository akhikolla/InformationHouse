// AUTOMATICALLY GENERATED BY RCPPDEEPSTATE PLEASE DO NOT EDIT BY HAND, INSTEAD EDIT
// bsbasesCpp_DeepState_TestHarness_generation.cpp and bsbasesCpp_DeepState_TestHarness_checks.cpp

#include <fstream>
#include <RInside.h>
#include <iostream>
#include <RcppDeepState.h>
#include <qs.h>
#include <DeepState.hpp>

NumericVector bsbasesCpp(NumericVector xs, NumericVector kns, int order);

TEST(ibs_deepstate_test,bsbasesCpp_test){
  RInside R;
  std::cout << "input starts" << std::endl;
  NumericVector xs  = RcppDeepState_NumericVector();
  qs::c_qsave(xs,"/home/akhila/fuzzer_packages/fuzzedpackages/ibs/inst/testfiles/bsbasesCpp/inputs/xs.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "xs values: "<< xs << std::endl;
  NumericVector kns  = RcppDeepState_NumericVector();
  qs::c_qsave(kns,"/home/akhila/fuzzer_packages/fuzzedpackages/ibs/inst/testfiles/bsbasesCpp/inputs/kns.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "kns values: "<< kns << std::endl;
  IntegerVector order(1);
  order[0]  = RcppDeepState_int();
  qs::c_qsave(order,"/home/akhila/fuzzer_packages/fuzzedpackages/ibs/inst/testfiles/bsbasesCpp/inputs/order.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "order values: "<< order << std::endl;
  std::cout << "input ends" << std::endl;
  try{
    bsbasesCpp(xs,kns,order[0]);
  }
  catch(Rcpp::exception& e){
    std::cout<<"Exception Handled"<<std::endl;
  }
}
